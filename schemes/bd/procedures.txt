CREATE OR REPLACE PACKAGE ADM_INFI.INFI_BCV
  IS
--
-- To modify this template, edit file PKGSPEC.TXT in TEMPLATE
-- directory of SQL Navigator
-- Generated 14/05/2012
-- Creado por : Alexander Rincón el 14/05/2012
-- MODIFICATION HISTORY
-- Person      Date    Comments
-- ---------   ------  ------------------------------------------
  -- Enter package declarations as shown below
  -- Variables Globales para el Paquete ---
   archivo            blob;
-- Archivo de Clientes con Posicion en INFI --
   PROCEDURE posicion (pfecpro    IN      DATE); --- Estatus de Ejecusión del Proceso '0' Ok,'1' Rechazos

END; -- Package spec
/


CREATE OR REPLACE PACKAGE ADM_INFI."INSERTAR" 
  IS
-- Purpose: contener todos los procesos de inserción que se realicen en 
-- de datos
--
-- MODIFICATION HISTORY
-- Creado              Fecha       Comments
-- Alexander Rincón    11/07/2011  Procedimiento para realizar inserciones de
--                                 las diferentes tabla de los procesos a manejar 
--                                 en base de datos.
---------------------------------------------------------------------------------       
-- Variables de los tipos de Cartas según lógica de Negocio ---
	/**Carta mandato*/
    CARTA_MANDATO           number(2) := 1;
	/**Carta mandato con recompra*/	
	CARTA_MANDATO_WI        number(2) := 2;
	/**Carta de adjudicación con recompra*/	
	CARTA_ADJ_WI            number(2) := 3;
	/**Carta de adjudicación*/	
	CARTA_ADJ               number(2) := 4;
	/**Carta de adjudicación con reintegro*/
	CARTA_ADJ_REINTEGRO     number(2) := 5;
	/**Carta de adjudicación con reintegro y recompra*/
	CARTA_ADJ_REINTEGRO_WI  number(2) := 6;
	/**Carta de adjudicación con reintegro y recompra*/
	CARTA_ADJ_DEBITO        number(2) := 7;
	/**Carta que debe ser mostarda antes de tomar la orden de sitme*/
	CARTA_ANT_ORDEN         number(2) := 8;
-- Variables Globales para las inserciones condicionadas --
--- Variables del tipo de documento a ser asignado a la orden  ---
--- en la tabla 208 --
   var_documentos           infi_tb_115_ui_doc%rowtype;
   datos_documentos         infi_tb_208_ordenes_documentos%rowtype;
-- table para memoria y manejo del ID de los Documentos  ---   
--   type arr_documentos is varray(10) of varchar2(20);
   TYPE arr_documentos IS TABLE OF VARCHAR2(100) INDEX BY VARCHAR2(64);
   valores_documentos       arr_documentos;

-- Funcion que inserta los datos de una orden en la tabla INFI_TB_204_ORDENES 
-- retorna el id de la orden creada 
 PROCEDURE infi_tb_807( registros IN 	   infi_tb_807_procesos%rowtype,
   			 			  numseq	OUT    INFI_TB_807_PROCESOS.EJECUCION_ID%type);
                          
   PROCEDURE infi_tb_207
     ( registros IN   infi_tb_207_ordenes_operacion%rowtype,
       param1    IN   varchar2 DEFAULT '0');

-- Procedimiento para ADM_INFI.insertar en la tabla INFI_TB_208_ORDENES_DOCUMENTOS
-- las cuales son las que se envian al Cobro o reintegro en los procesos
-- de Liquidación o Adjudicación.
  /*PROCEDURE infi_tb_208
     ( registros    IN        infi_tb_115_ui_doc%rowtype,
       datos        IN OUT    infi_tb_208_ordenes_documentos%rowtype);*/

-- Procedimiento para ADM_INFI.insertar en la tabla INFI_TB_212_ORDENES_DATAEXT
-- para los campos adicionales de la orden para el caso de SITME
-- BROKER Y CONSECUTIVO en el proceso de Adjudicación.      
END; -- Package spec
/


CREATE OR REPLACE PACKAGE ADM_INFI.Menudeo AS

/******************************************************************************
   NAME:       Menudeo
   PURPOSE:  Manejo de las Operaciones Capturadas por Terminal Financieros
            resguardadas en la aplicación de Moneda Extranjera(ME) tabla XXXX
            Job XXX con una frecuencia de envio de archivo programada en
            CTL XXXX.

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        21/05/2019             1. Created this package.
******************************************************************************/
   operDia          utl_file.file_type;    --- Operaciones Leidas enviadas por ME
   operLog          utl_file.file_type;    --- Archivo de salida (LOG) de las operaciones Leidas en operDia
   archLog          utl_file.file_type;    --- Archivo de salida (LOG) de la Lectura del Archivo operDia --
   PRIMARY_DUPLICATE             EXCEPTION;  --- Manejo de la clave duplicada de los registro en la tabla INFI_TB_234_VC_DIVISAS
/********* Parametros del PRODUCTO MENUDEO **********/
   producto                      varchar2(100) := 'MENUDEO';
   recordLineLogs                varchar2(32000);   --- Linea de Registo del archivo para el resultado del Logs.
   recordLine                    varchar2(32000);   --- Linea de Registo del archivo
   contRecord                    number(9) := 1;  --- Cantidad de registro grabados para controlar COMMIT
  /** Procedimiento para registrar las operaciones de Compra y Venta de Divisas
      en EFECTUIVO en la RED COMERCIAL **/
  PROCEDURE ProcessInsertME(tableDivisas  IN  INFI_TB_234_VC_DIVISAS%ROWTYPE);
  /** Función para buscar los parametros por Grupo y Nombre de Parametro segun el Producto **/
  FUNCTION getParametrosSistema(fGrupo     IN  INFI_TB_001_PARAM_GRUPO.PARGRP_NOMBRE%TYPE,
                             fParametro IN  INFI_TB_002_PARAM_TIPOS.PARTIP_NOMBRE_PARAMETRO%TYPE)
                              RETURN INFI_TB_002_PARAM_TIPOS.PARVAL_VALOR%TYPE;
  /** Procedimiento para leer Archivos **/
  PROCEDURE ProcessLoadOperationME;

END Menudeo;
/


CREATE OR REPLACE PACKAGE ADM_INFI.PARAMETROS_CANAL_EXTERNO
AS
   /* TODO enter package declarations (types, exceptions, methods etc) here */
   /* Creado: Alexander Rincon
      Fecha:  08/02/2015
      Modificado:
      Fecha Modificacion:
      TODO enter package declarations (types, exceptions, methods etc) here */
   ptipprodcuto  INFI_TB_101_INST_FINANCIEROS.tipo_producto_id%type;   
   PROCEDURE mercado 

/*   Procedimiento para Verificar:
     1.- Verificar los parametros de Apertura de Mercado del Canal
     2.- De estar abierto retornar las reglas de negocio
     una desde el Canal de Clavenet.
     Parámetros:
     1.- Entrada ---> Canal INFI('I') O CLAVENET ('C')  ----> pcanal
     2.- Entrada ---> Fecha proceso incio Configurada en la Unidad de Inversión     ----> pfechapro
     4.- Entrada ---> Fecha de Cierre Configurada en la Unidad de Inversión ----> ffecha_fin
     3.- Salida  ---> Fecha de solicitud                ----> ffecha_registro
     4.- Salida  ---> Número de Solcitud                ----> fnum_solicitud
     5.- Salida  ---> Existe SI('1') NO('0') error('2') ----> fexiste
     6.- Salida  ---> Error Oracle si fexiste = '2' */
   (
      pcanal      IN       NUMBER,
      --pfechapro   IN       DATE,
      pid         IN       VARCHAR2,
      pstatus     OUT      VARCHAR2,
      perror      OUT      NUMBER,
      pmultiplo   OUT      NUMBER,
      phorainicio OUT      VARCHAR2,
      phorafin    OUT      VARCHAR2,
      ptasademanda       OUT      VARCHAR2,
      ptasaoferta  OUT     VARCHAR2,
      pmontomaximo OUT     VARCHAR2
   );
   
      procedure pruebas(
         pcanal      IN       NUMBER,
         pfechapro   IN       DATE,
         pid         IN       VARCHAR2,
         ptiposol    IN       VARCHAR2,
         pstatus     OUT     VARCHAR2);
      
      procedure confirmacion(
      pid     in   varchar2,
      ptasa   IN   NUMBER,
      PMONTO  IN   NUMBER,
      PCANAL  IN   NUMBER,
      PTIPOSOLI IN VARCHAR2,
      PCUENTA1 IN  VARCHAR2,
      PCUENTA2 IN  VARCHAR2,
      PSTATUS OUT  VARCHAR2,
      PCOMISION OUT varchar2,
      PPCTCOMISION OUT varchar2,
      perror      OUT      NUMBER
      );   
      
   PROCEDURE TOMA_DE_ORDEN(
      PTIPOSOLI             IN   VARCHAR,
      PIDORDEN              IN   NUMBER,
      PTASA                 IN   NUMBER,
      PMONTO                IN   NUMBER,
      PCANAL                IN   NUMBER,
      PID                   IN   VARCHAR2,
      PFECHVENCIMIENTOID    IN   DATE,
      PNOMBRECLI            IN   VARCHAR2,
      PCORREO               IN   VARCHAR2,
      PNUMBLOQUEO           IN   VARCHAR2,
      PIDCONCEPTO           IN   NUMBER,
      PCUENTABFS            IN   VARCHAR2,
      PCUENTANUM            IN   VARCHAR2,
      PCTABANCO             IN   VARCHAR2,
      PCTADIRECCION         IN   VARCHAR2,
      PCTABITSWIFT          IN   VARCHAR2,
      PTELEFONO             IN   VARCHAR2,
      PTELEFONO1            IN   VARCHAR2,
      PTELEFONO2            IN   VARCHAR2,
      PCTADIRECCIONC        IN   VARCHAR2,
      PDIDCANAL             IN   VARCHAR2,
      PCODPAISORIGEN        IN   VARCHAR2,
      PPAISORIGEN           IN   VARCHAR2,
      PCODESTADO            IN   VARCHAR2,
      PESTADO               IN   VARCHAR2,
      PCODCIUDAD            IN   VARCHAR2,
      PCIUDAD               IN   VARCHAR2,
      PCTAABONO             IN   VARCHAR2,
      PCTAABONOMONEDA       IN   VARCHAR2,
      PIDPRODUCTO           IN   VARCHAR2,
      PNOMSUBASTA           IN   VARCHAR2,
      PORIGENFONDO          IN   VARCHAR2,
      PDESTINOFONDO         IN   VARCHAR2,
      PSTATUS               OUT  VARCHAR2,
      PERROR                OUT  NUMBER
      );
         
END parametros_canal_externo;
/


CREATE OR REPLACE PACKAGE ADM_INFI.pkgCursorType
AS
TYPE cursorType IS REF cursor;
END;
/


CREATE OR REPLACE PACKAGE ADM_INFI.PK_INFI_CRUD
  IS
--
-- To modify this template, edit file PKGSPEC.TXT in TEMPLATE 
-- directory of SQL Navigator
--
-- Purpose: Paquete para el manejo de entidades de la aplicacion INFI 
-- 
-- MODIFICATION HISTORY
-- Person      Date         Comments
-- Daniel Arevalo 30/06/2017   Modificacion 

-- ---------   ------  ------------------------------------------       
   -- Enter package declarations as shown below

   --variable_name   datatype;
   
             
   
   v_secuencia_ordenes SEQUENCE_NUMBERS.NEXT_ID%type;
   v_secuencia_operacion SEQUENCE_NUMBERS.NEXT_ID%type;
   v_secuencia_cliente SEQUENCE_NUMBERS.NEXT_ID%type;
   CRUD_UNEXPECTED_EXCEPTION EXCEPTION;
   CRUD_VALIDATION_EXCEPTION EXCEPTION;
   CRUD_MSJ_EXCEPTION VARCHAR2(255);
   flag_sent_correc NUMBER:=0;--Variable que indica si una sentencia de actualizacion es correcta (1 sentencia Correcta 0 sentencia incorrecta)
      
   MSJ_EXCEPTION VARCHAR2(255);
   NOMBRE_SP VARCHAR2(50); 
    
   PROCEDURE SP_CREAR_ORDEN(p_UNIINV_ID               IN INFI_TB_204_ORDENES.UNIINV_ID%TYPE,
                                                      p_CLIENT_ID               IN INFI_TB_204_ORDENES.CLIENT_ID%TYPE,
                                                      p_ORDSTA_ID               IN INFI_TB_204_ORDENES.ORDSTA_ID%TYPE,
                                                      p_SISTEMA_ID              IN INFI_TB_204_ORDENES.SISTEMA_ID%TYPE,
                                                      p_EMPRES_ID               IN INFI_TB_204_ORDENES.EMPRES_ID%TYPE,
                                                      p_CONTRAPARTE             IN INFI_TB_204_ORDENES.CONTRAPARTE%TYPE,
                                                      p_TRANSA_ID               IN INFI_TB_204_ORDENES.TRANSA_ID%TYPE,
                                                      p_ENVIADO                 IN INFI_TB_204_ORDENES.ENVIADO%TYPE,
                                                      p_ORDENE_CTE_SEG_BCO      IN INFI_TB_204_ORDENES.ORDENE_CTE_SEG_BCO%TYPE,
                                                      p_ORDENE_CTE_SEG_SEG      IN INFI_TB_204_ORDENES.ORDENE_CTE_SEG_SEG%TYPE,
                                                      p_ORDENE_CTE_SEG_SUB      IN INFI_TB_204_ORDENES.ORDENE_CTE_SEG_SUB%TYPE,
                                                      p_ORDENE_CTE_SEG_INFI     IN INFI_TB_204_ORDENES.ORDENE_CTE_SEG_INFI%TYPE,
                                                      p_ORDENE_PED_FE_ORDEN     IN INFI_TB_204_ORDENES.ORDENE_PED_FE_ORDEN%TYPE,
                                                      p_ORDENE_PED_FE_VALOR     IN INFI_TB_204_ORDENES.ORDENE_PED_FE_VALOR%TYPE,
                                                      p_ORDENE_PED_MONTO        IN INFI_TB_204_ORDENES.ORDENE_PED_MONTO%TYPE,
                                                      p_ORDENE_PED_TOTAL_PEND   IN INFI_TB_204_ORDENES.ORDENE_PED_TOTAL_PEND%TYPE,
                                                      p_ORDENE_PED_TOTAL        IN INFI_TB_204_ORDENES.ORDENE_PED_TOTAL%TYPE,
                                                      p_ORDENE_PED_INT_CAIDOS   IN INFI_TB_204_ORDENES.ORDENE_PED_INT_CAIDOS%TYPE,
                                                      p_BLOTER_ID               IN INFI_TB_204_ORDENES.BLOTER_ID%TYPE,
                                                      p_ORDENE_PED_CTA_BSNRO    IN INFI_TB_204_ORDENES.ORDENE_PED_CTA_BSNRO%TYPE,
                                                      p_ORDENE_PED_CTA_BSTIP    IN INFI_TB_204_ORDENES.ORDENE_PED_CTA_BSTIP%TYPE,
                                                      p_CTECTA_NUMERO           IN INFI_TB_204_ORDENES.CTECTA_NUMERO%TYPE,
                                                      p_ORDENE_PED_PRECIO       IN INFI_TB_204_ORDENES.ORDENE_PED_PRECIO%TYPE,
                                                      p_ORDENE_PED_RENDIMIENTO  IN INFI_TB_204_ORDENES.ORDENE_PED_RENDIMIENTO%TYPE,
                                                      p_ORDENE_PED_IN_BDV       IN INFI_TB_204_ORDENES.ORDENE_PED_IN_BDV%TYPE,
                                                      p_MONEDA_ID               IN INFI_TB_204_ORDENES.MONEDA_ID%TYPE,
                                                      p_ORDENE_PED_RCP_PRECIO   IN INFI_TB_204_ORDENES.ORDENE_PED_RCP_PRECIO%TYPE,
                                                      p_ORDENE_ADJ_MONTO        IN INFI_TB_204_ORDENES.ORDENE_ADJ_MONTO%TYPE,
                                                      p_ORDENE_USR_NOMBRE       IN INFI_TB_204_ORDENES.ORDENE_USR_NOMBRE%TYPE,
                                                      p_ORDENE_USR_CEN_CONTABLE IN INFI_TB_204_ORDENES.ORDENE_USR_CEN_CONTABLE%TYPE,
                                                      p_ORDENE_USR_SUCURSAL     IN INFI_TB_204_ORDENES.ORDENE_USR_SUCURSAL%TYPE,
                                                      p_ORDENE_USR_TERMINAL     IN INFI_TB_204_ORDENES.ORDENE_USR_TERMINAL%TYPE,
                                                      p_ORDENE_VEH_TOM          IN INFI_TB_204_ORDENES.ORDENE_VEH_TOM%TYPE,
                                                      p_ORDENE_VEH_COL          IN INFI_TB_204_ORDENES.ORDENE_VEH_COL%TYPE,
                                                      p_ORDENE_VEH_REC          IN INFI_TB_204_ORDENES.ORDENE_VEH_REC%TYPE,
                                                      p_ORDENE_EJEC_ID          IN INFI_TB_204_ORDENES.ORDENE_EJEC_ID%TYPE,
                                                      p_ORDENE_FE_ULT_ACT       IN INFI_TB_204_ORDENES.ORDENE_FE_ULT_ACT%TYPE,
                                                      p_ORDENE_PED_COMISIONES   IN INFI_TB_204_ORDENES.ORDENE_PED_COMISIONES%TYPE,
                                                      p_ORDENE_FINANCIADO       IN INFI_TB_204_ORDENES.ORDENE_FINANCIADO%TYPE,
                                                      p_EJECUCION_ID            IN INFI_TB_204_ORDENES.EJECUCION_ID%TYPE,
                                                      p_ORDENE_TASA_POOL        IN INFI_TB_204_ORDENES.ORDENE_TASA_POOL%TYPE,
                                                      p_ORDENE_GANANCIA_RED     IN INFI_TB_204_ORDENES.ORDENE_GANANCIA_RED%TYPE,
                                                      p_ORDENE_COMISION_OFICINA IN INFI_TB_204_ORDENES.ORDENE_COMISION_OFICINA%TYPE,
                                                      p_ORDENE_COMISION_OPERACION  IN INFI_TB_204_ORDENES.ORDENE_COMISION_OPERACION%TYPE,
                                                      p_ORDENE_OPERAC_PEND         IN INFI_TB_204_ORDENES.ORDENE_OPERAC_PEND%TYPE,
                                                      p_ORDENE_ID_RELACION         IN INFI_TB_204_ORDENES.ORDENE_ID_RELACION%TYPE,
                                                      p_ORDENE_TASA_CAMBIO         IN INFI_TB_204_ORDENES.ORDENE_TASA_CAMBIO%TYPE,
                                                      p_CONCEPTO_ID                IN INFI_TB_204_ORDENES.CONCEPTO_ID%TYPE,
                                                      p_ORDENE_OBSERVACION         IN INFI_TB_204_ORDENES.ORDENE_OBSERVACION%TYPE,
                                                      p_TIPO_PRODUCTO_ID           IN INFI_TB_204_ORDENES.TIPO_PRODUCTO_ID%TYPE,
                                                      p_CTA_ABONO                  IN INFI_TB_204_ORDENES.CTA_ABONO%TYPE,                                                      
                                                      p_PORC_COMISION_IGTF         IN INFI_TB_204_ORDENES.ORDENE_PED_PORC_COMISION_IGTF%TYPE,
                                                      p_COMISION_IGTF              IN INFI_TB_204_ORDENES.ORDENE_PED_COMISION_IGTF%TYPE,
                                                      p_ORDENE_ID                  OUT INFI_TB_204_ORDENES.ORDENE_ID%TYPE);                                                         
   PROCEDURE SP_CREAR_OPERACION(p_ORDENE_ID              IN INFI_TB_207_ORDENES_OPERACION.ORDENE_ID%TYPE,                                                         
                                                         p_TRNFIN_ID              IN INFI_TB_207_ORDENES_OPERACION.TRNFIN_ID%TYPE,
                                                         p_STATUS_OPERACION       IN INFI_TB_207_ORDENES_OPERACION.STATUS_OPERACION%TYPE,
                                                         p_APLICA_REVERSO         IN INFI_TB_207_ORDENES_OPERACION.APLICA_REVERSO%TYPE,
                                                         p_MONTO_OPERACION        IN INFI_TB_207_ORDENES_OPERACION.MONTO_OPERACION%TYPE,
                                                         p_TASA                   IN INFI_TB_207_ORDENES_OPERACION.TASA%TYPE,
                                                         p_FECHA_APLICAR          IN INFI_TB_207_ORDENES_OPERACION.FECHA_APLICAR%TYPE,
                                                         p_FECHA_PROCESADA        IN INFI_TB_207_ORDENES_OPERACION.FECHA_PROCESADA%TYPE,
                                                         p_ORDENE_OPERACION_ERROR IN INFI_TB_207_ORDENES_OPERACION.ORDENE_OPERACION_ERROR%TYPE,
                                                         p_SERIAL                 IN INFI_TB_207_ORDENES_OPERACION.SERIAL%TYPE,
                                                         p_IN_COMISION            IN INFI_TB_207_ORDENES_OPERACION.IN_COMISION%TYPE,
                                                         p_MONEDA_ID              IN INFI_TB_207_ORDENES_OPERACION.MONEDA_ID%TYPE,
                                                         p_CTECTA_NUMERO          IN INFI_TB_207_ORDENES_OPERACION.CTECTA_NUMERO%TYPE,
                                                         p_OPERACION_NOMBRE       IN INFI_TB_207_ORDENES_OPERACION.OPERACION_NOMBRE%TYPE,
                                                         p_CTECTA_NOMBRE          IN INFI_TB_207_ORDENES_OPERACION.CTECTA_NOMBRE%TYPE,
                                                         p_CTECTA_BCOCTA_BCO      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_BCO%TYPE,                                                         
                                                         p_CTECTA_BCOCTA_DIRECCION IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_DIRECCION%TYPE,
                                                         p_CTECTA_BCOCTA_SWIFT    IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_SWIFT%TYPE,
                                                         p_CTECTA_BCOCTA_BIC      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_BIC%TYPE,
                                                         p_CTECTA_BCOCTA_TELEFONO IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_TELEFONO%TYPE,
                                                         p_CTECTA_BCOCTA_ABA      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_ABA%TYPE,
                                                         p_CTECTA_BCOCTA_PAIS     IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_PAIS%TYPE,
                                                         p_CTECTA_BCOINT_BCO      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_BCO%TYPE,
                                                         p_CTECTA_BCOINT_DIRECCION IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_DIRECCION%TYPE,
                                                         p_CTECTA_BCOINT_SWIFT    IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_SWIFT%TYPE,
                                                         p_CTECTA_BCOINT_BIC      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_BIC%TYPE,
                                                         p_CTECTA_BCOINT_TELEFONO IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_TELEFONO%TYPE,
                                                         p_CTECTA_BCOINT_ABA      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_ABA%TYPE,
                                                         p_CTECTA_BCOINT_PAIS     IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_PAIS%TYPE,
                                                         p_TRNF_TIPO              IN INFI_TB_207_ORDENES_OPERACION.TRNF_TIPO%TYPE,
                                                         p_TITULO_ID              IN INFI_TB_207_ORDENES_OPERACION.TITULO_ID%TYPE,
                                                         p_CODIGO_OPERACION       IN INFI_TB_207_ORDENES_OPERACION.CODIGO_OPERACION%TYPE,
                                                         p_NUMERO_RETENCION       IN INFI_TB_207_ORDENES_OPERACION.NUMERO_RETENCION%TYPE,
                                                         p_ORDENE_RELAC_OPERACION_ID IN INFI_TB_207_ORDENES_OPERACION.ORDENE_RELAC_OPERACION_ID%TYPE,
                                                         p_FECHA_INICIO_CP        IN INFI_TB_207_ORDENES_OPERACION.FECHA_INICIO_CP%TYPE,
                                                         p_FECHA_FIN_CP           IN INFI_TB_207_ORDENES_OPERACION.FECHA_FIN_CP%TYPE,
                                                         p_IN_COMISION_INVARIABLE IN INFI_TB_207_ORDENES_OPERACION.IN_COMISION_INVARIABLE%TYPE);
                                                         
PROCEDURE SP_CREAR_CLIENTE(p_TIPPER_ID          IN INFI_TB_201_CTES.TIPPER_ID%TYPE,
                            p_CLIENT_CEDRIF     IN INFI_TB_201_CTES.CLIENT_CEDRIF%TYPE,
                            p_CLIENT_NOMBRE     IN INFI_TB_201_CTES.CLIENT_NOMBRE%TYPE,
                            p_CLIENT_TELEFONO   IN INFI_TB_201_CTES.CLIENT_TELEFONO%TYPE,
                            p_CLIENT_CORREO_ELECTRONICO IN INFI_TB_201_CTES.CLIENT_CORREO_ELECTRONICO%TYPE,
                            p_CTESEG_ID         IN INFI_TB_201_CTES.CTESEG_ID%TYPE,
                            p_NUMERO_PERSONA    IN INFI_TB_201_CTES.NUMERO_PERSONA%TYPE,
                            p_CLIENT_ID         OUT INFI_TB_201_CTES.CLIENT_ID%TYPE);
                            
PROCEDURE SP_ACTIALIZAR_SOLICITUD_DICOM( p_NRO_SOLICITUD         IN  SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
                                         P_NRO_JORNADA          IN  SOLICITUDES_DICOM.ID_JORNADA%TYPE,
                                         P_CODIGO_RESPUESTA     IN  SOLICITUDES_DICOM.CODIGO_RESPUESTA%TYPE,
                                         p_NOMBRE_CLIENTE       IN SOLICITUDES_DICOM.NOMBRE_CLIENTE%TYPE,
                                         p_TELEFONO_CLIENTE     IN SOLICITUDES_DICOM.TELEFONO_CLIENTE%TYPE,
                                         p_CORREO_CLIENTE       IN SOLICITUDES_DICOM.CORREO_CLIENTE%TYPE,
                                         p_NRO_RET_CAPITAL      IN SOLICITUDES_DICOM.NRO_RET_CAPITAL%TYPE,
                                         p_HORA_BLOQ            IN SOLICITUDES_DICOM.HORA_BLOQ%TYPE,
                                         p_DIVISA_NACIONAL      IN SOLICITUDES_DICOM.DIVISA_NACIONAL%TYPE,
                                         p_NRO_RET_COMISION     IN SOLICITUDES_DICOM.NRO_RET_COMISION%TYPE,
                                         p_MONTO_COMISION       IN SOLICITUDES_DICOM.MONTO_COMISION%TYPE,
                                         p_PORC_COMISION        IN SOLICITUDES_DICOM.PORC_COMISION%TYPE,
                                         p_DIVISA_EXTRANJERA    IN SOLICITUDES_DICOM.DIVISA_EXTRANJERA%TYPE,
                                         p_TASA_CAMBIO          IN SOLICITUDES_DICOM.TASA_CAMBIO%TYPE,
                                         P_NRO_OPE_DEBITO       IN  SOLICITUDES_DICOM.NRO_OPE_DEBITO%TYPE,
                                         P_NRO_OPE_CREDITO      IN  SOLICITUDES_DICOM.NRO_OPE_CREDITO%TYPE,
                                         P_UNDINV_ID            IN INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%TYPE,
                                         p_ESTATUS_REGISTRO     IN  SOLICITUDES_DICOM.ESTATUS_REGISTRO %TYPE, --VALOR DE CONTROL PARA EL FLUJO DE LA SOLICITUD
                                        -- 1 INDICA QUE LA OPERACION ESTA EN BLOQUEO PREVIO  
                                        --2 INDICA QUE LA OPERACION YA FUE PROCESADA POR BCV PARA SU ADJUDICACION, O SOLO DESBLOQUEO
                                        p_COMISION_IGTF         IN SOLICITUDES_DICOM.COMISION_IGTF%TYPE,
                                        p_PORC_COMISION_IGTF    IN SOLICITUDES_DICOM.PORC_COMISION_IGTF  %TYPE                                                                     
                                         
                                         );         

PROCEDURE SP_CREAR_UNIDAD_INVERSION (
          P_UNDINV_ID                    OUT  INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%type,            
          P_UNDINV_NOMBRE                   IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_NOMBRE%type,                   
          P_UNDINV_DESCRIPCION              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_DESCRIPCION%type,              
          P_INSFIN_ID                       IN  INFI_TB_106_UNIDAD_INVERSION.INSFIN_ID%type,                       
          P_UNDINV_EMISION                  IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_EMISION%type,                  
          P_UNDINV_SERIE                    IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_SERIE%type,                    
          P_UNDINV_TASA_CAMBIO              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_TASA_CAMBIO%type,              
          P_UNDINV_FE_EMISION               IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_EMISION%type,               
          P_UNDINV_IN_VTA_EMPLEADOS         IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_IN_VTA_EMPLEADOS%type,         
          P_TPPEVA_ID                       IN  INFI_TB_106_UNIDAD_INVERSION.TPPEVA_ID%type,                       
          P_UNDINV_PRECIO_MINIMO            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_PRECIO_MINIMO%type,            
          P_UNDINV_COMENTARIOS              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_COMENTARIOS%type,              
          P_UNDINV_DOC_BDV                  IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_DOC_BDV%type,                  
          P_UNDINV_DOC_EMISOR               IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_DOC_EMISOR%type,               
          P_UNDINV_FE_ADJUDICACION          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_ADJUDICACION%type,          
          P_UNDINV_FE_LIQUIDACION           IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_LIQUIDACION%type,           
          P_UNDINV_FE_CIERRE                IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_CIERRE%type,                
          P_UNDINV_IN_RECOMPRA_NETEO        IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_IN_RECOMPRA_NETEO%type,        
          P_MONEDA_ID                       IN  INFI_TB_106_UNIDAD_INVERSION.MONEDA_ID%type,                       
          P_UNDINV_UMI_INV_TOTAL            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_INV_TOTAL%type,            
          P_UNDINV_UMI_INV_MTO_MIN          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_INV_MTO_MIN%type,          
          P_UNDINV_UMI_INV_MTO_MAX          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_INV_MTO_MAX%type,          
          P_UNDINV_UMI_UM_CANT_MIN          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_UM_CANT_MIN%type,          
          P_UNDINV_UMI_UM_CANT_MAX          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_UM_CANT_MAX%type,          
          P_UNDINV_STATUS                   IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_STATUS%type,                   
          P_AUT_USUARIO_USERID              IN  INFI_TB_106_UNIDAD_INVERSION.AUT_USUARIO_USERID%type,              
          P_AUT_USUARIO_NOMBRE              IN  INFI_TB_106_UNIDAD_INVERSION.AUT_USUARIO_NOMBRE%type,              
          P_AUT_USUARIO_ROL_NOMBRE          IN  INFI_TB_106_UNIDAD_INVERSION.AUT_USUARIO_ROL_NOMBRE%type,          
          P_AUT_ESTACION                    IN  INFI_TB_106_UNIDAD_INVERSION.AUT_ESTACION%type,                    
          P_AUT_IP                          IN  INFI_TB_106_UNIDAD_INVERSION.AUT_IP%type,                          
          P_AUT_FECHA                       IN  INFI_TB_106_UNIDAD_INVERSION.AUT_FECHA%type,                       
          P_UPD_USUARIO_USERID              IN  INFI_TB_106_UNIDAD_INVERSION.UPD_USUARIO_USERID%type,              
          P_UPD_USUARIO_NOMBRE              IN  INFI_TB_106_UNIDAD_INVERSION.UPD_USUARIO_NOMBRE%type,              
          P_UPD_USUARIO_ROL_NOMBRE          IN  INFI_TB_106_UNIDAD_INVERSION.UPD_USUARIO_ROL_NOMBRE%type,          
          P_UPD_ESTACION                    IN  INFI_TB_106_UNIDAD_INVERSION.UPD_ESTACION%type,                    
          P_UPD_IP                          IN  INFI_TB_106_UNIDAD_INVERSION.UPD_IP%type,                          
          P_UPD_FECHA                       IN  INFI_TB_106_UNIDAD_INVERSION.UPD_FECHA%type,                       
          P_EMPRES_ID                       IN  INFI_TB_106_UNIDAD_INVERSION.EMPRES_ID%type,                       
          P_UNDINV_UMI_INV_DISPONIBLE       IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_INV_DISPONIBLE%type,       
          P_UNDINV_UMI_UNIDAD               IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_UNIDAD%type,               
          P_UNDINV_PCT_MAX_FINAN            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_PCT_MAX_FINAN%type,            
          P_UNDINV_PRECIO_MAXIMO            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_PRECIO_MAXIMO%type,            
          P_UNDINV_MULTIPLOS                IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_MULTIPLOS%type,                
          P_UNDINV_IN_PEDIDO_MONTO          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_IN_PEDIDO_MONTO%type,          
          P_UNDINV_TASA_POOL                IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_TASA_POOL%type,                
          P_UNDINV_RENDIMIENTO              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_RENDIMIENTO%type,              
          P_UNDINV_MERCADO                  IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_MERCADO%type,                  
          P_UNDINV_IN_PRECIO_SUCIO          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_IN_PRECIO_SUCIO%type,          
          P_UNDINV_FE_LIQUIDACION_HORA1     IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_LIQUIDACION_HORA1%type,     
          P_UNDINV_FE_LIQUIDACION_HORA2     IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_LIQUIDACION_HORA2%type,     
          P_PAGO_IN_BCV                     IN  INFI_TB_106_UNIDAD_INVERSION.PAGO_IN_BCV%type,                     
          P_IN_COBRO_BATCH_ADJ              IN  INFI_TB_106_UNIDAD_INVERSION.IN_COBRO_BATCH_ADJ%type,              
          P_IN_COBRO_BATCH_LIQ              IN  INFI_TB_106_UNIDAD_INVERSION.IN_COBRO_BATCH_LIQ%type,              
          P_DIAS_APERTURA_CUENTA            IN  INFI_TB_106_UNIDAD_INVERSION.DIAS_APERTURA_CUENTA%type,            
          P_INDC_PERMITE_CANCELACION        IN  INFI_TB_106_UNIDAD_INVERSION.INDC_PERMITE_CANCELACION%type,        
          P_UNDINV_ACTIVE                   IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_ACTIVE%type,                  
          P_MONTO_ACUMULADO_SOLIC           IN  INFI_TB_106_UNIDAD_INVERSION.MONTO_ACUMULADO_SOLIC%type,           
          P_TIPO_NEGOCIO                    IN  INFI_TB_106_UNIDAD_INVERSION.TIPO_NEGOCIO%type,                    
          P_NRO_JORNADA                     IN  INFI_TB_106_UNIDAD_INVERSION.NRO_JORNADA%type,                     
          P_UNDINV_PERIODO_VENTA            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_PERIODO_VENTA%type,            
          P_UNDINV_MULTIPLOS_EFECTIVO       IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_MULTIPLOS_EFECTIVO%type,       
          P_UNDINV_UMAX_UNIDAD              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMAX_UNIDAD%type,              
          P_UNDINV_TASA_CAMBIO_OFER         IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_TASA_CAMBIO_OFER%type,         
          P_COMISION_IGTF                   IN  INFI_TB_106_UNIDAD_INVERSION.COMISION_IGTF%type,                   
          P_TIPO_SOLICITUD                  IN  INFI_TB_106_UNIDAD_INVERSION.TIPO_SOLICITUD%type,
          p_TIPO_PROCESO                    IN  INFI_TB_106_UNIDAD_INVERSION.CONTROL_DES%TYPE --PARAMETRO CREADO PARA EL MANEJO DEL NUEVO PASO EN EL FLUJO DE 
          --DICOM - 0 INDICA QUE SOLO SE CREARAN LOS REGISTROS DE BLOQUEO Y DESBLOQUEO  
          --1 INDICA QUE SON OPERACIONES EN FIRNA, A LAS CUALES SE LES CREARAN LOS REGISTROS
          --DE DEBITO Y CREDITO TANTO EN DIVISAS COMOM EN BOLIVARES          
          
          );

        --CAMBIOS DICOM 2018 LENIN RAMIREZ / JOSE GOMEZ 
        --CREACION DE UPDATE SOBRE LA TABLA INFI_TB_106_UNIDAD_INVERSION PARA COLOCAR LA UNIDAD EN ESTATUS 1
        --LO CUAL INDICA QUE EL REGISTRO YA FUE PROCESADO POR DICOM Y SE OBTUVO UNA RESPUESTA SOBRE SU ORDEN  
                          
PROCEDURE SP_ACTUALIZ_ESTATUS_ORDEN_204 (
          P_UNDINV_ID                    IN   INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%type,            
          p_ORDENE_ID  INFI_TB_204_ORDENES.ORDENE_ID%TYPE,
          v_Estatus VARCHAR2
          );

        --CAMBIOS DICOM 2018 LENIN RAMIREZ / JOSE GOMEZ 
        --CREACION DE UPDATE SOBRE LA TABLA SOLICITUDES_DICOM PARA INCLUIR EL NUMERO DE ORDEN, A SER USADO
        --EN LA ACTUALIZACION DE LA TABLA 204 EN  LA SEGUNDA VUELTA DEL PROCESO  
                          
PROCEDURE SP_ACT_SOLICI_DICOM_ORDEN_ID (
                     p_NRO_SOLICITUD        IN  SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
                    p_ORDENE_ID              IN INFI_TB_207_ORDENES_OPERACION.ORDENE_ID%TYPE
          );
          
PROCEDURE SP_CON_SOLICI_DICOM_ORDEN_ID (
                     p_NRO_SOLICITUD        IN  SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
                      p_ORDENE_ID              OUT INFI_TB_207_ORDENES_OPERACION.ORDENE_ID%TYPE
          );          
          
          
        PROCEDURE SP_CREAR_UI_TITULOS (
            P_UNDINV_ID            IN    INFI_TB_108_UI_TITULOS.UNDINV_ID%type,             
            P_TITULO_ID            IN    INFI_TB_108_UI_TITULOS.TITULO_ID%type,             
            P_UITITU_PORCENTAJE        IN    INFI_TB_108_UI_TITULOS.UITITU_PORCENTAJE%type,         
            P_UITITU_VALOR_EQUIVALENTE    IN    INFI_TB_108_UI_TITULOS.UITITU_VALOR_EQUIVALENTE%type,     
            P_UITITU_IN_CONIDB        IN    INFI_TB_108_UI_TITULOS.UITITU_IN_CONIDB%type,         
            P_UITITU_IN_CONTROL_DISPONIBLE    IN    INFI_TB_108_UI_TITULOS.UITITU_IN_CONTROL_DISPONIBLE%type
        );
        
        PROCEDURE SP_CREAR_UI_EMPRESA (
            P_UNDINV_ID        IN    INFI_TB_109_UI_EMPRESAS.UNDINV_ID%type,            
            P_EMPRES_ID        IN    INFI_TB_109_UI_EMPRESAS.EMPRES_ID%type,        
            P_ROLES_ID        IN    INFI_TB_109_UI_EMPRESAS.ROLES_ID%type,        
            P_UIEMPR_CONTACTO_NOM    IN    INFI_TB_109_UI_EMPRESAS.UIEMPR_CONTACTO_NOM%type,     
            P_UIEMPR_CONTACTO_TLF    IN    INFI_TB_109_UI_EMPRESAS.UIEMPR_CONTACTO_TLF%type
            );
        
        PROCEDURE SP_CREAR_UI_BLOTTER (
            P_UNDINV_ID                     IN INFI_TB_107_UI_BLOTTER.UNDINV_ID%type,                   
            P_BLOTER_ID                     IN INFI_TB_107_UI_BLOTTER.BLOTER_ID%type,                   
            P_UIBLOT_IN_DISPONIBLE          IN INFI_TB_107_UI_BLOTTER.UIBLOT_IN_DISPONIBLE%type,        
            P_UIBLOT_HORARIO_DESDE          IN INFI_TB_107_UI_BLOTTER.UIBLOT_HORARIO_DESDE%type,        
            P_UIBLOT_HORARIO_HASTA          IN INFI_TB_107_UI_BLOTTER.UIBLOT_HORARIO_HASTA%type,        
            P_UIBLOT_PEDIDO_FE_INI          IN INFI_TB_107_UI_BLOTTER.UIBLOT_PEDIDO_FE_INI%type,        
            P_UIBLOT_PEDIDO_FE_FIN          IN INFI_TB_107_UI_BLOTTER.UIBLOT_PEDIDO_FE_FIN%type,        
            P_UIBLOT_SERIAL_COMISIONES      IN INFI_TB_107_UI_BLOTTER.UIBLOT_SERIAL_COMISIONES%type,    
            P_UIBLOT_SERIAL_CAPITAL         IN INFI_TB_107_UI_BLOTTER.UIBLOT_SERIAL_CAPITAL%type,       
            P_TPPEVA_ID                     IN INFI_TB_107_UI_BLOTTER.TPPEVA_ID%type,                   
            P_CTESEG_ID                     IN INFI_TB_107_UI_BLOTTER.CTESEG_ID%type,                   
            P_UIBLOT_IN_DEFECTO             IN INFI_TB_107_UI_BLOTTER.UIBLOT_IN_DEFECTO%type,           
            P_UIBLOT_IN_TESORERIA           IN INFI_TB_107_UI_BLOTTER.UIBLOT_IN_TESORERIA%type,         
            P_UIBLOT_HORARIO_DESDE_ULT_DIA  IN INFI_TB_107_UI_BLOTTER.UIBLOT_HORARIO_DESDE_ULT_DIA%type,
            P_UIBLOT_HORARIO_HASTA_ULT_DIA  IN INFI_TB_107_UI_BLOTTER.UIBLOT_HORARIO_HASTA_ULT_DIA%type,
            P_UIBLOT_GANANCIA_RED           IN INFI_TB_107_UI_BLOTTER.UIBLOT_GANANCIA_RED%type,         
            P_UIBLOT_IN_RECOMPRA            IN INFI_TB_107_UI_BLOTTER.UIBLOT_IN_RECOMPRA%type          
        );
        
        PROCEDURE SP_CREAR_SOLICITUD_DICOM (
            P_NRO_SOLICITUD            IN SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
            P_TIPO_OPERACION           IN SOLICITUDES_DICOM.TIPO_OPERACION%TYPE,
            P_TIPO_CLIENTE             IN SOLICITUDES_DICOM.TIPO_CLIENTE%TYPE,
            P_CED_RIF                  IN SOLICITUDES_DICOM.CED_RIF%TYPE,
            P_NOMBRE_CLIENTE           IN SOLICITUDES_DICOM.NOMBRE_CLIENTE%TYPE,
            P_TELEFONO_CLIENTE         IN SOLICITUDES_DICOM.TELEFONO_CLIENTE%TYPE,
            P_CORREO_CLIENTE           IN SOLICITUDES_DICOM.CORREO_CLIENTE%TYPE,
            P_NRO_CTA_NACIONAL         IN SOLICITUDES_DICOM.NRO_CTA_NACIONAL%TYPE,
            P_NRO_RET_CAPITAL          IN SOLICITUDES_DICOM.NRO_RET_CAPITAL%TYPE,
            P_HORA_BLOQ                IN SOLICITUDES_DICOM.HORA_BLOQ%TYPE,
            P_MONTO_OP_NACIONAL        IN SOLICITUDES_DICOM.MONTO_OP_NACIONAL%TYPE,
            P_DIVISA_NACIONAL          IN SOLICITUDES_DICOM.DIVISA_NACIONAL%TYPE,
            P_NRO_RET_COMISION         IN SOLICITUDES_DICOM.NRO_RET_COMISION%TYPE,
            P_MONTO_COMISION           IN SOLICITUDES_DICOM.MONTO_COMISION%TYPE,
            P_PORC_COMISION            IN SOLICITUDES_DICOM.PORC_COMISION%TYPE,
            P_FECHA_OPERACION          IN SOLICITUDES_DICOM.FECHA_OPERACION%TYPE,
            P_NRO_CTA_EXTRANJERA       IN SOLICITUDES_DICOM.NRO_CTA_EXTRANJERA%TYPE,
            P_MONTO_OP_EXTRANJERA      IN SOLICITUDES_DICOM.MONTO_OP_EXTRANJERA%TYPE,
            P_DIVISA_EXTRANJERA        IN SOLICITUDES_DICOM.DIVISA_EXTRANJERA%TYPE,
            P_TASA_CAMBIO              IN SOLICITUDES_DICOM.TASA_CAMBIO%TYPE,
            P_FECHA_VALOR_OPERACION    IN SOLICITUDES_DICOM.FECHA_VALOR_OPERACION%TYPE,
            P_CODIGO_RESPUESTA         IN SOLICITUDES_DICOM.CODIGO_RESPUESTA%TYPE,
            P_NRO_OPE_DEBITO           IN SOLICITUDES_DICOM.NRO_OPE_DEBITO%TYPE,
            P_NRO_OPE_CREDITO          IN SOLICITUDES_DICOM.NRO_OPE_CREDITO%TYPE,
            P_ESTATUS_REGISTRO         IN SOLICITUDES_DICOM.ESTATUS_REGISTRO%TYPE,
            P_ESTATUS_NOTIFICACION_WS  IN SOLICITUDES_DICOM.ESTATUS_NOTIFICACION_WS%TYPE,
            P_ID_JORNADA               IN SOLICITUDES_DICOM.ID_JORNADA%TYPE,
            P_UNDINV_ID                IN SOLICITUDES_DICOM.UNDINV_ID%TYPE,
            P_MONEDA_JORNADA           IN SOLICITUDES_DICOM.MONEDA_JORNADA%TYPE
    );                                         
 FUNCTION GET_SEQUENCE (
        P_TABLE_NAME SEQUENCE_NUMBERS.TABLE_NAME%type
    )
    RETURN SEQUENCE_NUMBERS.NEXT_ID%TYPE;
--  PROCEDURE SP_CREAR_SOL_DICOM_TRANSF (
--                                        P_ID_JORNADA               IN SOLICITUDES_DICOM.ID_JORNADA%TYPE,
--                                        P_TIPO_OPERACION           IN SOLICITUDES_DICOM.TIPO_OPERACION%TYPE,
--                                        P_NRO_SOLICITUD            IN SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
--                                        P_TIPO_CLIENTE             IN SOLICITUDES_DICOM.TIPO_CLIENTE%TYPE,
--                                        P_CED_RIF                  IN SOLICITUDES_DICOM.CED_RIF%TYPE,
--                                        P_NRO_CTA_EXTRANJERA       IN SOLICITUDES_DICOM.NRO_CTA_EXTRANJERA%TYPE,
--                                        P_MONTO_OP_EXTRANJERA      IN SOLICITUDES_DICOM.MONTO_OP_EXTRANJERA%TYPE,
--                                        P_DIVISA_EXTRANJERA        IN SOLICITUDES_DICOM.DIVISA_EXTRANJERA%TYPE,
--                                        P_FECHA_OPERACION          IN SOLICITUDES_DICOM.FECHA_OPERACION%TYPE,
--                                        P_FECHA_VALOR_OPERACION    IN SOLICITUDES_DICOM.FECHA_VALOR_OPERACION%TYPE);
--    
-- PROCEDURE SP_ACT_SOL_DICOM_TRANSF( p_NRO_SOLICITUD         IN  SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
--                                         P_NRO_JORNADA          IN  SOLICITUDES_DICOM.ID_JORNADA%TYPE,
--                                         P_CODIGO_RESPUESTA     IN  SOLICITUDES_DICOM.CODIGO_RESPUESTA%TYPE,
--                                         p_NOMBRE_CLIENTE       IN SOLICITUDES_DICOM.NOMBRE_CLIENTE%TYPE,
--                                         p_TELEFONO_CLIENTE     IN SOLICITUDES_DICOM.TELEFONO_CLIENTE%TYPE,
--                                         p_CORREO_CLIENTE       IN SOLICITUDES_DICOM.CORREO_CLIENTE%TYPE,
--                                         p_NRO_RET_CAPITAL      IN SOLICITUDES_DICOM.NRO_RET_CAPITAL%TYPE,
--                                         p_HORA_BLOQ            IN SOLICITUDES_DICOM.HORA_BLOQ%TYPE,
--                                         --p_DIVISA_NACIONAL      IN SOLICITUDES_DICOM.DIVISA_NACIONAL%TYPE,
--                                         p_NRO_RET_COMISION     IN SOLICITUDES_DICOM.NRO_RET_COMISION%TYPE,
--                                         p_MONTO_COMISION       IN SOLICITUDES_DICOM.MONTO_COMISION%TYPE,
--                                         p_PORC_COMISION        IN SOLICITUDES_DICOM.PORC_COMISION%TYPE,
--                                         p_DIVISA_EXTRANJERA    IN SOLICITUDES_DICOM.DIVISA_EXTRANJERA%TYPE,
--                                        -- p_TASA_CAMBIO          IN SOLICITUDES_DICOM.TASA_CAMBIO%TYPE,
--                                         P_NRO_OPE_DEBITO       IN  SOLICITUDES_DICOM.NRO_OPE_DEBITO%TYPE,
--                                         P_NRO_OPE_CREDITO      IN  SOLICITUDES_DICOM.NRO_OPE_CREDITO%TYPE,
--                                         P_UNDINV_ID            IN INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%TYPE,
--                                         P_FECHA_BLOQUEO     IN  SOLICITUDES_DICOM.FECHA_BLOQUEO%TYPE,
--                                         P_ID_RESULT_COMPROBACION_BCV  IN  SOLICITUDES_DICOM.ID_RESULT_COMPROBACION_BCV%TYPE                                                                         
--                                         ) ;  
--    
END;
/


CREATE OR REPLACE PACKAGE ADM_INFI.PK_INFI_CRUD_F2
  IS
--
-- To modify this template, edit file PKGSPEC.TXT in TEMPLATE 
-- directory of SQL Navigator
--
-- Purpose: Paquete para el manejo de la persistemcia de la operativa SITCAM
-- 
-- MODIFICATION HISTORY
-- Person      Date         Comments
-- José Gómez  23/12/2016   Creación 

-- ---------   ------  ------------------------------------------       
   -- Enter package declarations as shown below

   --variable_name   datatype;
   
             
   
   v_secuencia_ordenes SEQUENCE_NUMBERS.NEXT_ID%type;
   v_secuencia_operacion SEQUENCE_NUMBERS.NEXT_ID%type;
   v_secuencia_cliente SEQUENCE_NUMBERS.NEXT_ID%type;
   CRUD_UNEXPECTED_EXCEPTION EXCEPTION;
   CRUD_VALIDATION_EXCEPTION EXCEPTION;
   CRUD_MSJ_EXCEPTION VARCHAR2(255);
   flag_sent_correc NUMBER:=0;--Variable que indica si una sentencia de actualizacion es correcta (1 sentencia Correcta 0 sentencia incorrecta)
      
   MSJ_EXCEPTION VARCHAR2(255);
   NOMBRE_SP VARCHAR2(50); 
    
   PROCEDURE SP_CREAR_ORDEN(p_UNIINV_ID               IN INFI_TB_204_ORDENES.UNIINV_ID%TYPE,
                                                      p_CLIENT_ID               IN INFI_TB_204_ORDENES.CLIENT_ID%TYPE,
                                                      p_ORDSTA_ID               IN INFI_TB_204_ORDENES.ORDSTA_ID%TYPE,
                                                      p_SISTEMA_ID              IN INFI_TB_204_ORDENES.SISTEMA_ID%TYPE,
                                                      p_EMPRES_ID               IN INFI_TB_204_ORDENES.EMPRES_ID%TYPE,
                                                      p_CONTRAPARTE             IN INFI_TB_204_ORDENES.CONTRAPARTE%TYPE,
                                                      p_TRANSA_ID               IN INFI_TB_204_ORDENES.TRANSA_ID%TYPE,
                                                      p_ENVIADO                 IN INFI_TB_204_ORDENES.ENVIADO%TYPE,
                                                      p_ORDENE_CTE_SEG_BCO      IN INFI_TB_204_ORDENES.ORDENE_CTE_SEG_BCO%TYPE,
                                                      p_ORDENE_CTE_SEG_SEG      IN INFI_TB_204_ORDENES.ORDENE_CTE_SEG_SEG%TYPE,
                                                      p_ORDENE_CTE_SEG_SUB      IN INFI_TB_204_ORDENES.ORDENE_CTE_SEG_SUB%TYPE,
                                                      p_ORDENE_CTE_SEG_INFI     IN INFI_TB_204_ORDENES.ORDENE_CTE_SEG_INFI%TYPE,
                                                      p_ORDENE_PED_FE_ORDEN     IN INFI_TB_204_ORDENES.ORDENE_PED_FE_ORDEN%TYPE,
                                                      p_ORDENE_PED_FE_VALOR     IN INFI_TB_204_ORDENES.ORDENE_PED_FE_VALOR%TYPE,
                                                      p_ORDENE_PED_MONTO        IN INFI_TB_204_ORDENES.ORDENE_PED_MONTO%TYPE,
                                                      p_ORDENE_PED_TOTAL_PEND   IN INFI_TB_204_ORDENES.ORDENE_PED_TOTAL_PEND%TYPE,
                                                      p_ORDENE_PED_TOTAL        IN INFI_TB_204_ORDENES.ORDENE_PED_TOTAL%TYPE,
                                                      p_ORDENE_PED_INT_CAIDOS   IN INFI_TB_204_ORDENES.ORDENE_PED_INT_CAIDOS%TYPE,
                                                      p_BLOTER_ID               IN INFI_TB_204_ORDENES.BLOTER_ID%TYPE,
                                                      p_ORDENE_PED_CTA_BSNRO    IN INFI_TB_204_ORDENES.ORDENE_PED_CTA_BSNRO%TYPE,
                                                      p_ORDENE_PED_CTA_BSTIP    IN INFI_TB_204_ORDENES.ORDENE_PED_CTA_BSTIP%TYPE,
                                                      p_CTECTA_NUMERO           IN INFI_TB_204_ORDENES.CTECTA_NUMERO%TYPE,
                                                      p_ORDENE_PED_PRECIO       IN INFI_TB_204_ORDENES.ORDENE_PED_PRECIO%TYPE,
                                                      p_ORDENE_PED_RENDIMIENTO  IN INFI_TB_204_ORDENES.ORDENE_PED_RENDIMIENTO%TYPE,
                                                      p_ORDENE_PED_IN_BDV       IN INFI_TB_204_ORDENES.ORDENE_PED_IN_BDV%TYPE,
                                                      p_MONEDA_ID               IN INFI_TB_204_ORDENES.MONEDA_ID%TYPE,
                                                      p_ORDENE_PED_RCP_PRECIO   IN INFI_TB_204_ORDENES.ORDENE_PED_RCP_PRECIO%TYPE,
                                                      p_ORDENE_ADJ_MONTO        IN INFI_TB_204_ORDENES.ORDENE_ADJ_MONTO%TYPE,
                                                      p_ORDENE_USR_NOMBRE       IN INFI_TB_204_ORDENES.ORDENE_USR_NOMBRE%TYPE,
                                                      p_ORDENE_USR_CEN_CONTABLE IN INFI_TB_204_ORDENES.ORDENE_USR_CEN_CONTABLE%TYPE,
                                                      p_ORDENE_USR_SUCURSAL     IN INFI_TB_204_ORDENES.ORDENE_USR_SUCURSAL%TYPE,
                                                      p_ORDENE_USR_TERMINAL     IN INFI_TB_204_ORDENES.ORDENE_USR_TERMINAL%TYPE,
                                                      p_ORDENE_VEH_TOM          IN INFI_TB_204_ORDENES.ORDENE_VEH_TOM%TYPE,
                                                      p_ORDENE_VEH_COL          IN INFI_TB_204_ORDENES.ORDENE_VEH_COL%TYPE,
                                                      p_ORDENE_VEH_REC          IN INFI_TB_204_ORDENES.ORDENE_VEH_REC%TYPE,
                                                      p_ORDENE_EJEC_ID          IN INFI_TB_204_ORDENES.ORDENE_EJEC_ID%TYPE,
                                                      p_ORDENE_FE_ULT_ACT       IN INFI_TB_204_ORDENES.ORDENE_FE_ULT_ACT%TYPE,
                                                      p_ORDENE_PED_COMISIONES   IN INFI_TB_204_ORDENES.ORDENE_PED_COMISIONES%TYPE,
                                                      p_ORDENE_FINANCIADO       IN INFI_TB_204_ORDENES.ORDENE_FINANCIADO%TYPE,
                                                      p_EJECUCION_ID            IN INFI_TB_204_ORDENES.EJECUCION_ID%TYPE,
                                                      p_ORDENE_TASA_POOL        IN INFI_TB_204_ORDENES.ORDENE_TASA_POOL%TYPE,
                                                      p_ORDENE_GANANCIA_RED     IN INFI_TB_204_ORDENES.ORDENE_GANANCIA_RED%TYPE,
                                                      p_ORDENE_COMISION_OFICINA IN INFI_TB_204_ORDENES.ORDENE_COMISION_OFICINA%TYPE,
                                                      p_ORDENE_COMISION_OPERACION  IN INFI_TB_204_ORDENES.ORDENE_COMISION_OPERACION%TYPE,
                                                      p_ORDENE_OPERAC_PEND         IN INFI_TB_204_ORDENES.ORDENE_OPERAC_PEND%TYPE,
                                                      p_ORDENE_ID_RELACION         IN INFI_TB_204_ORDENES.ORDENE_ID_RELACION%TYPE,
                                                      p_ORDENE_TASA_CAMBIO         IN INFI_TB_204_ORDENES.ORDENE_TASA_CAMBIO%TYPE,
                                                      p_CONCEPTO_ID                IN INFI_TB_204_ORDENES.CONCEPTO_ID%TYPE,
                                                      p_ORDENE_OBSERVACION         IN INFI_TB_204_ORDENES.ORDENE_OBSERVACION%TYPE,
                                                      p_TIPO_PRODUCTO_ID           IN INFI_TB_204_ORDENES.TIPO_PRODUCTO_ID%TYPE,
                                                      p_CTA_ABONO                  IN INFI_TB_204_ORDENES.CTA_ABONO%TYPE,                                                      
                                                      p_PORC_COMISION_IGTF         IN INFI_TB_204_ORDENES.ORDENE_PED_PORC_COMISION_IGTF%TYPE,
                                                      p_COMISION_IGTF              IN INFI_TB_204_ORDENES.ORDENE_PED_COMISION_IGTF%TYPE,
                                                      p_ORDENE_ID                  OUT INFI_TB_204_ORDENES.ORDENE_ID%TYPE);                                                         
   PROCEDURE SP_CREAR_OPERACION(p_ORDENE_ID              IN INFI_TB_207_ORDENES_OPERACION.ORDENE_ID%TYPE,                                                         
                                                         p_TRNFIN_ID              IN INFI_TB_207_ORDENES_OPERACION.TRNFIN_ID%TYPE,
                                                         p_STATUS_OPERACION       IN INFI_TB_207_ORDENES_OPERACION.STATUS_OPERACION%TYPE,
                                                         p_APLICA_REVERSO         IN INFI_TB_207_ORDENES_OPERACION.APLICA_REVERSO%TYPE,
                                                         p_MONTO_OPERACION        IN INFI_TB_207_ORDENES_OPERACION.MONTO_OPERACION%TYPE,
                                                         p_TASA                   IN INFI_TB_207_ORDENES_OPERACION.TASA%TYPE,
                                                         p_FECHA_APLICAR          IN INFI_TB_207_ORDENES_OPERACION.FECHA_APLICAR%TYPE,
                                                         p_FECHA_PROCESADA        IN INFI_TB_207_ORDENES_OPERACION.FECHA_PROCESADA%TYPE,
                                                         p_ORDENE_OPERACION_ERROR IN INFI_TB_207_ORDENES_OPERACION.ORDENE_OPERACION_ERROR%TYPE,
                                                         p_SERIAL                 IN INFI_TB_207_ORDENES_OPERACION.SERIAL%TYPE,
                                                         p_IN_COMISION            IN INFI_TB_207_ORDENES_OPERACION.IN_COMISION%TYPE,
                                                         p_MONEDA_ID              IN INFI_TB_207_ORDENES_OPERACION.MONEDA_ID%TYPE,
                                                         p_CTECTA_NUMERO          IN INFI_TB_207_ORDENES_OPERACION.CTECTA_NUMERO%TYPE,
                                                         p_OPERACION_NOMBRE       IN INFI_TB_207_ORDENES_OPERACION.OPERACION_NOMBRE%TYPE,
                                                         p_CTECTA_NOMBRE          IN INFI_TB_207_ORDENES_OPERACION.CTECTA_NOMBRE%TYPE,
                                                         p_CTECTA_BCOCTA_BCO      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_BCO%TYPE,                                                         
                                                         p_CTECTA_BCOCTA_DIRECCION IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_DIRECCION%TYPE,
                                                         p_CTECTA_BCOCTA_SWIFT    IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_SWIFT%TYPE,
                                                         p_CTECTA_BCOCTA_BIC      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_BIC%TYPE,
                                                         p_CTECTA_BCOCTA_TELEFONO IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_TELEFONO%TYPE,
                                                         p_CTECTA_BCOCTA_ABA      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_ABA%TYPE,
                                                         p_CTECTA_BCOCTA_PAIS     IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_PAIS%TYPE,
                                                         p_CTECTA_BCOINT_BCO      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_BCO%TYPE,
                                                         p_CTECTA_BCOINT_DIRECCION IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_DIRECCION%TYPE,
                                                         p_CTECTA_BCOINT_SWIFT    IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_SWIFT%TYPE,
                                                         p_CTECTA_BCOINT_BIC      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_BIC%TYPE,
                                                         p_CTECTA_BCOINT_TELEFONO IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_TELEFONO%TYPE,
                                                         p_CTECTA_BCOINT_ABA      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_ABA%TYPE,
                                                         p_CTECTA_BCOINT_PAIS     IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_PAIS%TYPE,
                                                         p_TRNF_TIPO              IN INFI_TB_207_ORDENES_OPERACION.TRNF_TIPO%TYPE,
                                                         p_TITULO_ID              IN INFI_TB_207_ORDENES_OPERACION.TITULO_ID%TYPE,
                                                         p_CODIGO_OPERACION       IN INFI_TB_207_ORDENES_OPERACION.CODIGO_OPERACION%TYPE,
                                                         p_NUMERO_RETENCION       IN INFI_TB_207_ORDENES_OPERACION.NUMERO_RETENCION%TYPE,
                                                         p_ORDENE_RELAC_OPERACION_ID IN INFI_TB_207_ORDENES_OPERACION.ORDENE_RELAC_OPERACION_ID%TYPE,
                                                         p_FECHA_INICIO_CP        IN INFI_TB_207_ORDENES_OPERACION.FECHA_INICIO_CP%TYPE,
                                                         p_FECHA_FIN_CP           IN INFI_TB_207_ORDENES_OPERACION.FECHA_FIN_CP%TYPE,
                                                         p_IN_COMISION_INVARIABLE IN INFI_TB_207_ORDENES_OPERACION.IN_COMISION_INVARIABLE%TYPE);
                                                         
PROCEDURE SP_CREAR_CLIENTE(p_TIPPER_ID          IN INFI_TB_201_CTES.TIPPER_ID%TYPE,
                            p_CLIENT_CEDRIF     IN INFI_TB_201_CTES.CLIENT_CEDRIF%TYPE,
                            p_CLIENT_NOMBRE     IN INFI_TB_201_CTES.CLIENT_NOMBRE%TYPE,
                            p_CLIENT_TELEFONO   IN INFI_TB_201_CTES.CLIENT_TELEFONO%TYPE,
                            p_CLIENT_CORREO_ELECTRONICO IN INFI_TB_201_CTES.CLIENT_CORREO_ELECTRONICO%TYPE,
                            p_CTESEG_ID         IN INFI_TB_201_CTES.CTESEG_ID%TYPE,
                            p_NUMERO_PERSONA    IN INFI_TB_201_CTES.NUMERO_PERSONA%TYPE,
                            p_CLIENT_ID         OUT INFI_TB_201_CTES.CLIENT_ID%TYPE);
                            
PROCEDURE SP_ACTIALIZAR_SOLICITUD_DICOM( p_NRO_SOLICITUD         IN  SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
                                         P_NRO_JORNADA          IN  SOLICITUDES_DICOM.ID_JORNADA%TYPE,
                                         P_CODIGO_RESPUESTA     IN  SOLICITUDES_DICOM.CODIGO_RESPUESTA%TYPE,
                                         p_NOMBRE_CLIENTE       IN SOLICITUDES_DICOM.NOMBRE_CLIENTE%TYPE,
                                         p_TELEFONO_CLIENTE     IN SOLICITUDES_DICOM.TELEFONO_CLIENTE%TYPE,
                                         p_CORREO_CLIENTE       IN SOLICITUDES_DICOM.CORREO_CLIENTE%TYPE,
                                         p_NRO_RET_CAPITAL      IN SOLICITUDES_DICOM.NRO_RET_CAPITAL%TYPE,
                                         p_HORA_BLOQ            IN SOLICITUDES_DICOM.HORA_BLOQ%TYPE,
                                         p_DIVISA_NACIONAL      IN SOLICITUDES_DICOM.DIVISA_NACIONAL%TYPE,
                                         p_NRO_RET_COMISION     IN SOLICITUDES_DICOM.NRO_RET_COMISION%TYPE,
                                         p_MONTO_COMISION       IN SOLICITUDES_DICOM.MONTO_COMISION%TYPE,
                                         p_PORC_COMISION        IN SOLICITUDES_DICOM.PORC_COMISION%TYPE,
                                         p_DIVISA_EXTRANJERA    IN SOLICITUDES_DICOM.DIVISA_EXTRANJERA%TYPE,
                                         p_TASA_CAMBIO          IN SOLICITUDES_DICOM.TASA_CAMBIO%TYPE,
                                         P_NRO_OPE_DEBITO       IN  SOLICITUDES_DICOM.NRO_OPE_DEBITO%TYPE,
                                         P_NRO_OPE_CREDITO      IN  SOLICITUDES_DICOM.NRO_OPE_CREDITO%TYPE,
                                         P_UNDINV_ID            IN INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%TYPE);         

PROCEDURE SP_CREAR_UNIDAD_INVERSION (
          P_UNDINV_ID                    OUT  INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%type,            
          P_UNDINV_NOMBRE                   IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_NOMBRE%type,                   
          P_UNDINV_DESCRIPCION              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_DESCRIPCION%type,              
          P_INSFIN_ID                       IN  INFI_TB_106_UNIDAD_INVERSION.INSFIN_ID%type,                       
          P_UNDINV_EMISION                  IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_EMISION%type,                  
          P_UNDINV_SERIE                    IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_SERIE%type,                    
          P_UNDINV_TASA_CAMBIO              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_TASA_CAMBIO%type,              
          P_UNDINV_FE_EMISION               IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_EMISION%type,               
          P_UNDINV_IN_VTA_EMPLEADOS         IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_IN_VTA_EMPLEADOS%type,         
          P_TPPEVA_ID                       IN  INFI_TB_106_UNIDAD_INVERSION.TPPEVA_ID%type,                       
          P_UNDINV_PRECIO_MINIMO            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_PRECIO_MINIMO%type,            
          P_UNDINV_COMENTARIOS              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_COMENTARIOS%type,              
          P_UNDINV_DOC_BDV                  IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_DOC_BDV%type,                  
          P_UNDINV_DOC_EMISOR               IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_DOC_EMISOR%type,               
          P_UNDINV_FE_ADJUDICACION          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_ADJUDICACION%type,          
          P_UNDINV_FE_LIQUIDACION           IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_LIQUIDACION%type,           
          P_UNDINV_FE_CIERRE                IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_CIERRE%type,                
          P_UNDINV_IN_RECOMPRA_NETEO        IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_IN_RECOMPRA_NETEO%type,        
          P_MONEDA_ID                       IN  INFI_TB_106_UNIDAD_INVERSION.MONEDA_ID%type,                       
          P_UNDINV_UMI_INV_TOTAL            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_INV_TOTAL%type,            
          P_UNDINV_UMI_INV_MTO_MIN          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_INV_MTO_MIN%type,          
          P_UNDINV_UMI_INV_MTO_MAX          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_INV_MTO_MAX%type,          
          P_UNDINV_UMI_UM_CANT_MIN          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_UM_CANT_MIN%type,          
          P_UNDINV_UMI_UM_CANT_MAX          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_UM_CANT_MAX%type,          
          P_UNDINV_STATUS                   IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_STATUS%type,                   
          P_AUT_USUARIO_USERID              IN  INFI_TB_106_UNIDAD_INVERSION.AUT_USUARIO_USERID%type,              
          P_AUT_USUARIO_NOMBRE              IN  INFI_TB_106_UNIDAD_INVERSION.AUT_USUARIO_NOMBRE%type,              
          P_AUT_USUARIO_ROL_NOMBRE          IN  INFI_TB_106_UNIDAD_INVERSION.AUT_USUARIO_ROL_NOMBRE%type,          
          P_AUT_ESTACION                    IN  INFI_TB_106_UNIDAD_INVERSION.AUT_ESTACION%type,                    
          P_AUT_IP                          IN  INFI_TB_106_UNIDAD_INVERSION.AUT_IP%type,                          
          P_AUT_FECHA                       IN  INFI_TB_106_UNIDAD_INVERSION.AUT_FECHA%type,                       
          P_UPD_USUARIO_USERID              IN  INFI_TB_106_UNIDAD_INVERSION.UPD_USUARIO_USERID%type,              
          P_UPD_USUARIO_NOMBRE              IN  INFI_TB_106_UNIDAD_INVERSION.UPD_USUARIO_NOMBRE%type,              
          P_UPD_USUARIO_ROL_NOMBRE          IN  INFI_TB_106_UNIDAD_INVERSION.UPD_USUARIO_ROL_NOMBRE%type,          
          P_UPD_ESTACION                    IN  INFI_TB_106_UNIDAD_INVERSION.UPD_ESTACION%type,                    
          P_UPD_IP                          IN  INFI_TB_106_UNIDAD_INVERSION.UPD_IP%type,                          
          P_UPD_FECHA                       IN  INFI_TB_106_UNIDAD_INVERSION.UPD_FECHA%type,                       
          P_EMPRES_ID                       IN  INFI_TB_106_UNIDAD_INVERSION.EMPRES_ID%type,                       
          P_UNDINV_UMI_INV_DISPONIBLE       IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_INV_DISPONIBLE%type,       
          P_UNDINV_UMI_UNIDAD               IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_UNIDAD%type,               
          P_UNDINV_PCT_MAX_FINAN            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_PCT_MAX_FINAN%type,            
          P_UNDINV_PRECIO_MAXIMO            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_PRECIO_MAXIMO%type,            
          P_UNDINV_MULTIPLOS                IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_MULTIPLOS%type,                
          P_UNDINV_IN_PEDIDO_MONTO          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_IN_PEDIDO_MONTO%type,          
          P_UNDINV_TASA_POOL                IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_TASA_POOL%type,                
          P_UNDINV_RENDIMIENTO              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_RENDIMIENTO%type,              
          P_UNDINV_MERCADO                  IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_MERCADO%type,                  
          P_UNDINV_IN_PRECIO_SUCIO          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_IN_PRECIO_SUCIO%type,          
          P_UNDINV_FE_LIQUIDACION_HORA1     IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_LIQUIDACION_HORA1%type,     
          P_UNDINV_FE_LIQUIDACION_HORA2     IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_LIQUIDACION_HORA2%type,     
          P_PAGO_IN_BCV                     IN  INFI_TB_106_UNIDAD_INVERSION.PAGO_IN_BCV%type,                     
          P_IN_COBRO_BATCH_ADJ              IN  INFI_TB_106_UNIDAD_INVERSION.IN_COBRO_BATCH_ADJ%type,              
          P_IN_COBRO_BATCH_LIQ              IN  INFI_TB_106_UNIDAD_INVERSION.IN_COBRO_BATCH_LIQ%type,              
          P_DIAS_APERTURA_CUENTA            IN  INFI_TB_106_UNIDAD_INVERSION.DIAS_APERTURA_CUENTA%type,            
          P_INDC_PERMITE_CANCELACION        IN  INFI_TB_106_UNIDAD_INVERSION.INDC_PERMITE_CANCELACION%type,        
          P_UNDINV_ACTIVE                   IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_ACTIVE%type,                  
          P_MONTO_ACUMULADO_SOLIC           IN  INFI_TB_106_UNIDAD_INVERSION.MONTO_ACUMULADO_SOLIC%type,           
          P_TIPO_NEGOCIO                    IN  INFI_TB_106_UNIDAD_INVERSION.TIPO_NEGOCIO%type,                    
          P_NRO_JORNADA                     IN  INFI_TB_106_UNIDAD_INVERSION.NRO_JORNADA%type,                     
          P_UNDINV_PERIODO_VENTA            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_PERIODO_VENTA%type,            
          P_UNDINV_MULTIPLOS_EFECTIVO       IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_MULTIPLOS_EFECTIVO%type,       
          P_UNDINV_UMAX_UNIDAD              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMAX_UNIDAD%type,              
          P_UNDINV_TASA_CAMBIO_OFER         IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_TASA_CAMBIO_OFER%type,         
          P_COMISION_IGTF                   IN  INFI_TB_106_UNIDAD_INVERSION.COMISION_IGTF%type,                   
          P_TIPO_SOLICITUD                  IN  INFI_TB_106_UNIDAD_INVERSION.TIPO_SOLICITUD%type);
          
          
        PROCEDURE SP_CREAR_UI_TITULOS (
            P_UNDINV_ID            IN    INFI_TB_108_UI_TITULOS.UNDINV_ID%type,             
            P_TITULO_ID            IN    INFI_TB_108_UI_TITULOS.TITULO_ID%type,             
            P_UITITU_PORCENTAJE        IN    INFI_TB_108_UI_TITULOS.UITITU_PORCENTAJE%type,         
            P_UITITU_VALOR_EQUIVALENTE    IN    INFI_TB_108_UI_TITULOS.UITITU_VALOR_EQUIVALENTE%type,     
            P_UITITU_IN_CONIDB        IN    INFI_TB_108_UI_TITULOS.UITITU_IN_CONIDB%type,         
            P_UITITU_IN_CONTROL_DISPONIBLE    IN    INFI_TB_108_UI_TITULOS.UITITU_IN_CONTROL_DISPONIBLE%type
        );
        
        PROCEDURE SP_CREAR_UI_EMPRESA (
            P_UNDINV_ID        IN    INFI_TB_109_UI_EMPRESAS.UNDINV_ID%type,            
            P_EMPRES_ID        IN    INFI_TB_109_UI_EMPRESAS.EMPRES_ID%type,        
            P_ROLES_ID        IN    INFI_TB_109_UI_EMPRESAS.ROLES_ID%type,        
            P_UIEMPR_CONTACTO_NOM    IN    INFI_TB_109_UI_EMPRESAS.UIEMPR_CONTACTO_NOM%type,     
            P_UIEMPR_CONTACTO_TLF    IN    INFI_TB_109_UI_EMPRESAS.UIEMPR_CONTACTO_TLF%type
            );
        
        PROCEDURE SP_CREAR_UI_BLOTTER (
            P_UNDINV_ID                     IN INFI_TB_107_UI_BLOTTER.UNDINV_ID%type,                   
            P_BLOTER_ID                     IN INFI_TB_107_UI_BLOTTER.BLOTER_ID%type,                   
            P_UIBLOT_IN_DISPONIBLE          IN INFI_TB_107_UI_BLOTTER.UIBLOT_IN_DISPONIBLE%type,        
            P_UIBLOT_HORARIO_DESDE          IN INFI_TB_107_UI_BLOTTER.UIBLOT_HORARIO_DESDE%type,        
            P_UIBLOT_HORARIO_HASTA          IN INFI_TB_107_UI_BLOTTER.UIBLOT_HORARIO_HASTA%type,        
            P_UIBLOT_PEDIDO_FE_INI          IN INFI_TB_107_UI_BLOTTER.UIBLOT_PEDIDO_FE_INI%type,        
            P_UIBLOT_PEDIDO_FE_FIN          IN INFI_TB_107_UI_BLOTTER.UIBLOT_PEDIDO_FE_FIN%type,        
            P_UIBLOT_SERIAL_COMISIONES      IN INFI_TB_107_UI_BLOTTER.UIBLOT_SERIAL_COMISIONES%type,    
            P_UIBLOT_SERIAL_CAPITAL         IN INFI_TB_107_UI_BLOTTER.UIBLOT_SERIAL_CAPITAL%type,       
            P_TPPEVA_ID                     IN INFI_TB_107_UI_BLOTTER.TPPEVA_ID%type,                   
            P_CTESEG_ID                     IN INFI_TB_107_UI_BLOTTER.CTESEG_ID%type,                   
            P_UIBLOT_IN_DEFECTO             IN INFI_TB_107_UI_BLOTTER.UIBLOT_IN_DEFECTO%type,           
            P_UIBLOT_IN_TESORERIA           IN INFI_TB_107_UI_BLOTTER.UIBLOT_IN_TESORERIA%type,         
            P_UIBLOT_HORARIO_DESDE_ULT_DIA  IN INFI_TB_107_UI_BLOTTER.UIBLOT_HORARIO_DESDE_ULT_DIA%type,
            P_UIBLOT_HORARIO_HASTA_ULT_DIA  IN INFI_TB_107_UI_BLOTTER.UIBLOT_HORARIO_HASTA_ULT_DIA%type,
            P_UIBLOT_GANANCIA_RED           IN INFI_TB_107_UI_BLOTTER.UIBLOT_GANANCIA_RED%type,         
            P_UIBLOT_IN_RECOMPRA            IN INFI_TB_107_UI_BLOTTER.UIBLOT_IN_RECOMPRA%type          
        );
        
        PROCEDURE SP_CREAR_SOLICITUD_DICOM (
            P_NRO_SOLICITUD            IN SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
            P_TIPO_OPERACION           IN SOLICITUDES_DICOM.TIPO_OPERACION%TYPE,
            P_TIPO_CLIENTE             IN SOLICITUDES_DICOM.TIPO_CLIENTE%TYPE,
            P_CED_RIF                  IN SOLICITUDES_DICOM.CED_RIF%TYPE,
            P_NOMBRE_CLIENTE           IN SOLICITUDES_DICOM.NOMBRE_CLIENTE%TYPE,
            P_TELEFONO_CLIENTE         IN SOLICITUDES_DICOM.TELEFONO_CLIENTE%TYPE,
            P_CORREO_CLIENTE           IN SOLICITUDES_DICOM.CORREO_CLIENTE%TYPE,
            P_NRO_CTA_NACIONAL         IN SOLICITUDES_DICOM.NRO_CTA_NACIONAL%TYPE,
            P_NRO_RET_CAPITAL          IN SOLICITUDES_DICOM.NRO_RET_CAPITAL%TYPE,
            P_HORA_BLOQ                IN SOLICITUDES_DICOM.HORA_BLOQ%TYPE,
            P_MONTO_OP_NACIONAL        IN SOLICITUDES_DICOM.MONTO_OP_NACIONAL%TYPE,
            P_DIVISA_NACIONAL          IN SOLICITUDES_DICOM.DIVISA_NACIONAL%TYPE,
            P_NRO_RET_COMISION         IN SOLICITUDES_DICOM.NRO_RET_COMISION%TYPE,
            P_MONTO_COMISION           IN SOLICITUDES_DICOM.MONTO_COMISION%TYPE,
            P_PORC_COMISION            IN SOLICITUDES_DICOM.PORC_COMISION%TYPE,
            P_FECHA_OPERACION          IN SOLICITUDES_DICOM.FECHA_OPERACION%TYPE,
            P_NRO_CTA_EXTRANJERA       IN SOLICITUDES_DICOM.NRO_CTA_EXTRANJERA%TYPE,
            P_MONTO_OP_EXTRANJERA      IN SOLICITUDES_DICOM.MONTO_OP_EXTRANJERA%TYPE,
            P_DIVISA_EXTRANJERA        IN SOLICITUDES_DICOM.DIVISA_EXTRANJERA%TYPE,
            P_TASA_CAMBIO              IN SOLICITUDES_DICOM.TASA_CAMBIO%TYPE,
            P_FECHA_VALOR_OPERACION    IN SOLICITUDES_DICOM.FECHA_VALOR_OPERACION%TYPE,
            P_CODIGO_RESPUESTA         IN SOLICITUDES_DICOM.CODIGO_RESPUESTA%TYPE,
            P_NRO_OPE_DEBITO           IN SOLICITUDES_DICOM.NRO_OPE_DEBITO%TYPE,
            P_NRO_OPE_CREDITO          IN SOLICITUDES_DICOM.NRO_OPE_CREDITO%TYPE,
            P_ESTATUS_REGISTRO         IN SOLICITUDES_DICOM.ESTATUS_REGISTRO%TYPE,
            P_ESTATUS_NOTIFICACION_WS  IN SOLICITUDES_DICOM.ESTATUS_NOTIFICACION_WS%TYPE,
            P_ID_JORNADA               IN SOLICITUDES_DICOM.ID_JORNADA%TYPE,
            P_UNDINV_ID                IN SOLICITUDES_DICOM.UNDINV_ID%TYPE
    );                                         
 FUNCTION GET_SEQUENCE (
        P_TABLE_NAME SEQUENCE_NUMBERS.TABLE_NAME%type
    )
    RETURN SEQUENCE_NUMBERS.NEXT_ID%TYPE;
END;
/


CREATE OR REPLACE PACKAGE ADM_INFI.PK_INFI_CRUD_RESP_IGTF
  IS
--
-- To modify this template, edit file PKGSPEC.TXT in TEMPLATE 
-- directory of SQL Navigator
--
-- Purpose: Paquete para el manejo de entidades de la aplicacion INFI 
-- 
-- MODIFICATION HISTORY
-- Person      Date         Comments
-- Daniel Arevalo 30/06/2017   Modificacion 

-- ---------   ------  ------------------------------------------       
   -- Enter package declarations as shown below

   --variable_name   datatype;
   
             
   
   v_secuencia_ordenes SEQUENCE_NUMBERS.NEXT_ID%type;
   v_secuencia_operacion SEQUENCE_NUMBERS.NEXT_ID%type;
   v_secuencia_cliente SEQUENCE_NUMBERS.NEXT_ID%type;
   CRUD_UNEXPECTED_EXCEPTION EXCEPTION;
   CRUD_VALIDATION_EXCEPTION EXCEPTION;
   CRUD_MSJ_EXCEPTION VARCHAR2(255);
   flag_sent_correc NUMBER:=0;--Variable que indica si una sentencia de actualizacion es correcta (1 sentencia Correcta 0 sentencia incorrecta)
      
   MSJ_EXCEPTION VARCHAR2(255);
   NOMBRE_SP VARCHAR2(50); 
    
   PROCEDURE SP_CREAR_ORDEN(p_UNIINV_ID               IN INFI_TB_204_ORDENES.UNIINV_ID%TYPE,
                                                      p_CLIENT_ID               IN INFI_TB_204_ORDENES.CLIENT_ID%TYPE,
                                                      p_ORDSTA_ID               IN INFI_TB_204_ORDENES.ORDSTA_ID%TYPE,
                                                      p_SISTEMA_ID              IN INFI_TB_204_ORDENES.SISTEMA_ID%TYPE,
                                                      p_EMPRES_ID               IN INFI_TB_204_ORDENES.EMPRES_ID%TYPE,
                                                      p_CONTRAPARTE             IN INFI_TB_204_ORDENES.CONTRAPARTE%TYPE,
                                                      p_TRANSA_ID               IN INFI_TB_204_ORDENES.TRANSA_ID%TYPE,
                                                      p_ENVIADO                 IN INFI_TB_204_ORDENES.ENVIADO%TYPE,
                                                      p_ORDENE_CTE_SEG_BCO      IN INFI_TB_204_ORDENES.ORDENE_CTE_SEG_BCO%TYPE,
                                                      p_ORDENE_CTE_SEG_SEG      IN INFI_TB_204_ORDENES.ORDENE_CTE_SEG_SEG%TYPE,
                                                      p_ORDENE_CTE_SEG_SUB      IN INFI_TB_204_ORDENES.ORDENE_CTE_SEG_SUB%TYPE,
                                                      p_ORDENE_CTE_SEG_INFI     IN INFI_TB_204_ORDENES.ORDENE_CTE_SEG_INFI%TYPE,
                                                      p_ORDENE_PED_FE_ORDEN     IN INFI_TB_204_ORDENES.ORDENE_PED_FE_ORDEN%TYPE,
                                                      p_ORDENE_PED_FE_VALOR     IN INFI_TB_204_ORDENES.ORDENE_PED_FE_VALOR%TYPE,
                                                      p_ORDENE_PED_MONTO        IN INFI_TB_204_ORDENES.ORDENE_PED_MONTO%TYPE,
                                                      p_ORDENE_PED_TOTAL_PEND   IN INFI_TB_204_ORDENES.ORDENE_PED_TOTAL_PEND%TYPE,
                                                      p_ORDENE_PED_TOTAL        IN INFI_TB_204_ORDENES.ORDENE_PED_TOTAL%TYPE,
                                                      p_ORDENE_PED_INT_CAIDOS   IN INFI_TB_204_ORDENES.ORDENE_PED_INT_CAIDOS%TYPE,
                                                      p_BLOTER_ID               IN INFI_TB_204_ORDENES.BLOTER_ID%TYPE,
                                                      p_ORDENE_PED_CTA_BSNRO    IN INFI_TB_204_ORDENES.ORDENE_PED_CTA_BSNRO%TYPE,
                                                      p_ORDENE_PED_CTA_BSTIP    IN INFI_TB_204_ORDENES.ORDENE_PED_CTA_BSTIP%TYPE,
                                                      p_CTECTA_NUMERO           IN INFI_TB_204_ORDENES.CTECTA_NUMERO%TYPE,
                                                      p_ORDENE_PED_PRECIO       IN INFI_TB_204_ORDENES.ORDENE_PED_PRECIO%TYPE,
                                                      p_ORDENE_PED_RENDIMIENTO  IN INFI_TB_204_ORDENES.ORDENE_PED_RENDIMIENTO%TYPE,
                                                      p_ORDENE_PED_IN_BDV       IN INFI_TB_204_ORDENES.ORDENE_PED_IN_BDV%TYPE,
                                                      p_MONEDA_ID               IN INFI_TB_204_ORDENES.MONEDA_ID%TYPE,
                                                      p_ORDENE_PED_RCP_PRECIO   IN INFI_TB_204_ORDENES.ORDENE_PED_RCP_PRECIO%TYPE,
                                                      p_ORDENE_ADJ_MONTO        IN INFI_TB_204_ORDENES.ORDENE_ADJ_MONTO%TYPE,
                                                      p_ORDENE_USR_NOMBRE       IN INFI_TB_204_ORDENES.ORDENE_USR_NOMBRE%TYPE,
                                                      p_ORDENE_USR_CEN_CONTABLE IN INFI_TB_204_ORDENES.ORDENE_USR_CEN_CONTABLE%TYPE,
                                                      p_ORDENE_USR_SUCURSAL     IN INFI_TB_204_ORDENES.ORDENE_USR_SUCURSAL%TYPE,
                                                      p_ORDENE_USR_TERMINAL     IN INFI_TB_204_ORDENES.ORDENE_USR_TERMINAL%TYPE,
                                                      p_ORDENE_VEH_TOM          IN INFI_TB_204_ORDENES.ORDENE_VEH_TOM%TYPE,
                                                      p_ORDENE_VEH_COL          IN INFI_TB_204_ORDENES.ORDENE_VEH_COL%TYPE,
                                                      p_ORDENE_VEH_REC          IN INFI_TB_204_ORDENES.ORDENE_VEH_REC%TYPE,
                                                      p_ORDENE_EJEC_ID          IN INFI_TB_204_ORDENES.ORDENE_EJEC_ID%TYPE,
                                                      p_ORDENE_FE_ULT_ACT       IN INFI_TB_204_ORDENES.ORDENE_FE_ULT_ACT%TYPE,
                                                      p_ORDENE_PED_COMISIONES   IN INFI_TB_204_ORDENES.ORDENE_PED_COMISIONES%TYPE,
                                                      p_ORDENE_FINANCIADO       IN INFI_TB_204_ORDENES.ORDENE_FINANCIADO%TYPE,
                                                      p_EJECUCION_ID            IN INFI_TB_204_ORDENES.EJECUCION_ID%TYPE,
                                                      p_ORDENE_TASA_POOL        IN INFI_TB_204_ORDENES.ORDENE_TASA_POOL%TYPE,
                                                      p_ORDENE_GANANCIA_RED     IN INFI_TB_204_ORDENES.ORDENE_GANANCIA_RED%TYPE,
                                                      p_ORDENE_COMISION_OFICINA IN INFI_TB_204_ORDENES.ORDENE_COMISION_OFICINA%TYPE,
                                                      p_ORDENE_COMISION_OPERACION  IN INFI_TB_204_ORDENES.ORDENE_COMISION_OPERACION%TYPE,
                                                      p_ORDENE_OPERAC_PEND         IN INFI_TB_204_ORDENES.ORDENE_OPERAC_PEND%TYPE,
                                                      p_ORDENE_ID_RELACION         IN INFI_TB_204_ORDENES.ORDENE_ID_RELACION%TYPE,
                                                      p_ORDENE_TASA_CAMBIO         IN INFI_TB_204_ORDENES.ORDENE_TASA_CAMBIO%TYPE,
                                                      p_CONCEPTO_ID                IN INFI_TB_204_ORDENES.CONCEPTO_ID%TYPE,
                                                      p_ORDENE_OBSERVACION         IN INFI_TB_204_ORDENES.ORDENE_OBSERVACION%TYPE,
                                                      p_TIPO_PRODUCTO_ID           IN INFI_TB_204_ORDENES.TIPO_PRODUCTO_ID%TYPE,
                                                      p_CTA_ABONO                  IN INFI_TB_204_ORDENES.CTA_ABONO%TYPE,                                                      
                                                      p_PORC_COMISION_IGTF         IN INFI_TB_204_ORDENES.ORDENE_PED_PORC_COMISION_IGTF%TYPE,
                                                      p_COMISION_IGTF              IN INFI_TB_204_ORDENES.ORDENE_PED_COMISION_IGTF%TYPE,
                                                      p_ORDENE_ID                  OUT INFI_TB_204_ORDENES.ORDENE_ID%TYPE);                                                         
   PROCEDURE SP_CREAR_OPERACION(p_ORDENE_ID              IN INFI_TB_207_ORDENES_OPERACION.ORDENE_ID%TYPE,                                                         
                                                         p_TRNFIN_ID              IN INFI_TB_207_ORDENES_OPERACION.TRNFIN_ID%TYPE,
                                                         p_STATUS_OPERACION       IN INFI_TB_207_ORDENES_OPERACION.STATUS_OPERACION%TYPE,
                                                         p_APLICA_REVERSO         IN INFI_TB_207_ORDENES_OPERACION.APLICA_REVERSO%TYPE,
                                                         p_MONTO_OPERACION        IN INFI_TB_207_ORDENES_OPERACION.MONTO_OPERACION%TYPE,
                                                         p_TASA                   IN INFI_TB_207_ORDENES_OPERACION.TASA%TYPE,
                                                         p_FECHA_APLICAR          IN INFI_TB_207_ORDENES_OPERACION.FECHA_APLICAR%TYPE,
                                                         p_FECHA_PROCESADA        IN INFI_TB_207_ORDENES_OPERACION.FECHA_PROCESADA%TYPE,
                                                         p_ORDENE_OPERACION_ERROR IN INFI_TB_207_ORDENES_OPERACION.ORDENE_OPERACION_ERROR%TYPE,
                                                         p_SERIAL                 IN INFI_TB_207_ORDENES_OPERACION.SERIAL%TYPE,
                                                         p_IN_COMISION            IN INFI_TB_207_ORDENES_OPERACION.IN_COMISION%TYPE,
                                                         p_MONEDA_ID              IN INFI_TB_207_ORDENES_OPERACION.MONEDA_ID%TYPE,
                                                         p_CTECTA_NUMERO          IN INFI_TB_207_ORDENES_OPERACION.CTECTA_NUMERO%TYPE,
                                                         p_OPERACION_NOMBRE       IN INFI_TB_207_ORDENES_OPERACION.OPERACION_NOMBRE%TYPE,
                                                         p_CTECTA_NOMBRE          IN INFI_TB_207_ORDENES_OPERACION.CTECTA_NOMBRE%TYPE,
                                                         p_CTECTA_BCOCTA_BCO      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_BCO%TYPE,                                                         
                                                         p_CTECTA_BCOCTA_DIRECCION IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_DIRECCION%TYPE,
                                                         p_CTECTA_BCOCTA_SWIFT    IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_SWIFT%TYPE,
                                                         p_CTECTA_BCOCTA_BIC      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_BIC%TYPE,
                                                         p_CTECTA_BCOCTA_TELEFONO IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_TELEFONO%TYPE,
                                                         p_CTECTA_BCOCTA_ABA      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_ABA%TYPE,
                                                         p_CTECTA_BCOCTA_PAIS     IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_PAIS%TYPE,
                                                         p_CTECTA_BCOINT_BCO      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_BCO%TYPE,
                                                         p_CTECTA_BCOINT_DIRECCION IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_DIRECCION%TYPE,
                                                         p_CTECTA_BCOINT_SWIFT    IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_SWIFT%TYPE,
                                                         p_CTECTA_BCOINT_BIC      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_BIC%TYPE,
                                                         p_CTECTA_BCOINT_TELEFONO IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_TELEFONO%TYPE,
                                                         p_CTECTA_BCOINT_ABA      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_ABA%TYPE,
                                                         p_CTECTA_BCOINT_PAIS     IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_PAIS%TYPE,
                                                         p_TRNF_TIPO              IN INFI_TB_207_ORDENES_OPERACION.TRNF_TIPO%TYPE,
                                                         p_TITULO_ID              IN INFI_TB_207_ORDENES_OPERACION.TITULO_ID%TYPE,
                                                         p_CODIGO_OPERACION       IN INFI_TB_207_ORDENES_OPERACION.CODIGO_OPERACION%TYPE,
                                                         p_NUMERO_RETENCION       IN INFI_TB_207_ORDENES_OPERACION.NUMERO_RETENCION%TYPE,
                                                         p_ORDENE_RELAC_OPERACION_ID IN INFI_TB_207_ORDENES_OPERACION.ORDENE_RELAC_OPERACION_ID%TYPE,
                                                         p_FECHA_INICIO_CP        IN INFI_TB_207_ORDENES_OPERACION.FECHA_INICIO_CP%TYPE,
                                                         p_FECHA_FIN_CP           IN INFI_TB_207_ORDENES_OPERACION.FECHA_FIN_CP%TYPE,
                                                         p_IN_COMISION_INVARIABLE IN INFI_TB_207_ORDENES_OPERACION.IN_COMISION_INVARIABLE%TYPE);
                                                         
PROCEDURE SP_CREAR_CLIENTE(p_TIPPER_ID          IN INFI_TB_201_CTES.TIPPER_ID%TYPE,
                            p_CLIENT_CEDRIF     IN INFI_TB_201_CTES.CLIENT_CEDRIF%TYPE,
                            p_CLIENT_NOMBRE     IN INFI_TB_201_CTES.CLIENT_NOMBRE%TYPE,
                            p_CLIENT_TELEFONO   IN INFI_TB_201_CTES.CLIENT_TELEFONO%TYPE,
                            p_CLIENT_CORREO_ELECTRONICO IN INFI_TB_201_CTES.CLIENT_CORREO_ELECTRONICO%TYPE,
                            p_CTESEG_ID         IN INFI_TB_201_CTES.CTESEG_ID%TYPE,
                            p_NUMERO_PERSONA    IN INFI_TB_201_CTES.NUMERO_PERSONA%TYPE,
                            p_CLIENT_ID         OUT INFI_TB_201_CTES.CLIENT_ID%TYPE);
                            
PROCEDURE SP_ACTIALIZAR_SOLICITUD_DICOM( p_NRO_SOLICITUD         IN  SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
                                         P_NRO_JORNADA          IN  SOLICITUDES_DICOM.ID_JORNADA%TYPE,
                                         P_CODIGO_RESPUESTA     IN  SOLICITUDES_DICOM.CODIGO_RESPUESTA%TYPE,
                                         p_NOMBRE_CLIENTE       IN SOLICITUDES_DICOM.NOMBRE_CLIENTE%TYPE,
                                         p_TELEFONO_CLIENTE     IN SOLICITUDES_DICOM.TELEFONO_CLIENTE%TYPE,
                                         p_CORREO_CLIENTE       IN SOLICITUDES_DICOM.CORREO_CLIENTE%TYPE,
                                         p_NRO_RET_CAPITAL      IN SOLICITUDES_DICOM.NRO_RET_CAPITAL%TYPE,
                                         p_HORA_BLOQ            IN SOLICITUDES_DICOM.HORA_BLOQ%TYPE,
                                         p_DIVISA_NACIONAL      IN SOLICITUDES_DICOM.DIVISA_NACIONAL%TYPE,
                                         p_NRO_RET_COMISION     IN SOLICITUDES_DICOM.NRO_RET_COMISION%TYPE,
                                         p_MONTO_COMISION       IN SOLICITUDES_DICOM.MONTO_COMISION%TYPE,
                                         p_PORC_COMISION        IN SOLICITUDES_DICOM.PORC_COMISION%TYPE,
                                         p_DIVISA_EXTRANJERA    IN SOLICITUDES_DICOM.DIVISA_EXTRANJERA%TYPE,
                                         p_TASA_CAMBIO          IN SOLICITUDES_DICOM.TASA_CAMBIO%TYPE,
                                         P_NRO_OPE_DEBITO       IN  SOLICITUDES_DICOM.NRO_OPE_DEBITO%TYPE,
                                         P_NRO_OPE_CREDITO      IN  SOLICITUDES_DICOM.NRO_OPE_CREDITO%TYPE,
                                         P_UNDINV_ID            IN INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%TYPE);         

PROCEDURE SP_CREAR_UNIDAD_INVERSION (
          P_UNDINV_ID                    OUT  INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%type,            
          P_UNDINV_NOMBRE                   IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_NOMBRE%type,                   
          P_UNDINV_DESCRIPCION              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_DESCRIPCION%type,              
          P_INSFIN_ID                       IN  INFI_TB_106_UNIDAD_INVERSION.INSFIN_ID%type,                       
          P_UNDINV_EMISION                  IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_EMISION%type,                  
          P_UNDINV_SERIE                    IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_SERIE%type,                    
          P_UNDINV_TASA_CAMBIO              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_TASA_CAMBIO%type,              
          P_UNDINV_FE_EMISION               IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_EMISION%type,               
          P_UNDINV_IN_VTA_EMPLEADOS         IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_IN_VTA_EMPLEADOS%type,         
          P_TPPEVA_ID                       IN  INFI_TB_106_UNIDAD_INVERSION.TPPEVA_ID%type,                       
          P_UNDINV_PRECIO_MINIMO            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_PRECIO_MINIMO%type,            
          P_UNDINV_COMENTARIOS              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_COMENTARIOS%type,              
          P_UNDINV_DOC_BDV                  IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_DOC_BDV%type,                  
          P_UNDINV_DOC_EMISOR               IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_DOC_EMISOR%type,               
          P_UNDINV_FE_ADJUDICACION          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_ADJUDICACION%type,          
          P_UNDINV_FE_LIQUIDACION           IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_LIQUIDACION%type,           
          P_UNDINV_FE_CIERRE                IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_CIERRE%type,                
          P_UNDINV_IN_RECOMPRA_NETEO        IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_IN_RECOMPRA_NETEO%type,        
          P_MONEDA_ID                       IN  INFI_TB_106_UNIDAD_INVERSION.MONEDA_ID%type,                       
          P_UNDINV_UMI_INV_TOTAL            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_INV_TOTAL%type,            
          P_UNDINV_UMI_INV_MTO_MIN          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_INV_MTO_MIN%type,          
          P_UNDINV_UMI_INV_MTO_MAX          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_INV_MTO_MAX%type,          
          P_UNDINV_UMI_UM_CANT_MIN          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_UM_CANT_MIN%type,          
          P_UNDINV_UMI_UM_CANT_MAX          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_UM_CANT_MAX%type,          
          P_UNDINV_STATUS                   IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_STATUS%type,                   
          P_AUT_USUARIO_USERID              IN  INFI_TB_106_UNIDAD_INVERSION.AUT_USUARIO_USERID%type,              
          P_AUT_USUARIO_NOMBRE              IN  INFI_TB_106_UNIDAD_INVERSION.AUT_USUARIO_NOMBRE%type,              
          P_AUT_USUARIO_ROL_NOMBRE          IN  INFI_TB_106_UNIDAD_INVERSION.AUT_USUARIO_ROL_NOMBRE%type,          
          P_AUT_ESTACION                    IN  INFI_TB_106_UNIDAD_INVERSION.AUT_ESTACION%type,                    
          P_AUT_IP                          IN  INFI_TB_106_UNIDAD_INVERSION.AUT_IP%type,                          
          P_AUT_FECHA                       IN  INFI_TB_106_UNIDAD_INVERSION.AUT_FECHA%type,                       
          P_UPD_USUARIO_USERID              IN  INFI_TB_106_UNIDAD_INVERSION.UPD_USUARIO_USERID%type,              
          P_UPD_USUARIO_NOMBRE              IN  INFI_TB_106_UNIDAD_INVERSION.UPD_USUARIO_NOMBRE%type,              
          P_UPD_USUARIO_ROL_NOMBRE          IN  INFI_TB_106_UNIDAD_INVERSION.UPD_USUARIO_ROL_NOMBRE%type,          
          P_UPD_ESTACION                    IN  INFI_TB_106_UNIDAD_INVERSION.UPD_ESTACION%type,                    
          P_UPD_IP                          IN  INFI_TB_106_UNIDAD_INVERSION.UPD_IP%type,                          
          P_UPD_FECHA                       IN  INFI_TB_106_UNIDAD_INVERSION.UPD_FECHA%type,                       
          P_EMPRES_ID                       IN  INFI_TB_106_UNIDAD_INVERSION.EMPRES_ID%type,                       
          P_UNDINV_UMI_INV_DISPONIBLE       IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_INV_DISPONIBLE%type,       
          P_UNDINV_UMI_UNIDAD               IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_UNIDAD%type,               
          P_UNDINV_PCT_MAX_FINAN            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_PCT_MAX_FINAN%type,            
          P_UNDINV_PRECIO_MAXIMO            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_PRECIO_MAXIMO%type,            
          P_UNDINV_MULTIPLOS                IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_MULTIPLOS%type,                
          P_UNDINV_IN_PEDIDO_MONTO          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_IN_PEDIDO_MONTO%type,          
          P_UNDINV_TASA_POOL                IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_TASA_POOL%type,                
          P_UNDINV_RENDIMIENTO              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_RENDIMIENTO%type,              
          P_UNDINV_MERCADO                  IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_MERCADO%type,                  
          P_UNDINV_IN_PRECIO_SUCIO          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_IN_PRECIO_SUCIO%type,          
          P_UNDINV_FE_LIQUIDACION_HORA1     IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_LIQUIDACION_HORA1%type,     
          P_UNDINV_FE_LIQUIDACION_HORA2     IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_LIQUIDACION_HORA2%type,     
          P_PAGO_IN_BCV                     IN  INFI_TB_106_UNIDAD_INVERSION.PAGO_IN_BCV%type,                     
          P_IN_COBRO_BATCH_ADJ              IN  INFI_TB_106_UNIDAD_INVERSION.IN_COBRO_BATCH_ADJ%type,              
          P_IN_COBRO_BATCH_LIQ              IN  INFI_TB_106_UNIDAD_INVERSION.IN_COBRO_BATCH_LIQ%type,              
          P_DIAS_APERTURA_CUENTA            IN  INFI_TB_106_UNIDAD_INVERSION.DIAS_APERTURA_CUENTA%type,            
          P_INDC_PERMITE_CANCELACION        IN  INFI_TB_106_UNIDAD_INVERSION.INDC_PERMITE_CANCELACION%type,        
          P_UNDINV_ACTIVE                   IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_ACTIVE%type,                  
          P_MONTO_ACUMULADO_SOLIC           IN  INFI_TB_106_UNIDAD_INVERSION.MONTO_ACUMULADO_SOLIC%type,           
          P_TIPO_NEGOCIO                    IN  INFI_TB_106_UNIDAD_INVERSION.TIPO_NEGOCIO%type,                    
          P_NRO_JORNADA                     IN  INFI_TB_106_UNIDAD_INVERSION.NRO_JORNADA%type,                     
          P_UNDINV_PERIODO_VENTA            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_PERIODO_VENTA%type,            
          P_UNDINV_MULTIPLOS_EFECTIVO       IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_MULTIPLOS_EFECTIVO%type,       
          P_UNDINV_UMAX_UNIDAD              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMAX_UNIDAD%type,              
          P_UNDINV_TASA_CAMBIO_OFER         IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_TASA_CAMBIO_OFER%type,         
          P_COMISION_IGTF                   IN  INFI_TB_106_UNIDAD_INVERSION.COMISION_IGTF%type,                   
          P_TIPO_SOLICITUD                  IN  INFI_TB_106_UNIDAD_INVERSION.TIPO_SOLICITUD%type);
          
          
        PROCEDURE SP_CREAR_UI_TITULOS (
            P_UNDINV_ID            IN    INFI_TB_108_UI_TITULOS.UNDINV_ID%type,             
            P_TITULO_ID            IN    INFI_TB_108_UI_TITULOS.TITULO_ID%type,             
            P_UITITU_PORCENTAJE        IN    INFI_TB_108_UI_TITULOS.UITITU_PORCENTAJE%type,         
            P_UITITU_VALOR_EQUIVALENTE    IN    INFI_TB_108_UI_TITULOS.UITITU_VALOR_EQUIVALENTE%type,     
            P_UITITU_IN_CONIDB        IN    INFI_TB_108_UI_TITULOS.UITITU_IN_CONIDB%type,         
            P_UITITU_IN_CONTROL_DISPONIBLE    IN    INFI_TB_108_UI_TITULOS.UITITU_IN_CONTROL_DISPONIBLE%type
        );
        
        PROCEDURE SP_CREAR_UI_EMPRESA (
            P_UNDINV_ID        IN    INFI_TB_109_UI_EMPRESAS.UNDINV_ID%type,            
            P_EMPRES_ID        IN    INFI_TB_109_UI_EMPRESAS.EMPRES_ID%type,        
            P_ROLES_ID        IN    INFI_TB_109_UI_EMPRESAS.ROLES_ID%type,        
            P_UIEMPR_CONTACTO_NOM    IN    INFI_TB_109_UI_EMPRESAS.UIEMPR_CONTACTO_NOM%type,     
            P_UIEMPR_CONTACTO_TLF    IN    INFI_TB_109_UI_EMPRESAS.UIEMPR_CONTACTO_TLF%type
            );
        
        PROCEDURE SP_CREAR_UI_BLOTTER (
            P_UNDINV_ID                     IN INFI_TB_107_UI_BLOTTER.UNDINV_ID%type,                   
            P_BLOTER_ID                     IN INFI_TB_107_UI_BLOTTER.BLOTER_ID%type,                   
            P_UIBLOT_IN_DISPONIBLE          IN INFI_TB_107_UI_BLOTTER.UIBLOT_IN_DISPONIBLE%type,        
            P_UIBLOT_HORARIO_DESDE          IN INFI_TB_107_UI_BLOTTER.UIBLOT_HORARIO_DESDE%type,        
            P_UIBLOT_HORARIO_HASTA          IN INFI_TB_107_UI_BLOTTER.UIBLOT_HORARIO_HASTA%type,        
            P_UIBLOT_PEDIDO_FE_INI          IN INFI_TB_107_UI_BLOTTER.UIBLOT_PEDIDO_FE_INI%type,        
            P_UIBLOT_PEDIDO_FE_FIN          IN INFI_TB_107_UI_BLOTTER.UIBLOT_PEDIDO_FE_FIN%type,        
            P_UIBLOT_SERIAL_COMISIONES      IN INFI_TB_107_UI_BLOTTER.UIBLOT_SERIAL_COMISIONES%type,    
            P_UIBLOT_SERIAL_CAPITAL         IN INFI_TB_107_UI_BLOTTER.UIBLOT_SERIAL_CAPITAL%type,       
            P_TPPEVA_ID                     IN INFI_TB_107_UI_BLOTTER.TPPEVA_ID%type,                   
            P_CTESEG_ID                     IN INFI_TB_107_UI_BLOTTER.CTESEG_ID%type,                   
            P_UIBLOT_IN_DEFECTO             IN INFI_TB_107_UI_BLOTTER.UIBLOT_IN_DEFECTO%type,           
            P_UIBLOT_IN_TESORERIA           IN INFI_TB_107_UI_BLOTTER.UIBLOT_IN_TESORERIA%type,         
            P_UIBLOT_HORARIO_DESDE_ULT_DIA  IN INFI_TB_107_UI_BLOTTER.UIBLOT_HORARIO_DESDE_ULT_DIA%type,
            P_UIBLOT_HORARIO_HASTA_ULT_DIA  IN INFI_TB_107_UI_BLOTTER.UIBLOT_HORARIO_HASTA_ULT_DIA%type,
            P_UIBLOT_GANANCIA_RED           IN INFI_TB_107_UI_BLOTTER.UIBLOT_GANANCIA_RED%type,         
            P_UIBLOT_IN_RECOMPRA            IN INFI_TB_107_UI_BLOTTER.UIBLOT_IN_RECOMPRA%type          
        );
        
        PROCEDURE SP_CREAR_SOLICITUD_DICOM (
            P_NRO_SOLICITUD            IN SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
            P_TIPO_OPERACION           IN SOLICITUDES_DICOM.TIPO_OPERACION%TYPE,
            P_TIPO_CLIENTE             IN SOLICITUDES_DICOM.TIPO_CLIENTE%TYPE,
            P_CED_RIF                  IN SOLICITUDES_DICOM.CED_RIF%TYPE,
            P_NOMBRE_CLIENTE           IN SOLICITUDES_DICOM.NOMBRE_CLIENTE%TYPE,
            P_TELEFONO_CLIENTE         IN SOLICITUDES_DICOM.TELEFONO_CLIENTE%TYPE,
            P_CORREO_CLIENTE           IN SOLICITUDES_DICOM.CORREO_CLIENTE%TYPE,
            P_NRO_CTA_NACIONAL         IN SOLICITUDES_DICOM.NRO_CTA_NACIONAL%TYPE,
            P_NRO_RET_CAPITAL          IN SOLICITUDES_DICOM.NRO_RET_CAPITAL%TYPE,
            P_HORA_BLOQ                IN SOLICITUDES_DICOM.HORA_BLOQ%TYPE,
            P_MONTO_OP_NACIONAL        IN SOLICITUDES_DICOM.MONTO_OP_NACIONAL%TYPE,
            P_DIVISA_NACIONAL          IN SOLICITUDES_DICOM.DIVISA_NACIONAL%TYPE,
            P_NRO_RET_COMISION         IN SOLICITUDES_DICOM.NRO_RET_COMISION%TYPE,
            P_MONTO_COMISION           IN SOLICITUDES_DICOM.MONTO_COMISION%TYPE,
            P_PORC_COMISION            IN SOLICITUDES_DICOM.PORC_COMISION%TYPE,
            P_FECHA_OPERACION          IN SOLICITUDES_DICOM.FECHA_OPERACION%TYPE,
            P_NRO_CTA_EXTRANJERA       IN SOLICITUDES_DICOM.NRO_CTA_EXTRANJERA%TYPE,
            P_MONTO_OP_EXTRANJERA      IN SOLICITUDES_DICOM.MONTO_OP_EXTRANJERA%TYPE,
            P_DIVISA_EXTRANJERA        IN SOLICITUDES_DICOM.DIVISA_EXTRANJERA%TYPE,
            P_TASA_CAMBIO              IN SOLICITUDES_DICOM.TASA_CAMBIO%TYPE,
            P_FECHA_VALOR_OPERACION    IN SOLICITUDES_DICOM.FECHA_VALOR_OPERACION%TYPE,
            P_CODIGO_RESPUESTA         IN SOLICITUDES_DICOM.CODIGO_RESPUESTA%TYPE,
            P_NRO_OPE_DEBITO           IN SOLICITUDES_DICOM.NRO_OPE_DEBITO%TYPE,
            P_NRO_OPE_CREDITO          IN SOLICITUDES_DICOM.NRO_OPE_CREDITO%TYPE,
            P_ESTATUS_REGISTRO         IN SOLICITUDES_DICOM.ESTATUS_REGISTRO%TYPE,
            P_ESTATUS_NOTIFICACION_WS  IN SOLICITUDES_DICOM.ESTATUS_NOTIFICACION_WS%TYPE,
            P_ID_JORNADA               IN SOLICITUDES_DICOM.ID_JORNADA%TYPE,
            P_UNDINV_ID                IN SOLICITUDES_DICOM.UNDINV_ID%TYPE
    );                                         
 FUNCTION GET_SEQUENCE (
        P_TABLE_NAME SEQUENCE_NUMBERS.TABLE_NAME%type
    )
    RETURN SEQUENCE_NUMBERS.NEXT_ID%TYPE;
END;
/


CREATE OR REPLACE PACKAGE ADM_INFI.PK_INFI_CRUD_TRANSF_DICOM
  IS
--
-- To modify this template, edit file PKGSPEC.TXT in TEMPLATE 
-- directory of SQL Navigator
--
-- Purpose: Paquete para el manejo de entidades de la aplicacion INFI 
-- 
-- MODIFICATION HISTORY
-- Person      Date         Comments
-- Daniel Arevalo 30/06/2017   Modificacion 

-- ---------   ------  ------------------------------------------       
   -- Enter package declarations as shown below

   --variable_name   datatype;
   
             
   
   v_secuencia_ordenes SEQUENCE_NUMBERS.NEXT_ID%type;
   v_secuencia_operacion SEQUENCE_NUMBERS.NEXT_ID%type;
   v_secuencia_cliente SEQUENCE_NUMBERS.NEXT_ID%type;
   CRUD_UNEXPECTED_EXCEPTION EXCEPTION;
   CRUD_VALIDATION_EXCEPTION EXCEPTION;
   CRUD_MSJ_EXCEPTION VARCHAR2(255);
   flag_sent_correc NUMBER:=0;--Variable que indica si una sentencia de actualizacion es correcta (1 sentencia Correcta 0 sentencia incorrecta)
      
   MSJ_EXCEPTION VARCHAR2(255);
   NOMBRE_SP VARCHAR2(50); 
    
   PROCEDURE SP_CREAR_ORDEN(p_UNIINV_ID               IN INFI_TB_204_ORDENES.UNIINV_ID%TYPE,
                                                      p_CLIENT_ID               IN INFI_TB_204_ORDENES.CLIENT_ID%TYPE,
                                                      p_ORDSTA_ID               IN INFI_TB_204_ORDENES.ORDSTA_ID%TYPE,
                                                      p_SISTEMA_ID              IN INFI_TB_204_ORDENES.SISTEMA_ID%TYPE,
                                                      p_EMPRES_ID               IN INFI_TB_204_ORDENES.EMPRES_ID%TYPE,
                                                      p_CONTRAPARTE             IN INFI_TB_204_ORDENES.CONTRAPARTE%TYPE,
                                                      p_TRANSA_ID               IN INFI_TB_204_ORDENES.TRANSA_ID%TYPE,
                                                      p_ENVIADO                 IN INFI_TB_204_ORDENES.ENVIADO%TYPE,
                                                      p_ORDENE_CTE_SEG_BCO      IN INFI_TB_204_ORDENES.ORDENE_CTE_SEG_BCO%TYPE,
                                                      p_ORDENE_CTE_SEG_SEG      IN INFI_TB_204_ORDENES.ORDENE_CTE_SEG_SEG%TYPE,
                                                      p_ORDENE_CTE_SEG_SUB      IN INFI_TB_204_ORDENES.ORDENE_CTE_SEG_SUB%TYPE,
                                                      p_ORDENE_CTE_SEG_INFI     IN INFI_TB_204_ORDENES.ORDENE_CTE_SEG_INFI%TYPE,
                                                      p_ORDENE_PED_FE_ORDEN     IN INFI_TB_204_ORDENES.ORDENE_PED_FE_ORDEN%TYPE,
                                                      p_ORDENE_PED_FE_VALOR     IN INFI_TB_204_ORDENES.ORDENE_PED_FE_VALOR%TYPE,
                                                      p_ORDENE_PED_MONTO        IN INFI_TB_204_ORDENES.ORDENE_PED_MONTO%TYPE,
                                                      p_ORDENE_PED_TOTAL_PEND   IN INFI_TB_204_ORDENES.ORDENE_PED_TOTAL_PEND%TYPE,
                                                      p_ORDENE_PED_TOTAL        IN INFI_TB_204_ORDENES.ORDENE_PED_TOTAL%TYPE,
                                                      p_ORDENE_PED_INT_CAIDOS   IN INFI_TB_204_ORDENES.ORDENE_PED_INT_CAIDOS%TYPE,
                                                      p_BLOTER_ID               IN INFI_TB_204_ORDENES.BLOTER_ID%TYPE,
                                                      p_ORDENE_PED_CTA_BSNRO    IN INFI_TB_204_ORDENES.ORDENE_PED_CTA_BSNRO%TYPE,
                                                      p_ORDENE_PED_CTA_BSTIP    IN INFI_TB_204_ORDENES.ORDENE_PED_CTA_BSTIP%TYPE,
                                                      p_CTECTA_NUMERO           IN INFI_TB_204_ORDENES.CTECTA_NUMERO%TYPE,
                                                      p_ORDENE_PED_PRECIO       IN INFI_TB_204_ORDENES.ORDENE_PED_PRECIO%TYPE,
                                                      p_ORDENE_PED_RENDIMIENTO  IN INFI_TB_204_ORDENES.ORDENE_PED_RENDIMIENTO%TYPE,
                                                      p_ORDENE_PED_IN_BDV       IN INFI_TB_204_ORDENES.ORDENE_PED_IN_BDV%TYPE,
                                                      p_MONEDA_ID               IN INFI_TB_204_ORDENES.MONEDA_ID%TYPE,
                                                      p_ORDENE_PED_RCP_PRECIO   IN INFI_TB_204_ORDENES.ORDENE_PED_RCP_PRECIO%TYPE,
                                                      p_ORDENE_ADJ_MONTO        IN INFI_TB_204_ORDENES.ORDENE_ADJ_MONTO%TYPE,
                                                      p_ORDENE_USR_NOMBRE       IN INFI_TB_204_ORDENES.ORDENE_USR_NOMBRE%TYPE,
                                                      p_ORDENE_USR_CEN_CONTABLE IN INFI_TB_204_ORDENES.ORDENE_USR_CEN_CONTABLE%TYPE,
                                                      p_ORDENE_USR_SUCURSAL     IN INFI_TB_204_ORDENES.ORDENE_USR_SUCURSAL%TYPE,
                                                      p_ORDENE_USR_TERMINAL     IN INFI_TB_204_ORDENES.ORDENE_USR_TERMINAL%TYPE,
                                                      p_ORDENE_VEH_TOM          IN INFI_TB_204_ORDENES.ORDENE_VEH_TOM%TYPE,
                                                      p_ORDENE_VEH_COL          IN INFI_TB_204_ORDENES.ORDENE_VEH_COL%TYPE,
                                                      p_ORDENE_VEH_REC          IN INFI_TB_204_ORDENES.ORDENE_VEH_REC%TYPE,
                                                      p_ORDENE_EJEC_ID          IN INFI_TB_204_ORDENES.ORDENE_EJEC_ID%TYPE,
                                                      p_ORDENE_FE_ULT_ACT       IN INFI_TB_204_ORDENES.ORDENE_FE_ULT_ACT%TYPE,
                                                      p_ORDENE_PED_COMISIONES   IN INFI_TB_204_ORDENES.ORDENE_PED_COMISIONES%TYPE,
                                                      p_ORDENE_FINANCIADO       IN INFI_TB_204_ORDENES.ORDENE_FINANCIADO%TYPE,
                                                      p_EJECUCION_ID            IN INFI_TB_204_ORDENES.EJECUCION_ID%TYPE,
                                                      p_ORDENE_TASA_POOL        IN INFI_TB_204_ORDENES.ORDENE_TASA_POOL%TYPE,
                                                      p_ORDENE_GANANCIA_RED     IN INFI_TB_204_ORDENES.ORDENE_GANANCIA_RED%TYPE,
                                                      p_ORDENE_COMISION_OFICINA IN INFI_TB_204_ORDENES.ORDENE_COMISION_OFICINA%TYPE,
                                                      p_ORDENE_COMISION_OPERACION  IN INFI_TB_204_ORDENES.ORDENE_COMISION_OPERACION%TYPE,
                                                      p_ORDENE_OPERAC_PEND         IN INFI_TB_204_ORDENES.ORDENE_OPERAC_PEND%TYPE,
                                                      p_ORDENE_ID_RELACION         IN INFI_TB_204_ORDENES.ORDENE_ID_RELACION%TYPE,
                                                      p_ORDENE_TASA_CAMBIO         IN INFI_TB_204_ORDENES.ORDENE_TASA_CAMBIO%TYPE,
                                                      p_CONCEPTO_ID                IN INFI_TB_204_ORDENES.CONCEPTO_ID%TYPE,
                                                      p_ORDENE_OBSERVACION         IN INFI_TB_204_ORDENES.ORDENE_OBSERVACION%TYPE,
                                                      p_TIPO_PRODUCTO_ID           IN INFI_TB_204_ORDENES.TIPO_PRODUCTO_ID%TYPE,
                                                      p_CTA_ABONO                  IN INFI_TB_204_ORDENES.CTA_ABONO%TYPE,                                                      
                                                      p_PORC_COMISION_IGTF         IN INFI_TB_204_ORDENES.ORDENE_PED_PORC_COMISION_IGTF%TYPE,
                                                      p_COMISION_IGTF              IN INFI_TB_204_ORDENES.ORDENE_PED_COMISION_IGTF%TYPE,
                                                      p_ORDENE_ID                  OUT INFI_TB_204_ORDENES.ORDENE_ID%TYPE);                                                         
   PROCEDURE SP_CREAR_OPERACION(p_ORDENE_ID              IN INFI_TB_207_ORDENES_OPERACION.ORDENE_ID%TYPE,                                                         
                                                         p_TRNFIN_ID              IN INFI_TB_207_ORDENES_OPERACION.TRNFIN_ID%TYPE,
                                                         p_STATUS_OPERACION       IN INFI_TB_207_ORDENES_OPERACION.STATUS_OPERACION%TYPE,
                                                         p_APLICA_REVERSO         IN INFI_TB_207_ORDENES_OPERACION.APLICA_REVERSO%TYPE,
                                                         p_MONTO_OPERACION        IN INFI_TB_207_ORDENES_OPERACION.MONTO_OPERACION%TYPE,
                                                         p_TASA                   IN INFI_TB_207_ORDENES_OPERACION.TASA%TYPE,
                                                         p_FECHA_APLICAR          IN INFI_TB_207_ORDENES_OPERACION.FECHA_APLICAR%TYPE,
                                                         p_FECHA_PROCESADA        IN INFI_TB_207_ORDENES_OPERACION.FECHA_PROCESADA%TYPE,
                                                         p_ORDENE_OPERACION_ERROR IN INFI_TB_207_ORDENES_OPERACION.ORDENE_OPERACION_ERROR%TYPE,
                                                         p_SERIAL                 IN INFI_TB_207_ORDENES_OPERACION.SERIAL%TYPE,
                                                         p_IN_COMISION            IN INFI_TB_207_ORDENES_OPERACION.IN_COMISION%TYPE,
                                                         p_MONEDA_ID              IN INFI_TB_207_ORDENES_OPERACION.MONEDA_ID%TYPE,
                                                         p_CTECTA_NUMERO          IN INFI_TB_207_ORDENES_OPERACION.CTECTA_NUMERO%TYPE,
                                                         p_OPERACION_NOMBRE       IN INFI_TB_207_ORDENES_OPERACION.OPERACION_NOMBRE%TYPE,
                                                         p_CTECTA_NOMBRE          IN INFI_TB_207_ORDENES_OPERACION.CTECTA_NOMBRE%TYPE,
                                                         p_CTECTA_BCOCTA_BCO      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_BCO%TYPE,                                                         
                                                         p_CTECTA_BCOCTA_DIRECCION IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_DIRECCION%TYPE,
                                                         p_CTECTA_BCOCTA_SWIFT    IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_SWIFT%TYPE,
                                                         p_CTECTA_BCOCTA_BIC      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_BIC%TYPE,
                                                         p_CTECTA_BCOCTA_TELEFONO IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_TELEFONO%TYPE,
                                                         p_CTECTA_BCOCTA_ABA      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_ABA%TYPE,
                                                         p_CTECTA_BCOCTA_PAIS     IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_PAIS%TYPE,
                                                         p_CTECTA_BCOINT_BCO      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_BCO%TYPE,
                                                         p_CTECTA_BCOINT_DIRECCION IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_DIRECCION%TYPE,
                                                         p_CTECTA_BCOINT_SWIFT    IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_SWIFT%TYPE,
                                                         p_CTECTA_BCOINT_BIC      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_BIC%TYPE,
                                                         p_CTECTA_BCOINT_TELEFONO IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_TELEFONO%TYPE,
                                                         p_CTECTA_BCOINT_ABA      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_ABA%TYPE,
                                                         p_CTECTA_BCOINT_PAIS     IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_PAIS%TYPE,
                                                         p_TRNF_TIPO              IN INFI_TB_207_ORDENES_OPERACION.TRNF_TIPO%TYPE,
                                                         p_TITULO_ID              IN INFI_TB_207_ORDENES_OPERACION.TITULO_ID%TYPE,
                                                         p_CODIGO_OPERACION       IN INFI_TB_207_ORDENES_OPERACION.CODIGO_OPERACION%TYPE,
                                                         p_NUMERO_RETENCION       IN INFI_TB_207_ORDENES_OPERACION.NUMERO_RETENCION%TYPE,
                                                         p_ORDENE_RELAC_OPERACION_ID IN INFI_TB_207_ORDENES_OPERACION.ORDENE_RELAC_OPERACION_ID%TYPE,
                                                         p_FECHA_INICIO_CP        IN INFI_TB_207_ORDENES_OPERACION.FECHA_INICIO_CP%TYPE,
                                                         p_FECHA_FIN_CP           IN INFI_TB_207_ORDENES_OPERACION.FECHA_FIN_CP%TYPE,
                                                         p_IN_COMISION_INVARIABLE IN INFI_TB_207_ORDENES_OPERACION.IN_COMISION_INVARIABLE%TYPE);
                                                         
PROCEDURE SP_CREAR_CLIENTE(p_TIPPER_ID          IN INFI_TB_201_CTES.TIPPER_ID%TYPE,
                            p_CLIENT_CEDRIF     IN INFI_TB_201_CTES.CLIENT_CEDRIF%TYPE,
                            p_CLIENT_NOMBRE     IN INFI_TB_201_CTES.CLIENT_NOMBRE%TYPE,
                            p_CLIENT_TELEFONO   IN INFI_TB_201_CTES.CLIENT_TELEFONO%TYPE,
                            p_CLIENT_CORREO_ELECTRONICO IN INFI_TB_201_CTES.CLIENT_CORREO_ELECTRONICO%TYPE,
                            p_CTESEG_ID         IN INFI_TB_201_CTES.CTESEG_ID%TYPE,
                            p_NUMERO_PERSONA    IN INFI_TB_201_CTES.NUMERO_PERSONA%TYPE,
                            p_CLIENT_ID         OUT INFI_TB_201_CTES.CLIENT_ID%TYPE);
                            
PROCEDURE SP_ACTIALIZAR_SOLICITUD_DICOM( p_NRO_SOLICITUD         IN  SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
                                         P_NRO_JORNADA          IN  SOLICITUDES_DICOM.ID_JORNADA%TYPE,
                                         P_CODIGO_RESPUESTA     IN  SOLICITUDES_DICOM.CODIGO_RESPUESTA%TYPE,
                                         p_NOMBRE_CLIENTE       IN SOLICITUDES_DICOM.NOMBRE_CLIENTE%TYPE,
                                         p_TELEFONO_CLIENTE     IN SOLICITUDES_DICOM.TELEFONO_CLIENTE%TYPE,
                                         p_CORREO_CLIENTE       IN SOLICITUDES_DICOM.CORREO_CLIENTE%TYPE,
                                         p_NRO_RET_CAPITAL      IN SOLICITUDES_DICOM.NRO_RET_CAPITAL%TYPE,
                                         p_HORA_BLOQ            IN SOLICITUDES_DICOM.HORA_BLOQ%TYPE,
                                         p_DIVISA_NACIONAL      IN SOLICITUDES_DICOM.DIVISA_NACIONAL%TYPE,
                                         p_NRO_RET_COMISION     IN SOLICITUDES_DICOM.NRO_RET_COMISION%TYPE,
                                         p_MONTO_COMISION       IN SOLICITUDES_DICOM.MONTO_COMISION%TYPE,
                                         p_PORC_COMISION        IN SOLICITUDES_DICOM.PORC_COMISION%TYPE,
                                         p_DIVISA_EXTRANJERA    IN SOLICITUDES_DICOM.DIVISA_EXTRANJERA%TYPE,
                                         p_TASA_CAMBIO          IN SOLICITUDES_DICOM.TASA_CAMBIO%TYPE,
                                         P_NRO_OPE_DEBITO       IN  SOLICITUDES_DICOM.NRO_OPE_DEBITO%TYPE,
                                         P_NRO_OPE_CREDITO      IN  SOLICITUDES_DICOM.NRO_OPE_CREDITO%TYPE,
                                         P_UNDINV_ID            IN INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%TYPE);         

PROCEDURE SP_CREAR_UNIDAD_INVERSION (
          P_UNDINV_ID                    OUT  INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%type,            
          P_UNDINV_NOMBRE                   IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_NOMBRE%type,                   
          P_UNDINV_DESCRIPCION              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_DESCRIPCION%type,              
          P_INSFIN_ID                       IN  INFI_TB_106_UNIDAD_INVERSION.INSFIN_ID%type,                       
          P_UNDINV_EMISION                  IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_EMISION%type,                  
          P_UNDINV_SERIE                    IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_SERIE%type,                    
          P_UNDINV_TASA_CAMBIO              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_TASA_CAMBIO%type,              
          P_UNDINV_FE_EMISION               IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_EMISION%type,               
          P_UNDINV_IN_VTA_EMPLEADOS         IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_IN_VTA_EMPLEADOS%type,         
          P_TPPEVA_ID                       IN  INFI_TB_106_UNIDAD_INVERSION.TPPEVA_ID%type,                       
          P_UNDINV_PRECIO_MINIMO            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_PRECIO_MINIMO%type,            
          P_UNDINV_COMENTARIOS              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_COMENTARIOS%type,              
          P_UNDINV_DOC_BDV                  IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_DOC_BDV%type,                  
          P_UNDINV_DOC_EMISOR               IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_DOC_EMISOR%type,               
          P_UNDINV_FE_ADJUDICACION          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_ADJUDICACION%type,          
          P_UNDINV_FE_LIQUIDACION           IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_LIQUIDACION%type,           
          P_UNDINV_FE_CIERRE                IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_CIERRE%type,                
          P_UNDINV_IN_RECOMPRA_NETEO        IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_IN_RECOMPRA_NETEO%type,        
          P_MONEDA_ID                       IN  INFI_TB_106_UNIDAD_INVERSION.MONEDA_ID%type,                       
          P_UNDINV_UMI_INV_TOTAL            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_INV_TOTAL%type,            
          P_UNDINV_UMI_INV_MTO_MIN          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_INV_MTO_MIN%type,          
          P_UNDINV_UMI_INV_MTO_MAX          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_INV_MTO_MAX%type,          
          P_UNDINV_UMI_UM_CANT_MIN          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_UM_CANT_MIN%type,          
          P_UNDINV_UMI_UM_CANT_MAX          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_UM_CANT_MAX%type,          
          P_UNDINV_STATUS                   IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_STATUS%type,                   
          P_AUT_USUARIO_USERID              IN  INFI_TB_106_UNIDAD_INVERSION.AUT_USUARIO_USERID%type,              
          P_AUT_USUARIO_NOMBRE              IN  INFI_TB_106_UNIDAD_INVERSION.AUT_USUARIO_NOMBRE%type,              
          P_AUT_USUARIO_ROL_NOMBRE          IN  INFI_TB_106_UNIDAD_INVERSION.AUT_USUARIO_ROL_NOMBRE%type,          
          P_AUT_ESTACION                    IN  INFI_TB_106_UNIDAD_INVERSION.AUT_ESTACION%type,                    
          P_AUT_IP                          IN  INFI_TB_106_UNIDAD_INVERSION.AUT_IP%type,                          
          P_AUT_FECHA                       IN  INFI_TB_106_UNIDAD_INVERSION.AUT_FECHA%type,                       
          P_UPD_USUARIO_USERID              IN  INFI_TB_106_UNIDAD_INVERSION.UPD_USUARIO_USERID%type,              
          P_UPD_USUARIO_NOMBRE              IN  INFI_TB_106_UNIDAD_INVERSION.UPD_USUARIO_NOMBRE%type,              
          P_UPD_USUARIO_ROL_NOMBRE          IN  INFI_TB_106_UNIDAD_INVERSION.UPD_USUARIO_ROL_NOMBRE%type,          
          P_UPD_ESTACION                    IN  INFI_TB_106_UNIDAD_INVERSION.UPD_ESTACION%type,                    
          P_UPD_IP                          IN  INFI_TB_106_UNIDAD_INVERSION.UPD_IP%type,                          
          P_UPD_FECHA                       IN  INFI_TB_106_UNIDAD_INVERSION.UPD_FECHA%type,                       
          P_EMPRES_ID                       IN  INFI_TB_106_UNIDAD_INVERSION.EMPRES_ID%type,                       
          P_UNDINV_UMI_INV_DISPONIBLE       IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_INV_DISPONIBLE%type,       
          P_UNDINV_UMI_UNIDAD               IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_UNIDAD%type,               
          P_UNDINV_PCT_MAX_FINAN            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_PCT_MAX_FINAN%type,            
          P_UNDINV_PRECIO_MAXIMO            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_PRECIO_MAXIMO%type,            
          P_UNDINV_MULTIPLOS                IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_MULTIPLOS%type,                
          P_UNDINV_IN_PEDIDO_MONTO          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_IN_PEDIDO_MONTO%type,          
          P_UNDINV_TASA_POOL                IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_TASA_POOL%type,                
          P_UNDINV_RENDIMIENTO              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_RENDIMIENTO%type,              
          P_UNDINV_MERCADO                  IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_MERCADO%type,                  
          P_UNDINV_IN_PRECIO_SUCIO          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_IN_PRECIO_SUCIO%type,          
          P_UNDINV_FE_LIQUIDACION_HORA1     IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_LIQUIDACION_HORA1%type,     
          P_UNDINV_FE_LIQUIDACION_HORA2     IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_LIQUIDACION_HORA2%type,     
          P_PAGO_IN_BCV                     IN  INFI_TB_106_UNIDAD_INVERSION.PAGO_IN_BCV%type,                     
          P_IN_COBRO_BATCH_ADJ              IN  INFI_TB_106_UNIDAD_INVERSION.IN_COBRO_BATCH_ADJ%type,              
          P_IN_COBRO_BATCH_LIQ              IN  INFI_TB_106_UNIDAD_INVERSION.IN_COBRO_BATCH_LIQ%type,              
          P_DIAS_APERTURA_CUENTA            IN  INFI_TB_106_UNIDAD_INVERSION.DIAS_APERTURA_CUENTA%type,            
          P_INDC_PERMITE_CANCELACION        IN  INFI_TB_106_UNIDAD_INVERSION.INDC_PERMITE_CANCELACION%type,        
          P_UNDINV_ACTIVE                   IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_ACTIVE%type,                  
          P_MONTO_ACUMULADO_SOLIC           IN  INFI_TB_106_UNIDAD_INVERSION.MONTO_ACUMULADO_SOLIC%type,           
          P_TIPO_NEGOCIO                    IN  INFI_TB_106_UNIDAD_INVERSION.TIPO_NEGOCIO%type,                    
          P_NRO_JORNADA                     IN  INFI_TB_106_UNIDAD_INVERSION.NRO_JORNADA%type,                     
          P_UNDINV_PERIODO_VENTA            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_PERIODO_VENTA%type,            
          P_UNDINV_MULTIPLOS_EFECTIVO       IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_MULTIPLOS_EFECTIVO%type,       
          P_UNDINV_UMAX_UNIDAD              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMAX_UNIDAD%type,              
          P_UNDINV_TASA_CAMBIO_OFER         IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_TASA_CAMBIO_OFER%type,         
          P_COMISION_IGTF                   IN  INFI_TB_106_UNIDAD_INVERSION.COMISION_IGTF%type,                   
          P_TIPO_SOLICITUD                  IN  INFI_TB_106_UNIDAD_INVERSION.TIPO_SOLICITUD%type);
          
          
        PROCEDURE SP_CREAR_UI_TITULOS (
            P_UNDINV_ID            IN    INFI_TB_108_UI_TITULOS.UNDINV_ID%type,             
            P_TITULO_ID            IN    INFI_TB_108_UI_TITULOS.TITULO_ID%type,             
            P_UITITU_PORCENTAJE        IN    INFI_TB_108_UI_TITULOS.UITITU_PORCENTAJE%type,         
            P_UITITU_VALOR_EQUIVALENTE    IN    INFI_TB_108_UI_TITULOS.UITITU_VALOR_EQUIVALENTE%type,     
            P_UITITU_IN_CONIDB        IN    INFI_TB_108_UI_TITULOS.UITITU_IN_CONIDB%type,         
            P_UITITU_IN_CONTROL_DISPONIBLE    IN    INFI_TB_108_UI_TITULOS.UITITU_IN_CONTROL_DISPONIBLE%type
        );
        
        PROCEDURE SP_CREAR_UI_EMPRESA (
            P_UNDINV_ID        IN    INFI_TB_109_UI_EMPRESAS.UNDINV_ID%type,            
            P_EMPRES_ID        IN    INFI_TB_109_UI_EMPRESAS.EMPRES_ID%type,        
            P_ROLES_ID        IN    INFI_TB_109_UI_EMPRESAS.ROLES_ID%type,        
            P_UIEMPR_CONTACTO_NOM    IN    INFI_TB_109_UI_EMPRESAS.UIEMPR_CONTACTO_NOM%type,     
            P_UIEMPR_CONTACTO_TLF    IN    INFI_TB_109_UI_EMPRESAS.UIEMPR_CONTACTO_TLF%type
            );
        
        PROCEDURE SP_CREAR_UI_BLOTTER (
            P_UNDINV_ID                     IN INFI_TB_107_UI_BLOTTER.UNDINV_ID%type,                   
            P_BLOTER_ID                     IN INFI_TB_107_UI_BLOTTER.BLOTER_ID%type,                   
            P_UIBLOT_IN_DISPONIBLE          IN INFI_TB_107_UI_BLOTTER.UIBLOT_IN_DISPONIBLE%type,        
            P_UIBLOT_HORARIO_DESDE          IN INFI_TB_107_UI_BLOTTER.UIBLOT_HORARIO_DESDE%type,        
            P_UIBLOT_HORARIO_HASTA          IN INFI_TB_107_UI_BLOTTER.UIBLOT_HORARIO_HASTA%type,        
            P_UIBLOT_PEDIDO_FE_INI          IN INFI_TB_107_UI_BLOTTER.UIBLOT_PEDIDO_FE_INI%type,        
            P_UIBLOT_PEDIDO_FE_FIN          IN INFI_TB_107_UI_BLOTTER.UIBLOT_PEDIDO_FE_FIN%type,        
            P_UIBLOT_SERIAL_COMISIONES      IN INFI_TB_107_UI_BLOTTER.UIBLOT_SERIAL_COMISIONES%type,    
            P_UIBLOT_SERIAL_CAPITAL         IN INFI_TB_107_UI_BLOTTER.UIBLOT_SERIAL_CAPITAL%type,       
            P_TPPEVA_ID                     IN INFI_TB_107_UI_BLOTTER.TPPEVA_ID%type,                   
            P_CTESEG_ID                     IN INFI_TB_107_UI_BLOTTER.CTESEG_ID%type,                   
            P_UIBLOT_IN_DEFECTO             IN INFI_TB_107_UI_BLOTTER.UIBLOT_IN_DEFECTO%type,           
            P_UIBLOT_IN_TESORERIA           IN INFI_TB_107_UI_BLOTTER.UIBLOT_IN_TESORERIA%type,         
            P_UIBLOT_HORARIO_DESDE_ULT_DIA  IN INFI_TB_107_UI_BLOTTER.UIBLOT_HORARIO_DESDE_ULT_DIA%type,
            P_UIBLOT_HORARIO_HASTA_ULT_DIA  IN INFI_TB_107_UI_BLOTTER.UIBLOT_HORARIO_HASTA_ULT_DIA%type,
            P_UIBLOT_GANANCIA_RED           IN INFI_TB_107_UI_BLOTTER.UIBLOT_GANANCIA_RED%type,         
            P_UIBLOT_IN_RECOMPRA            IN INFI_TB_107_UI_BLOTTER.UIBLOT_IN_RECOMPRA%type          
        );
        
        PROCEDURE SP_CREAR_SOLICITUD_DICOM (
            P_NRO_SOLICITUD            IN SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
            P_TIPO_OPERACION           IN SOLICITUDES_DICOM.TIPO_OPERACION%TYPE,
            P_TIPO_CLIENTE             IN SOLICITUDES_DICOM.TIPO_CLIENTE%TYPE,
            P_CED_RIF                  IN SOLICITUDES_DICOM.CED_RIF%TYPE,
            P_NOMBRE_CLIENTE           IN SOLICITUDES_DICOM.NOMBRE_CLIENTE%TYPE,
            P_TELEFONO_CLIENTE         IN SOLICITUDES_DICOM.TELEFONO_CLIENTE%TYPE,
            P_CORREO_CLIENTE           IN SOLICITUDES_DICOM.CORREO_CLIENTE%TYPE,
            P_NRO_CTA_NACIONAL         IN SOLICITUDES_DICOM.NRO_CTA_NACIONAL%TYPE,
            P_NRO_RET_CAPITAL          IN SOLICITUDES_DICOM.NRO_RET_CAPITAL%TYPE,
            P_HORA_BLOQ                IN SOLICITUDES_DICOM.HORA_BLOQ%TYPE,
            P_MONTO_OP_NACIONAL        IN SOLICITUDES_DICOM.MONTO_OP_NACIONAL%TYPE,
            P_DIVISA_NACIONAL          IN SOLICITUDES_DICOM.DIVISA_NACIONAL%TYPE,
            P_NRO_RET_COMISION         IN SOLICITUDES_DICOM.NRO_RET_COMISION%TYPE,
            P_MONTO_COMISION           IN SOLICITUDES_DICOM.MONTO_COMISION%TYPE,
            P_PORC_COMISION            IN SOLICITUDES_DICOM.PORC_COMISION%TYPE,
            P_FECHA_OPERACION          IN SOLICITUDES_DICOM.FECHA_OPERACION%TYPE,
            P_NRO_CTA_EXTRANJERA       IN SOLICITUDES_DICOM.NRO_CTA_EXTRANJERA%TYPE,
            P_MONTO_OP_EXTRANJERA      IN SOLICITUDES_DICOM.MONTO_OP_EXTRANJERA%TYPE,
            P_DIVISA_EXTRANJERA        IN SOLICITUDES_DICOM.DIVISA_EXTRANJERA%TYPE,
            P_TASA_CAMBIO              IN SOLICITUDES_DICOM.TASA_CAMBIO%TYPE,
            P_FECHA_VALOR_OPERACION    IN SOLICITUDES_DICOM.FECHA_VALOR_OPERACION%TYPE,
            P_CODIGO_RESPUESTA         IN SOLICITUDES_DICOM.CODIGO_RESPUESTA%TYPE,
            P_NRO_OPE_DEBITO           IN SOLICITUDES_DICOM.NRO_OPE_DEBITO%TYPE,
            P_NRO_OPE_CREDITO          IN SOLICITUDES_DICOM.NRO_OPE_CREDITO%TYPE,
            P_ESTATUS_REGISTRO         IN SOLICITUDES_DICOM.ESTATUS_REGISTRO%TYPE,
            P_ESTATUS_NOTIFICACION_WS  IN SOLICITUDES_DICOM.ESTATUS_NOTIFICACION_WS%TYPE,
            P_ID_JORNADA               IN SOLICITUDES_DICOM.ID_JORNADA%TYPE,
            P_UNDINV_ID                IN SOLICITUDES_DICOM.UNDINV_ID%TYPE
    );                                         
 FUNCTION GET_SEQUENCE (
        P_TABLE_NAME SEQUENCE_NUMBERS.TABLE_NAME%type
    )
    RETURN SEQUENCE_NUMBERS.NEXT_ID%TYPE;
  PROCEDURE SP_CREAR_SOL_DICOM_TRANSF (
                                        P_ID_JORNADA               IN SOLICITUDES_DICOM.ID_JORNADA%TYPE,
                                        P_TIPO_OPERACION           IN SOLICITUDES_DICOM.TIPO_OPERACION%TYPE,
                                        P_NRO_SOLICITUD            IN SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
                                        P_TIPO_CLIENTE             IN SOLICITUDES_DICOM.TIPO_CLIENTE%TYPE,
                                        P_CED_RIF                  IN SOLICITUDES_DICOM.CED_RIF%TYPE,
                                        P_NRO_CTA_EXTRANJERA       IN SOLICITUDES_DICOM.NRO_CTA_EXTRANJERA%TYPE,
                                        P_MONTO_OP_EXTRANJERA      IN SOLICITUDES_DICOM.MONTO_OP_EXTRANJERA%TYPE,
                                        P_FECHA_VALOR_OPERACION    IN SOLICITUDES_DICOM.FECHA_VALOR_OPERACION%TYPE);
    
 PROCEDURE SP_ACTUALIZAR_SOL_DICOM_TRANSF( p_NRO_SOLICITUD         IN  SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
                                         P_NRO_JORNADA          IN  SOLICITUDES_DICOM.ID_JORNADA%TYPE,
                                         P_CODIGO_RESPUESTA     IN  SOLICITUDES_DICOM.CODIGO_RESPUESTA%TYPE,
                                         p_NOMBRE_CLIENTE       IN SOLICITUDES_DICOM.NOMBRE_CLIENTE%TYPE,
                                         p_TELEFONO_CLIENTE     IN SOLICITUDES_DICOM.TELEFONO_CLIENTE%TYPE,
                                         p_CORREO_CLIENTE       IN SOLICITUDES_DICOM.CORREO_CLIENTE%TYPE,
                                         p_NRO_RET_CAPITAL      IN SOLICITUDES_DICOM.NRO_RET_CAPITAL%TYPE,
                                         p_HORA_BLOQ            IN SOLICITUDES_DICOM.HORA_BLOQ%TYPE,
                                         --p_DIVISA_NACIONAL      IN SOLICITUDES_DICOM.DIVISA_NACIONAL%TYPE,
                                         p_NRO_RET_COMISION     IN SOLICITUDES_DICOM.NRO_RET_COMISION%TYPE,
                                         p_MONTO_COMISION       IN SOLICITUDES_DICOM.MONTO_COMISION%TYPE,
                                         p_PORC_COMISION        IN SOLICITUDES_DICOM.PORC_COMISION%TYPE,
                                         p_DIVISA_EXTRANJERA    IN SOLICITUDES_DICOM.DIVISA_EXTRANJERA%TYPE,
                                        -- p_TASA_CAMBIO          IN SOLICITUDES_DICOM.TASA_CAMBIO%TYPE,
                                         P_NRO_OPE_DEBITO       IN  SOLICITUDES_DICOM.NRO_OPE_DEBITO%TYPE,
                                         P_NRO_OPE_CREDITO      IN  SOLICITUDES_DICOM.NRO_OPE_CREDITO%TYPE,
                                         P_UNDINV_ID            IN INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%TYPE,
                                         P_FECHA_BLOQUEO     IN  SOLICITUDES_DICOM.FECHA_BLOQUEO%TYPE,
                                         P_ID_RESULT_COMPROBACION_BCV  IN  SOLICITUDES_DICOM.ID_RESULT_COMPROBACION_BCV%TYPE                                                                         
                                         ) ;  
    
END;
/


CREATE OR REPLACE PACKAGE ADM_INFI.PK_INFI_LOGIC_DICOM
  IS

-- Purpose: Paquete para el manejo operativo DICOM 
-- 
-- MODIFICATION HISTORY
-- Person      Date         Comments
-- 
-- Daniel Arevalo  28/06/2017   Modificacion Ampliacion de requerimiento para inclusion de comisiones IGTF   

-- ---------   ------  ------------------------------------------       
                       
   
   LOGIC_UNEXPECTED_EXCEPTION EXCEPTION;
   LOGIC_VALIDATION_EXCEPTION EXCEPTION;
   LOGIC_MSJ_EXCEPTION VARCHAR2(255);
   --TYPE vCursorCodOperacion IS REF CURSOR return infi_tb_032_trnf_fijas_vehicu%rowtype;
   type CT_registroDICOM  is table of SOLICITUDES_DICOM%rowtype index by binary_integer;
   
   C_NUMERO_PERSONA CONSTANT number:=1;         
   C_CODIGO_SEGMENTO CONSTANT VARCHAR2(3):='34';            
   C_RIF_BDV CONSTANT VARCHAR2(7):='RIF_BDV';         
   
   C_ORDSTA_ENVIADA CONSTANT INFI_TB_204_ORDENES.ORDSTA_ID%TYPE:='ENVIADA';
   C_ORDSTA_REGISTRADA CONSTANT INFI_TB_204_ORDENES.ORDSTA_ID%TYPE:='REGISTRADA';

   --CAMBIOS DICOM 2018 LENIN RAMIREZ / JOSE GOMEZ 
   --INCLUSION DE CONSTANTES DE ESTATUS PARA ACTUALIZACION DE TABLA TB_204_ORDENES

   C_ORDSTA_PREAPRO CONSTANT INFI_TB_204_ORDENES.ORDSTA_ID%TYPE:='PRE_APROBADA';
   C_ORDSTA_CRUZADA CONSTANT INFI_TB_204_ORDENES.ORDSTA_ID%TYPE:='CRUZADA';
   
   C_TRANS_TOMA_ORDEN CONSTANT INFI_TB_204_ORDENES.TRANSA_ID%TYPE:='TOMA_ORDEN';
   C_TRANS_ORDEN_PAGO CONSTANT INFI_TB_204_ORDENES.TRANSA_ID%TYPE:='ORDEN_PAGO';
            
   C_ESTATUS_OPER_EN_ESPERA CONSTANT INFI_TB_207_ORDENES_OPERACION.STATUS_OPERACION%TYPE:='EN ESPERA';
   C_TIP_TRANS_OPER_DESBLOQUEO CONSTANT INFI_TB_207_ORDENES_OPERACION.TRNF_TIPO%TYPE:='DES';
   C_TIP_TRANS_OPER_DEBITO CONSTANT INFI_TB_207_ORDENES_OPERACION.TRNF_TIPO%TYPE:='DEB';
   C_TIP_TRANS_OPER_CREDITO CONSTANT INFI_TB_207_ORDENES_OPERACION.TRNF_TIPO%TYPE:='CRE';
   
    C_SIGLAS_INFI VARCHAR2(4):='INFI';
    --C_TIPO_ORDEN_OFERTA CHAR :='O';
    --C_TIPO_ORDEN_DEMANDA CHAR :='D';
    C_TIPO_SOLICITUD_DEMANDA NUMBER :=0;
    C_TIPO_SOLICITUD_OFERTA NUMBER :=1;
    
    C_PARGRP_ID INFI_TB_001_PARAM_GRUPO.PARGRP_ID%type :='133';
    C_TIPO_PRODUCTO INFI_TB_019_TIPO_DE_PRODUCTO.TIPO_PRODUCTO_ID%type :='DICOM';
    C_CANAL_DICOM INFI_TB_904_CANAL.CANAL_ID%type :=4;    
    
    C_TRNFINID_TOMA_ORDEN_CAP     CONSTANT    INFI_TB_032_TRNF_FIJAS.TRNFIN_ID%type :=1;
    C_TRNFINID_TOMA_ORDEN_COM     CONSTANT    INFI_TB_032_TRNF_FIJAS.TRNFIN_ID%type :=11;
    C_TRNFINID_TOMA_ORDEN_CONV_20 CONSTANT    INFI_TB_032_TRNF_FIJAS.TRNFIN_ID%type :=17;
    
    
    v_cod_op_blo_cap INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_BLO%TYPE;
    v_cod_op_blo_com INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_BLO%TYPE;   
    v_cod_op_deb_cap INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_DEB%TYPE;
    v_cod_op_cre_cap INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_CRE%TYPE;
    v_cod_op_deb_com INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_DEB%TYPE;        
    v_cod_op_cre_conv_20 INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_CRE%TYPE;
    
    v_bdv_vehiculo_id infi_tb_018_vehiculos.vehicu_id%TYPE;
    
    v_id_toma_orden INFI_TB_204_ORDENES.ORDENE_ID%TYPE;
    v_id_orden_pago INFI_TB_204_ORDENES.ORDENE_ID%TYPE;
    v_username      INFI_TB_204_ORDENES.ORDENE_USR_NOMBRE%TYPE;
    v_ejecucion_id  INFI_TB_204_ORDENES.EJECUCION_ID%TYPE;
    
    v_tipo_solicitud INFI_TB_106_UNIDAD_INVERSION.TIPO_SOLICITUD%TYPE;
    v_empres_id      INFI_TB_106_UNIDAD_INVERSION.EMPRES_ID%TYPE;
    v_bloter_id      INFI_TB_107_UI_BLOTTER.BLOTER_ID%TYPE;
                            
   PROCEDURE SP_PROCESAR_SOLICITUD_DICOM (p_undinv_id            IN INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%TYPE,
                                 p_NRO_SOLICITUD        IN SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
                                 p_TIPO_CLIENTE         IN SOLICITUDES_DICOM.TIPO_CLIENTE%TYPE,
                                 p_CED_RIF              IN SOLICITUDES_DICOM.CED_RIF%TYPE,
                                 p_NOMBRE_CLIENTE       IN SOLICITUDES_DICOM.NOMBRE_CLIENTE%TYPE,
                                 p_TELEFONO_CLIENTE     IN SOLICITUDES_DICOM.TELEFONO_CLIENTE%TYPE,
                                 p_CORREO_CLIENTE       IN SOLICITUDES_DICOM.CORREO_CLIENTE%TYPE,
                                 p_NRO_CTA_NACIONAL     IN SOLICITUDES_DICOM.NRO_CTA_NACIONAL%TYPE,
                                 p_NRO_RET_CAPITAL      IN SOLICITUDES_DICOM.NRO_RET_CAPITAL%TYPE,
                                 p_HORA_BLOQ            IN SOLICITUDES_DICOM.HORA_BLOQ%TYPE,
                                 p_MONTO_OP_NACIONAL    IN SOLICITUDES_DICOM.MONTO_OP_NACIONAL%TYPE,
                                 p_DIVISA_NACIONAL      IN SOLICITUDES_DICOM.DIVISA_NACIONAL%TYPE,
                                 p_NRO_RET_COMISION     IN SOLICITUDES_DICOM.NRO_RET_COMISION%TYPE,
                                 p_MONTO_COMISION       IN SOLICITUDES_DICOM.MONTO_COMISION%TYPE,
                                 p_PORC_COMISION        IN SOLICITUDES_DICOM.PORC_COMISION%TYPE,
                                 p_FECHA_OPERACION      IN SOLICITUDES_DICOM.FECHA_OPERACION%TYPE,
                                 p_NRO_CTA_EXTRANJERA   IN SOLICITUDES_DICOM.NRO_CTA_EXTRANJERA%TYPE,
                                 p_MONTO_OP_EXTRANJERA  IN SOLICITUDES_DICOM.MONTO_OP_EXTRANJERA%TYPE,
                                 p_DIVISA_EXTRANJERA    IN SOLICITUDES_DICOM.DIVISA_EXTRANJERA%TYPE,
                                 p_TASA_CAMBIO          IN SOLICITUDES_DICOM.TASA_CAMBIO%TYPE,
                                 p_FECHA_VALOR_OPERACION IN SOLICITUDES_DICOM.FECHA_VALOR_OPERACION%TYPE,
                                 p_CODIGO_RESPUESTA     IN SOLICITUDES_DICOM.CODIGO_RESPUESTA%TYPE,
                                 p_TIPO_OPERACION       IN SOLICITUDES_DICOM.TIPO_OPERACION%TYPE,
                                 p_PORC_COMISION_IGTF   IN INFI_TB_204_ORDENES.ORDENE_PED_PORC_COMISION_IGTF%TYPE,
                                 p_COMISION_IGTF        IN INFI_TB_204_ORDENES.ORDENE_PED_COMISION_IGTF%TYPE,
                                 p_MONTO_TOTAL_RET      IN INFI_TB_207_ORDENES_OPERACION.MONTO_OPERACION%TYPE,      
                                 p_TIPO_PROCESO         IN INFI_TB_106_UNIDAD_INVERSION.CONTROL_DES%TYPE ); --PARAMETRO CREADO PARA EL MANEJO DEL NUEVO PASO EN EL FLUJO DE 
                                 --DICOM - 0 INDICA QUE SOLO SE CREARAN LOS REGISTROS DE BLOQUEO Y DESBLOQUEO  
                                 --1 INDICA QUE SON OPERACIONES EN FIRNA, A LAS CUALES SE LES CREARAN LOS REGISTROS
                                 --DE DEBITO Y CREDITO TANTO EN DIVISAS COMOM EN BOLIVARES                                                                                                                            
                                
     
PROCEDURE SP_ORQUESTADOR(p_undinv_id            IN INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%TYPE,
                          p_NRO_SOLICITUD        IN SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
                          p_TIPO_CLIENTE         IN SOLICITUDES_DICOM.TIPO_CLIENTE%TYPE,
                          p_CED_RIF              IN SOLICITUDES_DICOM.CED_RIF%TYPE,
                          p_NOMBRE_CLIENTE       IN SOLICITUDES_DICOM.NOMBRE_CLIENTE%TYPE,
                          p_TELEFONO_CLIENTE     IN SOLICITUDES_DICOM.TELEFONO_CLIENTE%TYPE,
                          p_CORREO_CLIENTE       IN SOLICITUDES_DICOM.CORREO_CLIENTE%TYPE,
                          p_NRO_CTA_NACIONAL     IN SOLICITUDES_DICOM.NRO_CTA_NACIONAL%TYPE,
                          p_NRO_RET_CAPITAL      IN SOLICITUDES_DICOM.NRO_RET_CAPITAL%TYPE,
                          p_HORA_BLOQ            IN SOLICITUDES_DICOM.HORA_BLOQ%TYPE,
                          p_MONTO_OP_NACIONAL    IN SOLICITUDES_DICOM.MONTO_OP_NACIONAL%TYPE,
                          p_DIVISA_NACIONAL      IN SOLICITUDES_DICOM.DIVISA_NACIONAL%TYPE,
                          p_NRO_RET_COMISION     IN SOLICITUDES_DICOM.NRO_RET_COMISION%TYPE,
                          p_MONTO_COMISION       IN SOLICITUDES_DICOM.MONTO_COMISION%TYPE,
                          p_PORC_COMISION        IN SOLICITUDES_DICOM.PORC_COMISION%TYPE,
                          p_FECHA_OPERACION      IN SOLICITUDES_DICOM.FECHA_OPERACION%TYPE,
                          p_NRO_CTA_EXTRANJERA   IN SOLICITUDES_DICOM.NRO_CTA_EXTRANJERA%TYPE,
                          p_MONTO_OP_EXTRANJERA  IN SOLICITUDES_DICOM.MONTO_OP_EXTRANJERA%TYPE,
                          p_DIVISA_EXTRANJERA    IN SOLICITUDES_DICOM.DIVISA_EXTRANJERA%TYPE,
                          p_TASA_CAMBIO          IN SOLICITUDES_DICOM.TASA_CAMBIO%TYPE,
                          p_FECHA_VALOR_OPERACION IN SOLICITUDES_DICOM.FECHA_VALOR_OPERACION%TYPE,
                          p_CODIGO_RESPUESTA     IN SOLICITUDES_DICOM.CODIGO_RESPUESTA%TYPE,
                          p_TIPO_OPERACION       IN SOLICITUDES_DICOM.TIPO_OPERACION%TYPE,
                          p_tipo_solicitud       IN INFI_TB_106_UNIDAD_INVERSION.TIPO_SOLICITUD%TYPE,-- AQUI 27                          
                          p_PORC_COMISION_IGTF   IN INFI_TB_204_ORDENES.ORDENE_PED_PORC_COMISION_IGTF%TYPE,
                          p_COMISION_IGTF        IN INFI_TB_204_ORDENES.ORDENE_PED_COMISION_IGTF%TYPE,
                          p_MONTO_TOTAL_RET      IN INFI_TB_207_ORDENES_OPERACION.MONTO_OPERACION%TYPE,                                                                                                                                    
                          p_empres_id            IN INFI_TB_106_UNIDAD_INVERSION.EMPRES_ID%TYPE,
                          p_bdv_vehiculo_id      IN infi_tb_018_vehiculos.vehicu_id%TYPE,                          
                          p_bloter_id            IN INFI_TB_107_UI_BLOTTER.BLOTER_ID%TYPE,                           
                          p_cod_op_blo_cap         IN    INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_BLO%TYPE, 
                          p_cod_op_blo_com         IN    INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_BLO%TYPE, 
                          p_cod_op_deb_cap         IN    INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_DEB%TYPE, 
                          p_cod_op_cre_cap         IN    INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_CRE%TYPE, 
                          p_cod_op_deb_com         IN    INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_DEB%TYPE, 
                          p_cod_op_cre_conv_20     IN    INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_CRE%TYPE, 
                          P_NRO_JORNADA          IN  SOLICITUDES_DICOM.ID_JORNADA%TYPE,
                          p_username             IN INFI_TB_204_ORDENES.ORDENE_USR_NOMBRE%TYPE,
                          p_ejecucion_id         IN INFI_TB_204_ORDENES.EJECUCION_ID%TYPE,
                          p_TIPO_PROCESO         IN INFI_TB_106_UNIDAD_INVERSION.CONTROL_DES%TYPE); --PARAMETRO CREADO PARA EL MANEJO DEL NUEVO PASO EN EL FLUJO DE 
                          --DICOM - 0 INDICA QUE SOLO SE CREARAN LOS REGISTROS DE BLOQUEO Y DESBLOQUEO  
                          --1 INDICA QUE SON OPERACIONES EN FIRNA, A LAS CUALES SE LES CREARAN LOS REGISTROS
                          --DE DEBITO Y CREDITO TANTO EN DIVISAS COMOM EN BOLIVARES
                          
                          PROCEDURE SP_ORQUESTADORINTER(         
                          p_ID_OPER                             IN INFI_TB_235_INTERVENCION.ID_OPER%TYPE,
                          p_STATUS_COBRO                 IN INFI_TB_235_INTERVENCION.STATUS_COBRO%TYPE,
                          p_DESCRIPCION_COBRO          IN INFI_TB_235_INTERVENCION.DESCRIPCION_COBRO%TYPE
                          );
FUNCTION VALIDAR_SOLICITUD_DUPLICADA (p_NRO_SOLICITUD        IN SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE)
RETURN SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE;                                         

PROCEDURE CREAR_UNIDAD_INVERSION_DICOM (
      P_TIPO_ORDEN              IN  CHAR,                                                   -- O=OFERTA , D=DEMANDA 
      P_NRO_JORNADA             IN  INFI_TB_106_UNIDAD_INVERSION.NRO_JORNADA%type,          -- NRO DE JORNADA REGISTRADO EN BCV 
      P_USUARIO                 IN  INFI_TB_106_UNIDAD_INVERSION.AUT_USUARIO_USERID%type,   -- USUARIO GENERICO QUE LLAMA EL PROCESO 
      P_IP                      IN  INFI_TB_106_UNIDAD_INVERSION.AUT_IP%type,               -- IP DEL SERVIDOR QUE LLAMA EL PROCESO 
      P_ID_UNIDAD_INVERSION     OUT INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%type,                          -- EN CASO DE RESULTADO EXITOSO RETORNA EL ID DE UNIDAD DE INVERSIÓN 
      P_MENSAJE                 OUT VARCHAR2,
      
      p_TIPO_PROCESO         IN INFI_TB_106_UNIDAD_INVERSION.CONTROL_DES%TYPE  --PARAMETRO CREADO PARA EL MANEJO DEL NUEVO PASO EN EL FLUJO DE 
    --DICOM - 0 INDICA QUE SOLO SE CREARAN LOS REGISTROS DE BLOQUEO Y DESBLOQUEO  
    --1 INDICA QUE SON OPERACIONES EN FIRNA, A LAS CUALES SE LES CREARAN LOS REGISTROS
    --DE DEBITO Y CREDITO TANTO EN DIVISAS COMOM EN BOLIVARES      
      
       
);

FUNCTION GET_VEHICULO (
    P_RIF VARCHAR2
) RETURN infi_tb_018_vehiculos.vehicu_id%TYPE;

END;
/


CREATE OR REPLACE PACKAGE ADM_INFI.PK_INFI_LOGIC_DICOM_F2
  IS
--
-- To modify this template, edit file PKGSPEC.TXT in TEMPLATE 
-- directory of SQL Navigator
--
-- Purpose: Paquete para el manejo de la persistemcia de la operativa SITCAM
-- 
-- MODIFICATION HISTORY
-- Person      Date         Comments
-- José Gómez  23/12/2016   Creación 

-- ---------   ------  ------------------------------------------       
   -- Enter package declarations as shown below

   --variable_name   datatype;                         
   
   LOGIC_UNEXPECTED_EXCEPTION EXCEPTION;
   LOGIC_VALIDATION_EXCEPTION EXCEPTION;
   LOGIC_MSJ_EXCEPTION VARCHAR2(255);
   --TYPE vCursorCodOperacion IS REF CURSOR return infi_tb_032_trnf_fijas_vehicu%rowtype;
   type CT_registroDICOM  is table of SOLICITUDES_DICOM%rowtype index by binary_integer;
   
   C_NUMERO_PERSONA CONSTANT number:=1;         
   C_CODIGO_SEGMENTO CONSTANT VARCHAR2(3):='34';            
   C_RIF_BDV CONSTANT VARCHAR2(7):='RIF_BDV';         
   
   C_ORDSTA_ENVIADA CONSTANT INFI_TB_204_ORDENES.ORDSTA_ID%TYPE:='ENVIADA';
   C_ORDSTA_REGISTRADA CONSTANT INFI_TB_204_ORDENES.ORDSTA_ID%TYPE:='REGISTRADA';
   C_TRANS_TOMA_ORDEN CONSTANT INFI_TB_204_ORDENES.TRANSA_ID%TYPE:='TOMA_ORDEN';
   C_TRANS_ORDEN_PAGO CONSTANT INFI_TB_204_ORDENES.TRANSA_ID%TYPE:='ORDEN_PAGO';
            
   C_ESTATUS_OPER_EN_ESPERA CONSTANT INFI_TB_207_ORDENES_OPERACION.STATUS_OPERACION%TYPE:='EN ESPERA';
   C_TIP_TRANS_OPER_DESBLOQUEO CONSTANT INFI_TB_207_ORDENES_OPERACION.TRNF_TIPO%TYPE:='DES';
   C_TIP_TRANS_OPER_DEBITO CONSTANT INFI_TB_207_ORDENES_OPERACION.TRNF_TIPO%TYPE:='DEB';
   C_TIP_TRANS_OPER_CREDITO CONSTANT INFI_TB_207_ORDENES_OPERACION.TRNF_TIPO%TYPE:='CRE';
   
    C_SIGLAS_INFI VARCHAR2(4):='INFI';
    --C_TIPO_ORDEN_OFERTA CHAR :='O';
    --C_TIPO_ORDEN_DEMANDA CHAR :='D';
    C_TIPO_SOLICITUD_DEMANDA NUMBER :=0;
    C_TIPO_SOLICITUD_OFERTA NUMBER :=1;
    
    C_PARGRP_ID INFI_TB_001_PARAM_GRUPO.PARGRP_ID%type :='133';
    C_TIPO_PRODUCTO INFI_TB_019_TIPO_DE_PRODUCTO.TIPO_PRODUCTO_ID%type :='DICOM';
    C_CANAL_DICOM INFI_TB_904_CANAL.CANAL_ID%type :=4;    
    
    C_TRNFINID_TOMA_ORDEN_CAP     CONSTANT    INFI_TB_032_TRNF_FIJAS.TRNFIN_ID%type :=1;
    C_TRNFINID_TOMA_ORDEN_COM     CONSTANT    INFI_TB_032_TRNF_FIJAS.TRNFIN_ID%type :=11;
    C_TRNFINID_TOMA_ORDEN_CONV_20 CONSTANT    INFI_TB_032_TRNF_FIJAS.TRNFIN_ID%type :=17;
    
    
    v_cod_op_blo_cap INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_BLO%TYPE;
    v_cod_op_blo_com INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_BLO%TYPE;   
    v_cod_op_deb_cap INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_DEB%TYPE;
    v_cod_op_cre_cap INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_CRE%TYPE;
    v_cod_op_deb_com INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_DEB%TYPE;        
    v_cod_op_cre_conv_20 INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_CRE%TYPE;
    
    v_bdv_vehiculo_id infi_tb_018_vehiculos.vehicu_id%TYPE;
    
    v_id_toma_orden INFI_TB_204_ORDENES.ORDENE_ID%TYPE;
    v_id_orden_pago INFI_TB_204_ORDENES.ORDENE_ID%TYPE;
    v_username      INFI_TB_204_ORDENES.ORDENE_USR_NOMBRE%TYPE;
    v_ejecucion_id  INFI_TB_204_ORDENES.EJECUCION_ID%TYPE;
    
    v_tipo_solicitud INFI_TB_106_UNIDAD_INVERSION.TIPO_SOLICITUD%TYPE;
    v_empres_id      INFI_TB_106_UNIDAD_INVERSION.EMPRES_ID%TYPE;
    v_bloter_id      INFI_TB_107_UI_BLOTTER.BLOTER_ID%TYPE;
                            
   PROCEDURE SP_PROCESAR_SOLICITUD_DICOM (p_undinv_id            IN INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%TYPE,
                                 p_NRO_SOLICITUD        IN SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
                                 p_TIPO_CLIENTE         IN SOLICITUDES_DICOM.TIPO_CLIENTE%TYPE,
                                 p_CED_RIF              IN SOLICITUDES_DICOM.CED_RIF%TYPE,
                                 p_NOMBRE_CLIENTE       IN SOLICITUDES_DICOM.NOMBRE_CLIENTE%TYPE,
                                 p_TELEFONO_CLIENTE     IN SOLICITUDES_DICOM.TELEFONO_CLIENTE%TYPE,
                                 p_CORREO_CLIENTE       IN SOLICITUDES_DICOM.CORREO_CLIENTE%TYPE,
                                 p_NRO_CTA_NACIONAL     IN SOLICITUDES_DICOM.NRO_CTA_NACIONAL%TYPE,
                                 p_NRO_RET_CAPITAL      IN SOLICITUDES_DICOM.NRO_RET_CAPITAL%TYPE,
                                 p_HORA_BLOQ            IN SOLICITUDES_DICOM.HORA_BLOQ%TYPE,
                                 p_MONTO_OP_NACIONAL    IN SOLICITUDES_DICOM.MONTO_OP_NACIONAL%TYPE,
                                 p_DIVISA_NACIONAL      IN SOLICITUDES_DICOM.DIVISA_NACIONAL%TYPE,
                                 p_NRO_RET_COMISION     IN SOLICITUDES_DICOM.NRO_RET_COMISION%TYPE,
                                 p_MONTO_COMISION       IN SOLICITUDES_DICOM.MONTO_COMISION%TYPE,
                                 p_PORC_COMISION        IN SOLICITUDES_DICOM.PORC_COMISION%TYPE,
                                 p_FECHA_OPERACION      IN SOLICITUDES_DICOM.FECHA_OPERACION%TYPE,
                                 p_NRO_CTA_EXTRANJERA   IN SOLICITUDES_DICOM.NRO_CTA_EXTRANJERA%TYPE,
                                 p_MONTO_OP_EXTRANJERA  IN SOLICITUDES_DICOM.MONTO_OP_EXTRANJERA%TYPE,
                                 p_DIVISA_EXTRANJERA    IN SOLICITUDES_DICOM.DIVISA_EXTRANJERA%TYPE,
                                 p_TASA_CAMBIO          IN SOLICITUDES_DICOM.TASA_CAMBIO%TYPE,
                                 p_FECHA_VALOR_OPERACION IN SOLICITUDES_DICOM.FECHA_VALOR_OPERACION%TYPE,
                                 p_CODIGO_RESPUESTA     IN SOLICITUDES_DICOM.CODIGO_RESPUESTA%TYPE,
                                 p_TIPO_OPERACION       IN SOLICITUDES_DICOM.TIPO_OPERACION%TYPE,
                                 p_PORC_COMISION_IGTF   IN INFI_TB_204_ORDENES.ORDENE_PED_PORC_COMISION_IGTF%TYPE,
                                 p_COMISION_IGTF        IN INFI_TB_204_ORDENES.ORDENE_PED_COMISION_IGTF%TYPE,
                                 p_MONTO_TOTAL_RET      IN INFI_TB_207_ORDENES_OPERACION.MONTO_OPERACION%TYPE                                                                                                 
                                );
     
PROCEDURE SP_ORQUESTADOR(p_undinv_id            IN INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%TYPE,
                          p_NRO_SOLICITUD        IN SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
                          p_TIPO_CLIENTE         IN SOLICITUDES_DICOM.TIPO_CLIENTE%TYPE,
                          p_CED_RIF              IN SOLICITUDES_DICOM.CED_RIF%TYPE,
                          p_NOMBRE_CLIENTE       IN SOLICITUDES_DICOM.NOMBRE_CLIENTE%TYPE,
                          p_TELEFONO_CLIENTE     IN SOLICITUDES_DICOM.TELEFONO_CLIENTE%TYPE,
                          p_CORREO_CLIENTE       IN SOLICITUDES_DICOM.CORREO_CLIENTE%TYPE,
                          p_NRO_CTA_NACIONAL     IN SOLICITUDES_DICOM.NRO_CTA_NACIONAL%TYPE,
                          p_NRO_RET_CAPITAL      IN SOLICITUDES_DICOM.NRO_RET_CAPITAL%TYPE,
                          p_HORA_BLOQ            IN SOLICITUDES_DICOM.HORA_BLOQ%TYPE,
                          p_MONTO_OP_NACIONAL    IN SOLICITUDES_DICOM.MONTO_OP_NACIONAL%TYPE,
                          p_DIVISA_NACIONAL      IN SOLICITUDES_DICOM.DIVISA_NACIONAL%TYPE,
                          p_NRO_RET_COMISION     IN SOLICITUDES_DICOM.NRO_RET_COMISION%TYPE,
                          p_MONTO_COMISION       IN SOLICITUDES_DICOM.MONTO_COMISION%TYPE,
                          p_PORC_COMISION        IN SOLICITUDES_DICOM.PORC_COMISION%TYPE,
                          p_FECHA_OPERACION      IN SOLICITUDES_DICOM.FECHA_OPERACION%TYPE,
                          p_NRO_CTA_EXTRANJERA   IN SOLICITUDES_DICOM.NRO_CTA_EXTRANJERA%TYPE,
                          p_MONTO_OP_EXTRANJERA  IN SOLICITUDES_DICOM.MONTO_OP_EXTRANJERA%TYPE,
                          p_DIVISA_EXTRANJERA    IN SOLICITUDES_DICOM.DIVISA_EXTRANJERA%TYPE,
                          p_TASA_CAMBIO          IN SOLICITUDES_DICOM.TASA_CAMBIO%TYPE,
                          p_FECHA_VALOR_OPERACION IN SOLICITUDES_DICOM.FECHA_VALOR_OPERACION%TYPE,
                          p_CODIGO_RESPUESTA     IN SOLICITUDES_DICOM.CODIGO_RESPUESTA%TYPE,
                          p_TIPO_OPERACION       IN SOLICITUDES_DICOM.TIPO_OPERACION%TYPE,
                          p_tipo_solicitud       IN INFI_TB_106_UNIDAD_INVERSION.TIPO_SOLICITUD%TYPE,-- AQUI 27                          
                          p_PORC_COMISION_IGTF   IN INFI_TB_204_ORDENES.ORDENE_PED_PORC_COMISION_IGTF%TYPE,
                          p_COMISION_IGTF        IN INFI_TB_204_ORDENES.ORDENE_PED_COMISION_IGTF%TYPE,
                          p_MONTO_TOTAL_RET      IN INFI_TB_207_ORDENES_OPERACION.MONTO_OPERACION%TYPE,                                                                                                                                    
                          p_empres_id            IN INFI_TB_106_UNIDAD_INVERSION.EMPRES_ID%TYPE,
                          p_bdv_vehiculo_id      IN infi_tb_018_vehiculos.vehicu_id%TYPE,                          
                          p_bloter_id            IN INFI_TB_107_UI_BLOTTER.BLOTER_ID%TYPE,                           
                          p_cod_op_blo_cap		 IN	INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_BLO%TYPE, 
                          p_cod_op_blo_com		 IN	INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_BLO%TYPE, 
                          p_cod_op_deb_cap		 IN	INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_DEB%TYPE, 
                          p_cod_op_cre_cap		 IN	INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_CRE%TYPE, 
                          p_cod_op_deb_com		 IN	INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_DEB%TYPE, 
                          p_cod_op_cre_conv_20	 IN	INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_CRE%TYPE, 
                          P_NRO_JORNADA          IN  SOLICITUDES_DICOM.ID_JORNADA%TYPE,
                          p_username             IN INFI_TB_204_ORDENES.ORDENE_USR_NOMBRE%TYPE,
                          p_ejecucion_id         IN INFI_TB_204_ORDENES.EJECUCION_ID%TYPE);               

PROCEDURE CREAR_UNIDAD_INVERSION_DICOM (
      P_TIPO_ORDEN              IN  CHAR,                                                   -- O=OFERTA , D=DEMANDA 
      P_NRO_JORNADA             IN  INFI_TB_106_UNIDAD_INVERSION.NRO_JORNADA%type,          -- NRO DE JORNADA REGISTRADO EN BCV 
      P_USUARIO                 IN  INFI_TB_106_UNIDAD_INVERSION.AUT_USUARIO_USERID%type,   -- USUARIO GENERICO QUE LLAMA EL PROCESO 
      P_IP                      IN  INFI_TB_106_UNIDAD_INVERSION.AUT_IP%type,               -- IP DEL SERVIDOR QUE LLAMA EL PROCESO 
      P_ID_UNIDAD_INVERSION     OUT INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%type,                          -- EN CASO DE RESULTADO EXITOSO RETORNA EL ID DE UNIDAD DE INVERSIÓN 
      P_MENSAJE                 OUT VARCHAR2                                                -- MENSAJE DE RETORNO 
);

FUNCTION GET_VEHICULO (
    P_RIF VARCHAR2
) RETURN infi_tb_018_vehiculos.vehicu_id%TYPE;

END;
/


CREATE OR REPLACE PACKAGE ADM_INFI.PROCESO_CIERRE AS
/******************************************************************************
   NAME:       PROCESO_CIERRE
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        16/04/2013             1. Created this package.
******************************************************************************/
 reg_operacion       infi_tb_207_ordenes_operacion%rowtype;
 reg_proceso       infi_tb_807_procesos%rowtype;    
 
 TYPE cod_operaciones IS TABLE OF INFI_TB_032_TRNF_FIJAS_VEHICU%ROWTYPE
         INDEX BY BINARY_INTEGER;
      
      cod cod_operaciones; 
      
      --CONSATNTES Tipo de Productos
      PRODUCTO_SUBASTA_DIVISAS INFI_TB_019_TIPO_DE_PRODUCTO.TIPO_PRODUCTO_ID%type:='SUB_DIVISA';
      
      --CONSTANTES a ser utilizadas dentro del procedure
      EN_ESPERA             infi_tb_207_ordenes_operacion.status_operacion%type := 'EN ESPERA';
      RECHAZADA             infi_tb_207_ordenes_operacion.status_operacion%type := 'RECHAZADA';
      OPERACION_DEBITO      infi_tb_207_ordenes_operacion.trnf_tipo%type := 'DEB';      
      TRANSA_COMISION_BUEN_VALOR INFI_TB_032_TRNF_FIJAS.TRANSA_ID%type := 'COMISION_BUEN_VALOR';
      PROC_CIERRE_SISTEMA infi_tb_807_procesos.TRANSA_ID%type:='PROC_CIERRE_SISTEMA';
      
      --CONSTANTES de control de ejecucion de los procesos
      PROCESO_INACTIVO NUMBER:=0;
      PROCESO_ACTIVO NUMBER:=1;
      
      INICIO_PROCESO NUMBER:=0;
      PROCESO_COMISION_BUEN_VALOR NUMBER:=1;
      
      v_id_proceso infi_tb_807_procesos.EJECUCION_ID%type;
      
      v_id_comision_buenvalor INFI_TB_032_TRNF_FIJAS.TRNFIN_ID%type;
      
      v_veh INFI_TB_032_TRNF_FIJAS_VEHICU.VEHICU_ID%type;
      v_instf INFI_TB_032_TRNF_FIJAS_VEHICU.INSFIN_ID%type;
      
      veh_act INFI_TB_032_TRNF_FIJAS_VEHICU.VEHICU_ID%type;
      instf_act INFI_TB_032_TRNF_FIJAS_VEHICU.INSFIN_ID%type;
      
      v_cod_op_buenvalor INFI_TB_207_ORDENES_OPERACION.CODIGO_OPERACION%type;
      
      --v_user_id MSC_USER.MSC_USER_ID%type;
      v_user_id infi_tb_807_procesos.USUARIO_ID%type;
      newfile   Utl_file.File_type;            
      
      v_tasa_buen_valor number:=0;
      
      INDICADOR_EJECUCION number:=1;
      INDICADOR_PROCESO_ACTIVO number:=1;

      TIPO_CIERRE_AUTOMATICO VARCHAR2(20):='CIERRE_AUTOMATICO';
      TIPO_CIERRE_MANUAL VARCHAR2(20):='CIERRE_MANUAL';     
      
      v_fecha_sistema INFI_TB_906_CIERRE.FECHA_SISTEMA%TYPE;       
      
      
   PROCEDURE COMISIONES_BUEN_VALOR(
      p_fecha_precierre IN VARCHAR2     
   );



PROCEDURE CIERRE_SISTEMA(p_fecha_precierre IN VARCHAR2,
                         p_estatus_cierre IN NUMBER,
                         p_usuario IN VARCHAR2,
                         p_ip IN VARCHAR2,
                         p_tipo_cierre VARCHAR2);
                         
PROCEDURE OBTENER_ARCHIVO_CIERRE(p_nombre_archivo IN VARCHAR2, 
                                 p_archivo        OUT BLOB,
                                 p_ruta_archivo IN VARCHAR2);

end PROCESO_CIERRE;
/


CREATE OR REPLACE PACKAGE ADM_INFI.ReglaCanalesDigitales IS
/******************************************************************************
   NAME:       ReglasCanalesDigitales
   PURPOSE:    Progamas para la validación de las Reglas de Negocio
               y algun proceso que sea necesario para los canales digitales
               BdvEnLinea, BdvDigital, Terminal Financiero y otrosI
   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        24/06/2021  Alexander Rincón Creación del Paquete
   
******************************************************************************/

 

  FUNCTION ValidacionHorario(fbloter_id in infi_tb_102_bloter.BLOTER_ID%TYPE, fundinv_id IN infi_tb_106_unidad_inversion.UNDINV_ID%type
                            ) RETURN NUMBER;
  
--  FUNCTION ValidacionFecha(undinv_id IN infi_tb_106_unidad_inversion.UNDINV_ID%type) RETURN NUMBER;
  
--  FUNCTION ValidacionMercado(undinv_id IN infi_tb_106_unidad_inversion.UNDINV_ID%type) RETURN NUMBER;
  
--  PROCEDURE MyProcedure(undinv_id IN infi_tb_106_unidad_inversion.UNDINV_ID%type);

END ReglaCanalesDigitales;
/


CREATE OR REPLACE PACKAGE ADM_INFI.test_parameter AS
/******************************************************************************
   NAME:       test_parameter
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        28/04/2017      NM26659       1. Created this package.
******************************************************************************/

--type vArreglo  is table of VARCHAR2(19);
TYPE list_of_names_t IS TABLE OF VARCHAR2 (100);
arreglo list_of_names_t;
--type vArreglo  is table of  varchar2(30);

  
  PROCEDURE MyProcedure(obj IN  ADM_INFI.OBJ_PRUEBA);

END test_parameter;
/


CREATE OR REPLACE PACKAGE ADM_INFI.VALIDACION
  IS
-- 
-- To modify this template, edit file PKGSPEC.TXT in TEMPLATE 
-- directory of SQL Navigator
--
-- Purpose: Briefly explain the functionality of the package
--  
-- MODIFICATION HISTORY
-- Person      Date    Comments
-- ---------   ------  ------------------------------------------       
   -- Enter package declarations as shown below

--   variable_name   datatype;

   PROCEDURE SOLICITUD_CANAL 
/*   Función para Verificar:
     1.- Si existe una solicitud en Clavenet 
     no permitir una desde la Red o SSCC en INFI
     2.- Si existe una solicitud en INFI no permitir 
     una desde el Canal de Clavenet.
     Parámetros:
     1.- Entrada ---> Cedula o Rif 15 
         dig V00000XXXXXXXXX      Relleno ceros         ----> fced_rif
     2.- Entrada ---> Canal INFI('I') O CLAVENET ('C')  ----> fcanal 
     3.- Entrada ---> Fecha incio Configurada en la Unidad de Inversión     ----> ffecha_inicio
     4.- Entrada ---> Fecha de Cierre Configurada en la Unidad de Inversión ----> ffecha_fin
     3.- Salida  ---> Fecha de solicitud                ----> ffecha_registro
     4.- Salida  ---> Número de Solcitud                ----> fnum_solicitud 
     5.- Salida  ---> Existe SI('1') NO('0') error('2') ----> fexiste
     6.- Salida  ---> Error Oracle si fexiste = '2' */
    ( fced_rif  IN varchar2,
      fcanal    IN varchar2,
      ffecha_inicio IN varchar2,
      ffecha_fin    IN varchar2,
      ffecha_registro OUT date,
      fnum_solicitud  OUT varchar2,
      fexiste         OUT varchar2,
      ferror          OUT varchar2);

END VALIDACION;
/


CREATE OR REPLACE PACKAGE BODY ADM_INFI.INFI_BCV IS
--
-- To modify this template, edit file PKGBODY.TXT in TEMPLATE
-- directory of SQL Navigator
--
-- Purpose: Briefly explain the functionality of the package body
--
-- MODIFICATION HISTORY
-- Person      Date    Comments
-- ---------   ------  ------------------------------------------
-- Enter procedure, function bodies as shown below
-- Procedimiento para Generar el detalle de Cliente con Posición en Custodia a
-- una Fecha de
PROCEDURE posicion (pfecpro    IN      DATE) AS  -- Estatus de Ejecusión del Proceso --
                                                 -- '0' Ok,'1' Errors de solicitud
 ---- Archivo a Generar  ---
   newfile            utl_file.file_type;
 ---- Variables   ---
   institucion        varchar2(4):= '0102';
   cta_custodia       sacc.ACCOUNTNO%type;
   datos              varchar2(100);     --- Datos del Cursor por linea
   ptipper_id         infi_tb_201_ctes.tipper_id%type;
   pclient_cedrif     infi_tb_201_ctes.client_cedrif%type;
   pcedula            varchar2(15);
   rif_cedula         varchar2(15);
   CURSOR C1 IS
        SELECT titulos.titulo_id,
               client_id,
               t100.titulo_fe_emision,
               t100.titulo_fe_vencimiento,
               t100.titulo_moneda_neg,
               estados,
               sum(titcus_cantidad) titcus_cantidad
         FROM (SELECT tt.client_id, tt.titulo_id, tt.titcus_cantidad,
                      tt.fecha AS fecha, tip.tipblo_descripcion AS estados,
                      tt.tasa_cambio
               FROM  infi_tb_705_titulos_bloq_hist tt,
                     infi_tb_700_tipo_bloqueo tip,
                     (SELECT   tipo_producto_id, client_id, t.titulo_id,
                               MAX (t.fecha) AS fecha, t.tipblo_id
                      FROM  infi_tb_705_titulos_bloq_hist t
                      WHERE TRUNC (t.fecha) <= pfecpro
                      GROUP BY client_id, titulo_id, t.tipblo_id,tipo_producto_id) tfecha
          WHERE tt.tipblo_id = tip.tipblo_id
            AND tt.tipo_producto_id = tfecha.tipo_producto_id
            AND tt.tipblo_id = tfecha.tipblo_id
            AND tt.titcus_cantidad IS NOT NULL
            AND tt.titcus_cantidad > 0
            AND tt.fecha = tfecha.fecha
            AND tt.titulo_id = tfecha.titulo_id
            AND tt.client_id = tfecha.client_id
            AND tt.titulo_id like '%BODEN%'
          /*AND   (tt.titulo_id like '%DCBS%'
                  OR tt.titulo_id like '%DPBS%'
                  OR tt.titulo_id like '%LTBS%'
                  OR tt.titulo_id like '%VHBS%'
                  OR tt.titulo_id like '%CBBS%'
                  OR tt.titulo_id like '%CEBS%'
                  OR tt.titulo_id like '%DPUS%')*/
          UNION
          (SELECT tt.client_id, tt.titulo_id,
                    tt.titcus_cantidad
                  - func_infi_cantidad_bloqueada (tt.client_id,
                                                  tt.titulo_id,
                                                  tt.tipo_producto_id,
                                                  pfecpro) titcus_cantidad,
                  tt.fecha_cierre AS fecha, 'DISPONIBLE' AS estados,
                  tt.tasa_cambio
             FROM infi_tb_702_titulos_cierre tt,
                  (SELECT tipo_producto_id, client_id, t.titulo_id,
                          MAX (t.fecha_cierre) fecha_cierre
                   FROM  infi_tb_702_titulos_cierre t
                   WHERE TRUNC (t.fecha_cierre) <= pfecpro
                   GROUP BY client_id, titulo_id, tipo_producto_id) tfecha
            WHERE tt.tipo_producto_id = tfecha.tipo_producto_id
              AND tt.fecha_cierre = tfecha.fecha_cierre
              AND tt.titcus_cantidad IS NOT NULL
              AND tt.titcus_cantidad > 0
              AND tt.titulo_id = tfecha.titulo_id
              AND tt.client_id = tfecha.client_id
              AND tt.titulo_id like '%BODEN%'
              /*AND   (tt.titulo_id like '%DCBS%'
                  OR tt.titulo_id like '%DPBS%'
                  OR tt.titulo_id like '%LTBS%'
                  OR tt.titulo_id like '%VHBS%'
                  OR tt.titulo_id like '%CBBS%'
                  OR tt.titulo_id like '%CEBS%'
                  OR tt.titulo_id like '%DPUS%')*/)) titulos, infi_tb_100_titulos t100
   WHERE  t100.titulo_id = titulos.titulo_id
   GROUP BY titulos.titulo_id,
          client_id,
          t100.titulo_fe_emision,
          t100.titulo_fe_vencimiento,
          t100.titulo_moneda_neg,
          estados
   ORDER BY client_id,titulos.titulo_id;
BEGIN
--  pfecha := to_date(pfecpro,'DD/MM/YYYY');
  newfile := utl_file.fopen('INFI_DIR','posicion.txt','w');
--  pstatus := 0;
  IF utl_file.is_open(newfile) THEN
  -- Se busca la Data de las Posiciones por Cliente ---
     FOR r1 IN C1 LOOP
---  raise_application_error(-20108,'Fecha proceso CCR= '|| pfecpro);
     --- Se busca los datos del Cliente segun ID ---
         SELECT a.tipper_id, a.client_cedrif, a.tipper_id||lpad(a.client_cedrif,14,'0')
         INTO   ptipper_id, pclient_cedrif, pcedula
         FROM   infi_tb_201_ctes a
         WHERE  a.client_id = r1.client_id;
         rif_cedula := pcedula;
     --- Se Busca Cuenta Custodia en OIPICS ---
         BEGIN
           IF trim(ptipper_id) in ('V','E') THEN
              SELECT trim(b.accountno)
              INTO   cta_custodia
              FROM   cust a,sacc b
              WHERE  a.cno   = b.cno
              AND    trim(a.taxid) = pcedula;
            ELSE
          --- Se contruye el RIF según el estandar de 'J' y nueve digitos
              pcedula:= ptipper_id||lpad(pclient_cedrif,8,'0')||infi_getdigvrf(ptipper_id||lpad(pclient_cedrif,8,'0'));
              SELECT trim(b.accountno)
              INTO   cta_custodia
              FROM   cust a,sacc b
              WHERE  a.cno   = b.cno
              AND    trim(a.taxid) = pcedula;
           END IF;
         EXCEPTION
          WHEN OTHERS THEN
               cta_custodia := 'NOCLIENTEOPICS';
         END;
         IF trim(ptipper_id) in ('V','E') THEN
            pcedula := ptipper_id||lpad(pclient_cedrif,9,'0');
         END IF;
         datos := institucion||rpad(cta_custodia,15,' ')||rpad(r1.titulo_id,20,' ')||to_char(r1.titulo_fe_vencimiento,'DD/MM/YYYY')||
                  rpad(r1.titcus_cantidad,22,' ')||rpad(pcedula,15,' ');
         utl_file.put_line(newfile,datos);
     END LOOP;
     utl_file.fclose(newfile);
  END IF;
  EXCEPTION
    WHEN others THEN
         utl_file.fclose(newfile);
         raise_application_error(-20107,'Error NO Controlado'||' RIF/CEDULA= '||rif_cedula||'  '
                                        ||'Error Oracle = '||sqlerrm);
END posicion;

END;
/


CREATE OR REPLACE PACKAGE BODY ADM_INFI."INSERTAR" 
IS
-- Purpose: contener todos los procesos de inserción que se realicen en 
-- de datos
--
-- MODIFICATION HISTORY
-- Creado              Fecha       Comments
-- Alexander Rincón    11/07/2011  Procedimiento para realizar insercciones de
--                                 las diferentes tabla de los procesos a manejar 
--                                 en base de datos.
---------------------------------------------------------------------------------

-- Procedimiento para ADM_INFI.insertar los datos de una orden en la tabla INFI_TB_204_ORDENES 
   
   PROCEDURE infi_tb_207
     ( registros IN   infi_tb_207_ordenes_operacion%rowtype,
       param1    IN   varchar2 DEFAULT '0')
    IS

    numseqope        infi_tb_207_ordenes_operacion.ordene_operacion_id%type;
   BEGIN 
   DBMS_OUTPUT.put_line ('**************** EJECUCION INFI_TB_207 ****************');
    --- Se busca la secuencia correspondiente a la Tabla ORDENES Operacion--
      select next_id+1
      into   numseqope
      from   sequence_numbers
      where  table_name = 'INFI_TB_207_ORDENES_OPERACION';
      update sequence_numbers
      set    next_id = numseqope
      where  table_name = 'INFI_TB_207_ORDENES_OPERACION';
    --- Se crea la Operación Financiera de la orden con los parametros del CURSOR C2 ---
      INSERT INTO infi_tb_207_ordenes_operacion
       (ORDENE_ID,ORDENE_OPERACION_ID,TRNFIN_ID,STATUS_OPERACION,CTA_ORIGEN,CTA_DESTINO,
        APLICA_REVERSO,MONTO_OPERACION,TASA,FECHA_APLICAR,FECHA_PROCESADA,
        ORDENE_OPERACION_ERROR,SERIAL,IN_COMISION,MONEDA_ID,CTECTA_NUMERO,
        CTECTA_NOMBRE,CTECTA_BCOCTA_BCO,CTECTA_BCOCTA_DIRECCION,CTECTA_BCOCTA_SWIFT,
        CTECTA_BCOCTA_BIC,CTECTA_BCOCTA_TELEFONO,CTECTA_BCOCTA_ABA,CTECTA_BCOCTA_PAIS,
        CTECTA_BCOINT_BCO,CTECTA_BCOINT_DIRECCION,CTECTA_BCOINT_SWIFT,CTECTA_BCOINT_BIC,
        CTECTA_BCOINT_TELEFONO,CTECTA_BCOINT_ABA,CTECTA_BCOINT_PAIS,TRNF_TIPO,TITULO_ID,
        NUMERO_RETENCION,ORDENE_RELAC_OPERACION_ID,CHEQUE_NUMERO,FECHA_PAGO_CHEQUE,
        CODIGO_OPERACION,FECHA_INICIO_CP,FECHA_FIN_CP,IN_COMISION_INVARIABLE,
        DIAS_OPERACION,OPERACION_NOMBRE,NUMERO_MOVIMIENTO)
       VALUES
        (registros.ordene_id,numseqope,registros.TRNFIN_ID,registros.STATUS_OPERACION,registros.CTA_ORIGEN,registros.CTA_DESTINO,
         registros.APLICA_REVERSO,registros.MONTO_OPERACION,registros.TASA,registros.FECHA_APLICAR,registros.fecha_procesada,
         registros.ORDENE_OPERACION_ERROR,registros.SERIAL,registros.IN_COMISION,registros.MONEDA_ID,registros.CTECTA_NUMERO,
         registros.CTECTA_NOMBRE,registros.CTECTA_BCOCTA_BCO,registros.CTECTA_BCOCTA_DIRECCION,registros.CTECTA_BCOCTA_SWIFT,
         registros.CTECTA_BCOCTA_BIC,registros.CTECTA_BCOCTA_TELEFONO,registros.CTECTA_BCOCTA_ABA,registros.CTECTA_BCOCTA_PAIS,
         registros.CTECTA_BCOINT_BCO,registros.CTECTA_BCOINT_DIRECCION,registros.CTECTA_BCOINT_SWIFT,registros.CTECTA_BCOINT_BIC,
         registros.CTECTA_BCOINT_TELEFONO,registros.CTECTA_BCOINT_ABA,registros.CTECTA_BCOINT_PAIS,registros.trnf_tipo,registros.TITULO_ID,
         registros.numero_retencion,registros.ORDENE_RELAC_OPERACION_ID,registros.CHEQUE_NUMERO,registros.FECHA_PAGO_CHEQUE,
         registros.codigo_operacion,registros.FECHA_INICIO_CP,registros.FECHA_FIN_CP,registros.IN_COMISION_INVARIABLE,
         registros.DIAS_OPERACION,registros.OPERACION_NOMBRE,registros.numero_movimiento);
   EXCEPTION
      WHEN others THEN
           DBMS_OUTPUT.put_line ('**************** ERROR INESPERADO ****************'||SQLERRM);
           null;
   END infi_tb_207;

-- Procedimiento para ADM_INFI.insertar en la tabla INFI_TB_208_ORDENES_DOCUMENTOS
-- las cuales son las que se envian al Cobro o reintegro en los procesos
-- de Liquidación o Adjudicación.
  /*PROCEDURE infi_tb_208
     ( registros    IN    infi_tb_115_ui_doc%rowtype,
       condiciones  IN    infi_tb_211_ordenes_adj%rowtype,
       datos       OUT    infi_tb_208_ordenes_documentos%rowtype) IS
     
     CURSOR documentos IS
            SELECT UIDOC.documento_id
            FROM   infi_tb_115_ui_doc UIDOC
            WHERE  UIDOC.undinv_id = registros.undinv_id  --1000
            AND    UIDOC.tipcar_id = registros.tipcar_id  --3
            AND    UIDOC.tipper_id = registros.tipper_id  --'V'
            AND    UIDOC.bloter_id = registros.bloter_id; --1;
     id_documento       arr_documentos;
   BEGIN
--     id_documento(
     IF registros.undinv_id = 1000 THEN
        NULL;
     END IF;
     INSERT INTO infi_tb_208_ordenes_documentos
       (ORDENE_ID,ORDENE_DOC_ID,NOMBRE)
      VALUES
       (datos.ordene_id,datos.ordene_doc_id,datos.nombre);
    EXCEPTION
       WHEN others THEN
            null;
  END infi_tb_208;*/

-- Procedimiento para ADM_INFI.insertar en la tabla INFI_TB_212_ORDENES_DATAEXT
-- para los campos adicionales de la orden para el caso de SITME
-- BROKER Y CONSECUTIVO en el proceso de Adjudicación.
   --Procedimiento para ADM_INFI.insertar en la tabla INFI_TB_807_PROCESOS   
   PROCEDURE infi_tb_807( registros IN        infi_tb_807_procesos%rowtype,
                              numseq    OUT    INFI_TB_807_PROCESOS.EJECUCION_ID%type)
   IS
   BEGIN
    --Crear secuencia mensaje
        SELECT next_id+1 INTO numseq FROM SEQUENCE_NUMBERS WHERE table_name = 'INFI_TB_807_PROCESOS';
        UPDATE SEQUENCE_NUMBERS SET next_id = numseq WHERE table_name = 'INFI_TB_807_PROCESOS';
        
        INSERT INTO INFI_TB_807_PROCESOS (EJECUCION_ID,TRANSA_ID,USUARIO_ID,FECHA_INICIO,FECHA_FIN,DESC_ERROR,FECHA_VALOR) 
        VALUES (numseq, registros.TRANSA_ID, registros.USUARIO_ID,registros.FECHA_INICIO,registros.FECHA_FIN,registros.DESC_ERROR,registros.FECHA_VALOR); 
   END infi_tb_807;
   
END;
/


CREATE OR REPLACE PACKAGE BODY ADM_INFI.Menudeo AS
/******************************************************************************
   NAME:       Menudeo
   PURPOSE: Manejo de las Operaciones Capturadas por Terminal Financieros
            resguardadas en la aplicación de Moneda Extranjera(ME) tabla XXXX
            Job XXX con una frecuencia de envio de archivo programada en
            CTL XXXX.

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0       21/05/2019   Alexander Rincon Procesos de Lectura y Carga en INFI
******************************************************************************/

-- Proceso de registro de las operaciones de Compra Venta en la tabla de INFI
-- tabla INFI_TB_234_VC_DIVISAS

  PROCEDURE ProcessInsertME(tableDivisas  IN  INFI_TB_234_VC_DIVISAS%ROWTYPE) IS

  BEGIN
 -- Registro de las Operaciones
    Insert into INFI_TB_234_VC_DIVISAS
        (ID_OPER, ID_OC, OPERACION, STATUS_OPER, MTO_DIVISAS, MTO_BOLIVARES, TASA_CAMBIO, MTO_COMI, NACIONALIDAD, NRO_CED_RIF, NOM_CLIEN, CTA_CLIEN,
         FECH_OPER, CON_ESTADIS, COD_OFI_ORI, COD_DIVISAS, EMAIL_CLIEN, TEL_CLIEN, STATUS_ENVIO, OBSERVACION,MTO_DIVISAS_TRANS)
      Values
        (SEC_ID_OPER.nextval,tableDivisas.ID_OC, tableDivisas.OPERACION, tableDivisas.STATUS_OPER,tableDivisas.MTO_DIVISAS, tableDivisas.MTO_BOLIVARES,
         tableDivisas.TASA_CAMBIO, tableDivisas.MTO_COMI, tableDivisas.NACIONALIDAD, tableDivisas.NRO_CED_RIF, tableDivisas.NOM_CLIEN,
         tableDivisas.CTA_CLIEN, tableDivisas.FECH_OPER, tableDivisas.CON_ESTADIS, tableDivisas.COD_OFI_ORI, tableDivisas.COD_DIVISAS,
         tableDivisas.EMAIL_CLIEN, tableDivisas.TEL_CLIEN, tableDivisas.STATUS_ENVIO, tableDivisas.OBSERVACION, tableDivisas.MTO_DIVISAS_TRANS);
    EXCEPTION
     WHEN DUP_VAL_ON_INDEX THEN
          raise PRIMARY_DUPLICATE;
     WHEN others THEN
          raise_application_error(-20108,'Error NO Controlado'||' Id de Operacion= '||tableDivisas.ID_OPER||'  '
                                        ||'Error Oracle = '||sqlerrm);
  END ProcessInsertME;
-- Proceso para buscar los parametros por Grupo y Nombre de Parametro segun el Producto
-- tabla INFI_TB_001_PARAM_GRUPO, INFI_TB_002_PARAM_TIPOS
  FUNCTION getParametrosSistema(fGrupo     IN  INFI_TB_001_PARAM_GRUPO.PARGRP_NOMBRE%TYPE,
                             fParametro IN  INFI_TB_002_PARAM_TIPOS.PARTIP_NOMBRE_PARAMETRO%TYPE)
                              RETURN INFI_TB_002_PARAM_TIPOS.PARVAL_VALOR%TYPE IS
   --- Variables Locales para el manejo de los valores privados
       fvalor   INFI_TB_002_PARAM_TIPOS.PARVAL_VALOR%TYPE;
  BEGIN
    SELECT P.PARVAL_VALOR
    INTO   fvalor
    FROM   INFI_TB_001_PARAM_GRUPO G,INFI_TB_002_PARAM_TIPOS P
    WHERE  G.PARGRP_ID = P.PARGRP_ID
    AND    G.PARGRP_NOMBRE   = fGrupo
    AND    P.PARTIP_NOMBRE_PARAMETRO = fParametro;
    return fvalor;
  END getParametrosSistema;
----***********************************************************************-----
---- Procesos de Lectura y registro de las operaciones de Compra Venta en ME ---
  PROCEDURE ProcessLoadOperationME IS ---(pfecpro IN date) IS
/********* Parametros del PRODUCTO MENUDEO *********
en las tablas  INFI_TB_001_PARAM_GRUPO Y INFI_TB_002_PARAM_TIPOS
donde PARGRP_NOMBRE   = 'MENUDEO'
**********/
    operDir      INFI_TB_002_PARAM_TIPOS.PARVAL_VALOR%TYPE := getParametrosSistema(producto,'RUTA_MENUDEO_RECEP'); --'/aplicacion1/infi/moneda_extranjera/mesaCambio';      -- Ruta del Archivo enviado por MAinframe
    operDirLog   INFI_TB_002_PARAM_TIPOS.PARVAL_VALOR%TYPE := getParametrosSistema(producto,'RUTA_MENUDEO_LOGS');  --'/aplicacion1/infi/moneda_extranjera/mesaCambio/logs'; -- Archvio de Resultado del proceso
    operDirResp  INFI_TB_002_PARAM_TIPOS.PARVAL_VALOR%TYPE := getParametrosSistema(producto,'RUTA_MENUDEO_RESP');  --'/aplicacion1/infi/moneda_extranjera/mesaCambio/respaldo';  -- Respado del archivo Original
    operArchivo  INFI_TB_002_PARAM_TIPOS.PARVAL_VALOR%TYPE := getParametrosSistema(producto,'NOMBRE_ARCH_MENUDEO'); --'menudeo.txt';      -- Archivo Original a procesar
    logsArchivo  INFI_TB_002_PARAM_TIPOS.PARVAL_VALOR%TYPE := getParametrosSistema(producto,'NOMBRE_ARCH_LOGS'); --'menudeoLogs.txt';  -- Archivo de salida del resultado de los registros procesados
    archivoLogs  INFI_TB_002_PARAM_TIPOS.PARVAL_VALOR%TYPE := getParametrosSistema(producto,'NOMBRE_ARCH_TRACE'); --'archivoLogs'||to_char(sysdate,'ddmmyyyyhh')||'.txt';  -- Archivo de salida del resultado de los registros procesados
/*** declaración de las variables Locales
     para la lógica del registro y control de las operaciones leidas en el archivo
     de las operaciones de Ventas ***/
    regTableDivisas               INFI_TB_234_VC_DIVISAS%rowtype;  --- Registro de la tabla a ser insertda con los datos de las operaciones de divisas
  BEGIN
 --- Correo y telefono unico BDV --          
    regTableDivisas.EMAIL_CLIEN    := 'cuentas_tesoreria@banvenez.com';
    regTableDivisas.TEL_CLIEN      := '02125011653';
 --- Manejo de los nombres de Archivos LOGS ---
     logsArchivo := substr(logsArchivo,0,instr(logsArchivo,'.')-1)||to_char(sysdate,'ddmmyyyy')||substr(logsArchivo,instr(logsArchivo,'.'));
     archivoLogs := substr(archivoLogs,0,instr(archivoLogs,'.')-1)||to_char(sysdate,'ddmmyyyy')||substr(archivoLogs,instr(archivoLogs,'.'));
 --- Se crea el archivo para el Control Operativos de la apertura del archivo de proceso ---
    archLog:= utl_file.fopen(operDirLog,archivoLogs,'a');
  -- Se abre el archivo a ser leido de las operaciones de compra y venta de divisas ---
    operDia:= utl_file.fopen(operDir,operArchivo,'r');
    recordLineLogs := rpad('APERTURA DEL ARCHIVO '||operArchivo||' CON EXITO ',81,' ')||to_char(sysdate,'DD/MM/YYYY  HH:MI:SS');
    utl_file.put_line(archLog,recordLineLogs);
  -- Si abrio satisfactoriamente se procesan los registros --
    IF utl_file.is_open(operDia) THEN
    -- Creo el archivo para de logger para revisar el resultado de las operaciones ---
       operLog:= utl_file.fopen(operDirLog,logsArchivo,'a');
    -- Se recorre el archivo para la lectura de los registros ---
       LOOP
     -- Se lee Línea por Línea el archivo ---
        BEGIN
          utl_file.get_line (operDia, recordLine);
     -- Proceso para decodificar la linea de datos del archivo de Operaciones ME
          recordLineLogs  := recordLine;
          regTableDivisas.ID_OC        := to_number(substr(recordLine,0,(instr(recordLine,';')-1))); -- Dato hasta el termitor ';' --
          recordLine      := substr(recordLine,(instr(recordLine,';')+1));   -- Nueva Linea sin el dato anterior ---
          regTableDivisas.OPERACION      := substr(recordLine,0,(instr(recordLine,';')-1));
          recordLine      := substr(recordLine,(instr(recordLine,';')+1));
          regTableDivisas.STATUS_OPER    := substr(recordLine,0,(instr(recordLine,';')-1));
          recordLine      := substr(recordLine,(instr(recordLine,';')+1));
        -----  Manejo de Montos  ------
          regTableDivisas.MTO_DIVISAS    := substr(recordLine,0,(instr(recordLine,';')-1));
          regTableDivisas.MTO_DIVISAS    := to_number(substr(regTableDivisas.MTO_DIVISAS,0,length(regTableDivisas.MTO_DIVISAS)-2)||'.'||
                                                      substr(regTableDivisas.MTO_DIVISAS,length(regTableDivisas.MTO_DIVISAS)-1));
          recordLine      := substr(recordLine,(instr(recordLine,';')+1));
          regTableDivisas.MTO_BOLIVARES  := substr(recordLine,0,(instr(recordLine,';')-1));
          regTableDivisas.MTO_BOLIVARES    := to_number(substr(regTableDivisas.MTO_BOLIVARES,0,length(regTableDivisas.MTO_BOLIVARES)-2)||'.'||
                                                        substr(regTableDivisas.MTO_BOLIVARES,length(regTableDivisas.MTO_BOLIVARES)-1));
          recordLine      := substr(recordLine,(instr(recordLine,';')+1));
          regTableDivisas.TASA_CAMBIO    := substr(recordLine,0,(instr(recordLine,';')-1));
          regTableDivisas.TASA_CAMBIO    := to_number(substr(regTableDivisas.TASA_CAMBIO,0,length(regTableDivisas.TASA_CAMBIO)-5)||'.'||
                                                   substr(regTableDivisas.TASA_CAMBIO,length(regTableDivisas.TASA_CAMBIO)-4));
          recordLine      := substr(recordLine,(instr(recordLine,';')+1));
          regTableDivisas.MTO_COMI       := substr(recordLine,0,(instr(recordLine,';')-1));
          regTableDivisas.MTO_COMI    := to_number(substr(regTableDivisas.MTO_COMI,0,length(regTableDivisas.MTO_COMI)-2)||'.'||
                                                   substr(regTableDivisas.MTO_COMI,length(regTableDivisas.MTO_COMI)-1));
          recordLine      := substr(recordLine,(instr(recordLine,';')+1));
        ---------------------------------
          regTableDivisas.NACIONALIDAD   := substr(recordLine,0,(instr(recordLine,';')-1));
          recordLine      := substr(recordLine,(instr(recordLine,';')+1));
          regTableDivisas.NRO_CED_RIF    := substr(recordLine,0,(instr(recordLine,';')-1));
          recordLine      := substr(recordLine,(instr(recordLine,';')+1));
          regTableDivisas.NOM_CLIEN      := replace(trim(substr(recordLine,0,(instr(recordLine,';')-1))),'.');
          recordLine      := substr(recordLine,(instr(recordLine,';')+1));
          regTableDivisas.CTA_CLIEN      := substr(recordLine,0,(instr(recordLine,';')-1));
          recordLine      := substr(recordLine,(instr(recordLine,';')+1));
          regTableDivisas.FECH_OPER      := substr(recordLine,0,(instr(recordLine,';')-1));
          recordLine      := substr(recordLine,(instr(recordLine,';')+1));
          regTableDivisas.CON_ESTADIS    := substr(recordLine,0,(instr(recordLine,';')-1));
          recordLine      := substr(recordLine,(instr(recordLine,';')+1));
          regTableDivisas.COD_OFI_ORI    := substr(recordLine,0,(instr(recordLine,';')-1));
          recordLine      := substr(recordLine,(instr(recordLine,';')+1));
          regTableDivisas.COD_DIVISAS    := substr(recordLine,0,(instr(recordLine,';')-1));
          recordLine      := substr(recordLine,(instr(recordLine,';')+1));
       --- Valores por defecto --   
          regTableDivisas.STATUS_ENVIO   := '0'; --'ESTATUS DE LA OPERACION NO ENVIADO'
          regTableDivisas.OBSERVACION    := '';
          regTableDivisas.MTO_DIVISAS_TRANS := 0;   -- Monto de la operacion base en Dolares
    -- Insertamos el registro decodificado de la operación de Compra o Venta en ME para INFI --
          Begin
        --  Registro en la tabla de DIVISAS ----
            ProcessInsertME(regTableDivisas);
        -- Se registra en el archivo de Logs el resultado ---
            recordLineLogs := recordLineLogs||';'||lpad(contRecord,10, '0')||';'||'OPERACION REGISTRADA CON EXITO'||to_char(sysdate,'DD/MM/YYYY  HH:MI:SS');
            utl_file.put_line(operLog,recordLineLogs);
           EXCEPTION
            WHEN PRIMARY_DUPLICATE THEN
               -- Se registra en el archivo de Logs el resultado ---
                 recordLineLogs := recordLineLogs||';'||lpad(contRecord,10, '0')||';'||'OPERACION DUPLICADA CON EXITO'||to_char(sysdate,'DD/MM/YYYY  HH:MI:SS');
                 utl_file.put_line(operLog,recordLineLogs);

          END; -- Código de la inserción
    -- Se actualizan cada quinientos registro grasbados en base de datos ---
          IF contRecord = 500 THEN
             commit;
          END IF;
    -- Se incrementa los registros leidos y Grabados--
          contRecord := contRecord + 1;
      -- De no existir registros o culminar la lectura se sale del archivo --
        EXCEPTION
          WHEN no_data_found THEN
               EXIT; --- Salir del LOOP FINALIZO EL ARCHIVO
          WHEN others THEN
                recordLineLogs := recordLineLogs||';'||lpad(contRecord,10, '0')||';'||'OPERACION LEIDA Y NO REGISTRADA ERROR '||to_char(sysdate,'DD/MM/YYYY  HH:MI:SS')||'  '||sqlerrm;
                utl_file.put_line(operLog,recordLineLogs);
            -- Se incrementa los registros leidos y NO Grabados--
                contRecord := contRecord + 1;                         
        END; --- Código de registros
       END LOOP;
    -- Se actualizan los ultimos registros
       commit;
    -- Si finala todo correctamente se crea el respaldo del archivo leido Con fecha y hora --
       utl_file.FRENAME(operDir,'menudeo.txt',operDirResp,'menudeo'||to_char(sysdate,'ddmmyyyyhhmiss')||'.txt',TRUE);
    -- Se cierran los archivos al finalizar la lectura
       utl_file.fclose(operDia);
       utl_file.fclose(operLog);
       utl_file.fclose(archLog);
     END IF; -- Fin de si Abrio el Archivo
---** mANEJO DE LAS POSIBLES FALLAS EN TIEMPO DE EJECUCIÓN ***----
   EXCEPTION
   WHEN UTL_FILE.INVALID_OPERATION THEN
        utl_file.fclose(operDia);
        utl_file.fclose(operLog);
        recordLineLogs := rpad('ERROR AL ABRIR EL ARCHIVO OPERACION INVALIDA PERMISOS UNIX',60,' ')||' ARCHIVO='||operArchivo||' '||to_char(sysdate,'DD/MM/YYYY  HH:MI:SS');
        utl_file.put_line(archLog,recordLineLogs);
        utl_file.fclose(archLog);
   WHEN UTL_FILE.INVALID_PATH THEN
        utl_file.fclose(operDia);
        utl_file.fclose(operLog);
        recordLineLogs := rpad('ERROR AL ABRIR EL ARCHIVO, OPERACION RUTA INVALIDA',60,' ')||' ARCHIVO='||operArchivo||' '||to_char(sysdate,'DD/MM/YYYY  HH:MI:SS');
        utl_file.put_line(archLog,recordLineLogs);
        utl_file.fclose(archLog);
   WHEN UTL_FILE.INVALID_MODE THEN
        utl_file.fclose(operDia);
        utl_file.fclose(operLog);
        recordLineLogs := rpad('ERROR AL ABRIR EL ARCHIVO, OPERACION MODO INVALIDO',60,' ')||' ARCHIVO='||operArchivo||' '||to_char(sysdate,'DD/MM/YYYY  HH:MI:SS');
        utl_file.put_line(archLog,recordLineLogs);
        utl_file.fclose(archLog);
   WHEN UTL_FILE.INVALID_FILEHANDLE THEN
        utl_file.fclose(operDia);
        utl_file.fclose(operLog);
        recordLineLogs := rpad('ERROR AL ABRIR EL ARCHIVO, MANEJO INVALIDO',60,' ')||' ARCHIVO='||operArchivo||' '||to_char(sysdate,'DD/MM/YYYY  HH:MI:SS');
        utl_file.put_line(archLog,recordLineLogs);
        utl_file.fclose(archLog);
   WHEN UTL_FILE.WRITE_ERROR THEN
        utl_file.fclose(operDia);
        utl_file.fclose(operLog);
        recordLineLogs := rpad('ERROR AL ABRIR EL ARCHIVO, ERROR AL ESCRIBIR',60,' ')||' ARCHIVO='||operArchivo||' '||to_char(sysdate,'DD/MM/YYYY  HH:MI:SS');
        utl_file.put_line(archLog,recordLineLogs);
        utl_file.fclose(archLog);
   WHEN UTL_FILE.READ_ERROR THEN
        utl_file.fclose(operDia);
        utl_file.fclose(operLog);
        recordLineLogs := rpad('ERROR AL ABRIR EL ARCHIVO, ERROR AL LEER',60,' ')||' ARCHIVO='||operArchivo||' '||to_char(sysdate,'DD/MM/YYYY  HH:MI:SS');
        utl_file.put_line(archLog,recordLineLogs);
        utl_file.fclose(archLog);
   WHEN UTL_FILE.INTERNAL_ERROR THEN
        utl_file.fclose(operDia);
        utl_file.fclose(operLog);
        recordLineLogs := rpad('ERROR AL ABRIR EL ARCHIVO, ERROR INTERNO',60,' ')||' ARCHIVO='||operArchivo||' '||to_char(sysdate,'DD/MM/YYYY  HH:MI:SS');
        utl_file.put_line(archLog,recordLineLogs);
        utl_file.fclose(archLog);
   WHEN others THEN
        recordLineLogs := rpad('ERROR AL ABRIR EL ARCHIVO, EXCEPCIÓN OTHERS',60,' ')||' ARCHIVO='||operArchivo||' '||to_char(sysdate,'DD/MM/YYYY  HH:MI:SS'||
                               'Error Oracle = '||sqlerrm);
        utl_file.put_line(archLog,recordLineLogs);
        utl_file.fclose(archLog);
        utl_file.fclose(operDia);
        recordLineLogs := recordLineLogs||';'||lpad(contRecord,10, '0')||';'||'OPERACION REGISTRADA SIN EXITO ERROR '||to_char(sysdate,'DD/MM/YYYY  HH:MI:SS')||'  '||sqlerrm;
        utl_file.put_line(operLog,recordLineLogs);
        utl_file.fclose(operLog);
  END ProcessLoadOperationME;
END Menudeo;
/


CREATE OR REPLACE PACKAGE BODY ADM_INFI.PARAMETROS_CANAL_EXTERNO
AS
   procedure pruebas(
         pcanal      IN       NUMBER,
         pfechapro   IN       DATE,
         pid         IN       VARCHAR2,
         ptiposol    IN       VARCHAR2,
         pstatus     OUT    VARCHAR2)
         AS
   BEGIN
       pstatus := 0;
   END pruebas;

   PROCEDURE mercado (
      pcanal      IN       NUMBER,
      --pfechapro   IN       DATE,
      pid         IN       VARCHAR2,
      pstatus     OUT      VARCHAR2,
      perror      OUT      NUMBER,
      pmultiplo   OUT      NUMBER,
      phorainicio OUT      VARCHAR2,
      phorafin    OUT      VARCHAR2,
      ptasademanda  OUT      VARCHAR2,
      ptasaoferta  OUT     VARCHAR2,
      pmontomaximo OUT     VARCHAR2
   )
   AS
    
   ptippro    INFI_TB_101_INST_FINANCIEROS.insfin_id%type;
   pestatus   NUMBER;
   pmontomin INFI_TB_111_UI_BLOTTER_RANGOS.UIBLOT_UMI_INV_MTO_MIN%TYPE;
   pmontomax INFI_TB_111_UI_BLOTTER_RANGOS.UIBLOT_UMI_INV_MTO_MAX%TYPE;
   ptasamin  INFI_TB_111_UI_BLOTTER_RANGOS.UIBLOT_TASA_PROP_MIN%TYPE; 
   ptasamax  INFI_TB_111_UI_BLOTTER_RANGOS.UIBLOT_TASA_PROP_MAX%TYPE;  
   pblotterid   infi_tb_102_bloter.BLOTER_ID%TYPE;
   pempid        varchar2(10);
   pvalidador   number;

      CURSOR parametro
      IS
         SELECT u.undinv_id, u.undinv_nombre nombre_unidad,
                u.undinv_in_vta_empleados,
                u.undinv_tasa_cambio, U.UNDINV_MULTIPLOS
           FROM infi_tb_106_unidad_inversion u,
                INFI_TB_101_INST_FINANCIEROS F     
          WHERE u.undinv_status = 'PUBLICADA' AND u.undinv_active = 1
          AND   u.insfin_id = f.insfin_id
          AND   f.tipo_producto_id = ptipprodcuto;
        
          
   BEGIN
       ptipprodcuto := 'SICAD2PER';
       perror := 1;
       pstatus := 'El mercado se encuentra Cerrado'; 
          
          SELECT B.BLOTER_ID INTO PBLOTTERID FROM infi_tb_102_bloter B WHERE B.ID_CANAL = PCANAL;

          FOR r1 in parametro LOOP
          --consulta para Validar el Horario
           --DBMS_OUTPUT.put_line ('INGRESO AL FOR');
           --DBMS_OUTPUT.put_line (perror);
            BEGIN  
              SELECT 0, 
                     TO_CHAR(uiblot_horario_desde_ult_dia,'hh:mm:ss am'), 
                     TO_CHAR(uiblot_horario_hasta_ult_dia,'hh:mm:ss  am')  
               INTO  pvalidador,
                     phorainicio,
                     phorafin 
               FROM  infi_tb_107_ui_blotter uib
               WHERE
               --VALIDACION DE HORARIO DE TOMA DE ORDENES - ULTIMO DIA    
               (( uiblot_pedido_fe_fin =TO_DATE (TO_CHAR(SYSDATE,'DD/MM/RRRR'), 'DD/MM/RRRR')   
               AND TO_DATE(TO_CHAR (SYSDATE, 'DD/MM/RRRR')||''||SUBSTR(TO_CHAR(uiblot_horario_desde_ult_dia, 'DD/MM/RRRR hh:mi:ss am'),11,19) , 'DD/MM/RRRR hh:mi:ss am') <=SYSDATE
               AND TO_DATE(TO_CHAR (SYSDATE, 'DD/MM/RRRR')||''||SUBSTR(TO_CHAR(uiblot_horario_hasta_ult_dia, 'DD/MM/RRRR hh:mi:ss am'),11,19) , 'DD/MM/RRRR hh:mi:ss am') >=SYSDATE
               )
               --VALIDACION DE HORARIO DE TOMA DE ORDENES - PRIMEROS DIAS 
               OR ( uiblot_pedido_fe_fin >TO_DATE (TO_CHAR(SYSDATE,'DD/MM/RRRR'), 'DD/MM/RRRR')   
               AND TO_DATE(TO_CHAR (SYSDATE, 'DD/MM/RRRR')||''||SUBSTR(TO_CHAR(uiblot_horario_desde, 'DD/MM/RRRR hh:mi:ss am'),11,19) , 'DD/MM/RRRR hh:mi:ss am') <=SYSDATE
               AND TO_DATE(TO_CHAR (SYSDATE, 'DD/MM/RRRR')||''||SUBSTR(TO_CHAR(uiblot_horario_hasta, 'DD/MM/RRRR hh:mi:ss am'),11,19) , 'DD/MM/RRRR hh:mi:ss am') >=SYSDATE   
               ))  
               AND uib.bloter_id = PBLOTTERID
               AND uib.undinv_id = r1.undinv_id;
            EXCEPTION 
            WHEN NO_DATA_FOUND THEN
               perror := 2;
               pstatus := 'El mercado se encuentra fuera de horario';
              --DBMS_OUTPUT.put_line ('El mercado se encuentra fuera de horario'); 
            EXIT;      
            END;  
             --DBMS_OUTPUT.put_line (perror); 
            -- Consulta para validar si es empleado 
 
            BEGIN
                IF r1.undinv_in_vta_empleados = 0 THEN
                   pempid := LTRIM(SUBSTR(PID,2,11),'0');
                 SELECT 1 
                 INTO  pvalidador
                 FROM  PS_RRHH_VIEW 
                 WHERE EMPLID = pempid;   
                END IF;
            IF pvalidador = 1 THEN
               perror := 3;
               pstatus := 'Es empleado del banco';
               --DBMS_OUTPUT.put_line ('Es empleado del banco');
            EXIT;   
            END IF; 

            EXCEPTION 
            WHEN NO_DATA_FOUND THEN
                perror := 0;
                pstatus := 'OK';
            END;    
            
  
                IF pvalidador = 0 THEN
                    pmultiplo := r1.UNDINV_MULTIPLOS; 
                    ptasademanda := r1.undinv_tasa_cambio;
                    ptasaoferta := 0;
                    
                    SELECT BR.UIBLOT_UMI_INV_MTO_MAX
                    INTO   pmontomaximo 
                    FROM   INFI_TB_102_BLOTER B,
                           INFI_TB_111_UI_BLOTTER_RANGOS BR 
                    WHERE  BR.UNDINV_ID = R1.undinv_id AND
                           B.ID_CANAL = PCANAL AND
                           B.BLOTER_ID = BR.BLOTER_ID AND
                           BR.tipper_id = substr(pid,1,1); 
                    
                    --DBMS_OUTPUT.put_line (pmultiplo);
                perror := 0;
                pstatus := 'OK';
                END IF;   
                     
          END LOOP;
   
   EXCEPTION
          WHEN NO_DATA_FOUND
          THEN
            NULL;
   END mercado;
/*raise_application_error(-20107,'Error NO Controlado'||' RIF/CEDULA= '
                               ||'Error Oracle = '||sqlerrm);*/
procedure confirmacion(
      pid     in   varchar2,
      PTASA   IN   NUMBER,
      PMONTO  IN   NUMBER,
      PCANAL  IN   NUMBER,
      PTIPOSOLI IN VARCHAR2,
      PCUENTA1 IN  VARCHAR2,
      PCUENTA2 IN  VARCHAR2,
      PSTATUS OUT  VARCHAR2,
      PCOMISION OUT varchar2,
      PPCTCOMISION OUT varchar2,
      perror      OUT      NUMBER
      )
AS 
  pcomisionfijo INFI_TB_112_UI_COMISION.COMISION_MONTO_FIJO%TYPE;
  pcomisionpct  INFI_TB_112_UI_COMISION.COMISION_PCT%TYPE;
  pblotterid infi_tb_102_bloter.BLOTER_ID%TYPE;
  pmontomaximo INFI_TB_111_UI_BLOTTER_RANGOS.UIBLOT_UMI_INV_MTO_MAX%type;
  pvalidador   number;

 CURSOR DATOS
 IS
     SELECT u.undinv_id
           FROM infi_tb_106_unidad_inversion u,
                INFI_TB_101_INST_FINANCIEROS F     
          WHERE u.undinv_status = 'PUBLICADA' AND u.undinv_active = 1
          AND   u.insfin_id = f.insfin_id
          AND   f.tipo_producto_id = ptipprodcuto;
          
BEGIN
       ptipprodcuto := 'SICAD2PER';
       perror := 1;
       pstatus := 'El mercado se encuentra Cerrado';
       
       SELECT B.BLOTER_ID INTO PBLOTTERID FROM infi_tb_102_bloter B WHERE B.ID_CANAL = PCANAL;

    FOR R2 IN DATOS LOOP
    --DBMS_OUTPUT.put_line ('Inicio');
       --Validacion de horario 
       BEGIN  
          SELECT 0 
           INTO  pvalidador
           FROM  infi_tb_107_ui_blotter uib
           WHERE
           --VALIDACION DE HORARIO DE TOMA DE ORDENES - ULTIMO DIA    
           (( uiblot_pedido_fe_fin =TO_DATE (TO_CHAR(SYSDATE,'DD/MM/RRRR'), 'DD/MM/RRRR')   
           AND TO_DATE(TO_CHAR (SYSDATE, 'DD/MM/RRRR')||''||SUBSTR(TO_CHAR(uiblot_horario_desde_ult_dia, 'DD/MM/RRRR hh:mi:ss am'),11,19) , 'DD/MM/RRRR hh:mi:ss am') <=SYSDATE
           AND TO_DATE(TO_CHAR (SYSDATE, 'DD/MM/RRRR')||''||SUBSTR(TO_CHAR(uiblot_horario_hasta_ult_dia, 'DD/MM/RRRR hh:mi:ss am'),11,19) , 'DD/MM/RRRR hh:mi:ss am') >=SYSDATE
           )
           --VALIDACION DE HORARIO DE TOMA DE ORDENES - PRIMEROS DIAS 
           OR ( uiblot_pedido_fe_fin >TO_DATE (TO_CHAR(SYSDATE,'DD/MM/RRRR'), 'DD/MM/RRRR')   
           AND TO_DATE(TO_CHAR (SYSDATE, 'DD/MM/RRRR')||''||SUBSTR(TO_CHAR(uiblot_horario_desde, 'DD/MM/RRRR hh:mi:ss am'),11,19) , 'DD/MM/RRRR hh:mi:ss am') <=SYSDATE
           AND TO_DATE(TO_CHAR (SYSDATE, 'DD/MM/RRRR')||''||SUBSTR(TO_CHAR(uiblot_horario_hasta, 'DD/MM/RRRR hh:mi:ss am'),11,19) , 'DD/MM/RRRR hh:mi:ss am') >=SYSDATE   
           ))  
           AND uib.bloter_id = PBLOTTERID
           AND uib.undinv_id = r2.undinv_id;
        EXCEPTION 
        WHEN NO_DATA_FOUND THEN
           perror := 2;
           pstatus := 'El mercado se encuentra fuera de horario';
          --DBMS_OUTPUT.put_line ('El mercado se encuentra fuera de horario'); 
        EXIT;      
        END;
        --DBMS_OUTPUT.put_line ('valido horario');
       SELECT BR.UIBLOT_UMI_INV_MTO_MAX
        INTO   pmontomaximo 
        FROM   INFI_TB_102_BLOTER B,
               INFI_TB_111_UI_BLOTTER_RANGOS BR 
        WHERE  BR.UNDINV_ID = R2.undinv_id AND
               B.ID_CANAL = PCANAL AND
               B.BLOTER_ID = BR.BLOTER_ID AND
               BR.tipper_id = pid; 
     --DBMS_OUTPUT.put_line (pmontomaximo);
       -- Validacion de monto
       BEGIN 
       
       IF PMONTO < pmontomaximo THEN 
        SELECT 2
        INTO   pvalidador 
        FROM   INFI_TB_102_BLOTER B,
               INFI_TB_111_UI_BLOTTER_RANGOS BR 
        WHERE  BR.UNDINV_ID = R2.undinv_id AND
               B.ID_CANAL = PCANAL AND
               B.BLOTER_ID = BR.BLOTER_ID AND
               BR.tipper_id = pid AND 
               PMONTO between BR.UIBLOT_UMI_INV_MTO_MIN AND BR.UIBLOT_UMI_INV_MTO_MAX;
        END IF;
        EXCEPTION 
        WHEN NO_DATA_FOUND THEN
            perror := 4;
            PSTATUS := 'El monto no corresponde';
            --DBMS_OUTPUT.put_line ('El monto no corresponde');
        EXIT;    
       END;  
                   
        
       -- Validacion de tasa 
       BEGIN
       IF PMONTO >= pmontomaximo THEN 
       --DBMS_OUTPUT.put_line ('ingreso mayor a 3000');
        SELECT 2
        INTO   pvalidador 
        FROM   INFI_TB_102_BLOTER B,
               INFI_TB_111_UI_BLOTTER_RANGOS BR 
        WHERE  BR.UNDINV_ID = R2.undinv_id AND
               B.ID_CANAL = PCANAL AND
               B.BLOTER_ID = BR.BLOTER_ID AND
               BR.tipper_id = pid AND 
               PTASA BETWEEN BR.UIBLOT_TASA_PROP_MIN AND BR.UIBLOT_TASA_PROP_MAX; 
       END IF; 
        EXCEPTION 
        WHEN NO_DATA_FOUND THEN
             perror := 5;
             PSTATUS := 'La tasa no corresponde';
             --DBMS_OUTPUT.put_line ('La tasa no corresponde');
        EXIT;            
       END;
       
       --DBMS_OUTPUT.put_line (pvalidador);
       IF pvalidador = 2 THEN
            SELECT UC.COMISION_MONTO_FIJO, 
                   UC.COMISION_PCT  
            INTO   PCOMISIONFIJO,
                   PCOMISIONPCT     
            FROM   INFI_TB_112_UI_COMISION UC 
            WHERE  UC.UNDINV_ID = R2.undinv_id;
         
        IF PTIPOSOLI = 'D' THEN  
            IF PCOMISIONFIJO = 0 THEN
                PCOMISION := (PMONTO*PCOMISIONPCT)/100;
            ELSE    
                PCOMISION := PCOMISIONFIJO;
            END IF;
        ELSE
            IF PCOMISIONFIJO = 0 THEN
                PCOMISION := (PMONTO*PTASA*PCOMISIONPCT)/100;
            ELSE    
                PCOMISION := PCOMISIONFIJO;
            END IF;
           END IF; 
        PPCTCOMISION := PCOMISIONPCT;   
        END IF; 
    
    perror := 0;
    pstatus := 'OK';
    END LOOP;          
    
    EXCEPTION
          WHEN NO_DATA_FOUND
          THEN
            NULL;
    
END confirmacion;      
      
PROCEDURE TOMA_DE_ORDEN(
      PTIPOSOLI             IN   VARCHAR,
      PIDORDEN              IN   NUMBER,
      PTASA                 IN   NUMBER,
      PMONTO                IN   NUMBER,
      PCANAL                IN   NUMBER,
      PID                   IN   VARCHAR2,
      PFECHVENCIMIENTOID    IN   DATE,
      PNOMBRECLI            IN   VARCHAR2,
      PCORREO               IN   VARCHAR2,
      PNUMBLOQUEO           IN   VARCHAR2,
      PIDCONCEPTO           IN   NUMBER,
      PCUENTABFS            IN   VARCHAR2,
      PCUENTANUM            IN   VARCHAR2,
      PCTABANCO             IN   VARCHAR2,
      PCTADIRECCION         IN   VARCHAR2,
      PCTABITSWIFT          IN   VARCHAR2,
      PTELEFONO             IN   VARCHAR2,
      PTELEFONO1            IN   VARCHAR2,
      PTELEFONO2            IN   VARCHAR2,
      PCTADIRECCIONC        IN   VARCHAR2,
      PDIDCANAL             IN   VARCHAR2,
      PCODPAISORIGEN        IN   VARCHAR2,
      PPAISORIGEN           IN   VARCHAR2,
      PCODESTADO            IN   VARCHAR2,
      PESTADO               IN   VARCHAR2,
      PCODCIUDAD            IN   VARCHAR2,
      PCIUDAD               IN   VARCHAR2,
      PCTAABONO             IN   VARCHAR2,
      PCTAABONOMONEDA       IN   VARCHAR2,
      PIDPRODUCTO           IN   VARCHAR2,
      PNOMSUBASTA           IN   VARCHAR2,
      PORIGENFONDO          IN   VARCHAR2,
      PDESTINOFONDO         IN   VARCHAR2,
      PSTATUS               OUT  VARCHAR2,
      PERROR                OUT  NUMBER
)AS   
    
  PMONTOCOMISION SOLICITUDES_SITME.MONTO_COMISION%TYPE;
  PPCCOMISION NUMBER;
  PVALORNOMINAL NUMBER;
  pcomisionfijo INFI_TB_112_UI_COMISION.COMISION_MONTO_FIJO%TYPE;
  pcomisionpct  INFI_TB_112_UI_COMISION.COMISION_PCT%TYPE;
  pblotterid infi_tb_102_bloter.BLOTER_ID%TYPE;
  PVENCERIF SOLICITUDES_SITME.FECHA_VENC_RIF%TYPE DEFAULT SYSDATE;
  PNOMCLIENTE VARCHAR2(90);
  vCUENTABFS  varchar(30) DEFAULT '0';
  
  
  
  CURSOR INSERTARDATOS
    IS
     SELECT u.undinv_id
     FROM   infi_tb_106_unidad_inversion u,
            INFI_TB_101_INST_FINANCIEROS F     
     WHERE  u.undinv_status = 'PUBLICADA' AND u.undinv_active = 1
     AND    u.insfin_id = f.insfin_id
     AND   f.tipo_producto_id = ptipprodcuto;
 
   
BEGIN

    ptipprodcuto := 'SICAD2PER';
    perror := 1;
    pstatus := 'El mercado se encuentra Cerrado';
    
    PVALORNOMINAL := PMONTO*PTASA;
    
    IF PFECHVENCIMIENTOID <> '' THEN
        PVENCERIF := PFECHVENCIMIENTOID;
    END IF;    
    

    SELECT C.CLIENT_NOMBRE INTO PNOMCLIENTE FROM INFI_TB_201_CTES C WHERE C.CLIENT_CEDRIF = LTRIM(SUBSTR(PID,2,11),'0');
    
    IF PCUENTABFS = '' THEN
         vCUENTABFS := PCUENTABFS;
    END IF;    
  
    
    DBMS_OUTPUT.put_line ('inicio');
    
    SELECT B.BLOTER_ID INTO PBLOTTERID FROM infi_tb_102_bloter B WHERE B.ID_CANAL = PCANAL;
    
    FOR R3 IN INSERTARDATOS LOOP
    
     --Validacion de horario 
       BEGIN  
          SELECT 0 
           INTO  perror
           FROM  infi_tb_107_ui_blotter uib
           WHERE
           --VALIDACION DE HORARIO DE TOMA DE ORDENES - ULTIMO DIA    
           (( uiblot_pedido_fe_fin =TO_DATE (TO_CHAR(SYSDATE,'DD/MM/RRRR'), 'DD/MM/RRRR')   
           AND TO_DATE(TO_CHAR (SYSDATE, 'DD/MM/RRRR')||''||SUBSTR(TO_CHAR(uiblot_horario_desde_ult_dia, 'DD/MM/RRRR hh:mi:ss am'),11,19) , 'DD/MM/RRRR hh:mi:ss am') <=SYSDATE
           AND TO_DATE(TO_CHAR (SYSDATE, 'DD/MM/RRRR')||''||SUBSTR(TO_CHAR(uiblot_horario_hasta_ult_dia, 'DD/MM/RRRR hh:mi:ss am'),11,19) , 'DD/MM/RRRR hh:mi:ss am') >=SYSDATE
           )
           --VALIDACION DE HORARIO DE TOMA DE ORDENES - PRIMEROS DIAS 
           OR ( uiblot_pedido_fe_fin >TO_DATE (TO_CHAR(SYSDATE,'DD/MM/RRRR'), 'DD/MM/RRRR')   
           AND TO_DATE(TO_CHAR (SYSDATE, 'DD/MM/RRRR')||''||SUBSTR(TO_CHAR(uiblot_horario_desde, 'DD/MM/RRRR hh:mi:ss am'),11,19) , 'DD/MM/RRRR hh:mi:ss am') <=SYSDATE
           AND TO_DATE(TO_CHAR (SYSDATE, 'DD/MM/RRRR')||''||SUBSTR(TO_CHAR(uiblot_horario_hasta, 'DD/MM/RRRR hh:mi:ss am'),11,19) , 'DD/MM/RRRR hh:mi:ss am') >=SYSDATE   
           ))  
           AND uib.bloter_id = PBLOTTERID
           AND uib.undinv_id = r3.undinv_id;
        EXCEPTION 
        WHEN NO_DATA_FOUND THEN
           perror := 2;
           pstatus := 'El mercado se encuentra fuera de horario';
          --DBMS_OUTPUT.put_line ('El mercado se encuentra fuera de horario'); 
        EXIT;      
        END;
    
        SELECT UC.COMISION_MONTO_FIJO, 
               UC.COMISION_PCT  
        INTO   PCOMISIONFIJO,
               PCOMISIONPCT     
        FROM   INFI_TB_112_UI_COMISION UC 
        WHERE  UC.UNDINV_ID = R3.undinv_id;
         
          IF PTIPOSOLI = 'D' THEN  
            IF PCOMISIONFIJO = 0 THEN
                PMONTOCOMISION := (PMONTO*PCOMISIONPCT)/100;
            ELSE    
                PMONTOCOMISION := PCOMISIONFIJO;
            END IF;
            PSTATUS := '0';
            
            --DBMS_OUTPUT.put_line (PCOMISION);
           
          ELSE
            IF PCOMISIONFIJO = 0 THEN
                PMONTOCOMISION := (PMONTO*PTASA*PCOMISIONPCT)/100;
            ELSE    
                PMONTOCOMISION := PCOMISIONFIJO;
            END IF;
           END IF;
           
           PPCCOMISION := PCOMISIONPCT;
            DBMS_OUTPUT.put_line (PPCCOMISION);
    
    END LOOP;
    
    DBMS_OUTPUT.put_line (PPCCOMISION);

 SAVEPOINT start_tran;
    INSERT INTO SOLICITUDES_SITME
      (ID_ORDEN,
      NUMERO_ORDEN_INFI,
      NOMBRE_CLIENTE,
      CED_RIF_CLIENTE,
      FECHA_VENC_RIF,
      NUM_RUSITME,
      EMAIL_CLIENTE,
      CED_RIF_CONTRAPARTE,
      MONTO_SOLICITADO,
      MONTO_COMISION,
      PORC_COMISION,
      NUM_BLOQUEO,
      MONTO_ADJUDICADO,
      ID_CONCEPTO,
      SECTOR_PRODUCTIVO,
      SECTOR_ACT_ECONOM,
      GRUPO_ECONOMICO,
      ESTATUS,
      FECHA_REGISTRO,
      HORA_REGISTRO,
      FECHA_TRAMITE,
      FECHA_ADJUDICACION,
      FECHA_COBRO,
      FECHA_ENV_SWIFT,
      FECHA_RES_SWIFT,
      TITULO_ADJUDICADO,
      PRECIO_ADJUDICACION,
      VALOR_EFECTIVO_USD,
      VALOR_NOMINAL_USD,
      VALOR_EFECTIVO,
      VALOR_NOMINAL,
      CUENTA_BSF_O,
      NOMBRE_BENEFICIARIO,
      CTA_NUMERO,
      CTA_BANCO,
      CTA_DIRECCION,
      CTA_BIC_SWIFT,
      CTA_TELEFONO,
      CTA_TELEFONO_2,
      CTA_TELEFONO_3,
      CTA_ABA,
      CTA_DIRECCION_C,
      CTA_IBAN,
      CTA_INT_NUMERO,
      CTA_INT_BANCO,
      CTA_INT_DIRECCION,
      CTA_INT_BIC_SWIFT,
      CTA_INT_TELEFONO,
      CTA_INT_ABA,
      CONTADOR_ENV_SWIFT,
      ID_CANAL,
      FECHA_MODIFICACION,
      FECHA_SALIDA_VIAJE,
      FECHA_RETORNO_VIAJE,
      COD_PAIS_ORIGEN,
      DESC_PAIS_ORIGEN,
      COD_ESTADO_ORIGEN,
      DESC_ESTADO_ORIGEN,
      COD_CIUDAD_ORIGEN,
      DESC_CIUDAD_ORIGEN,
      COD_PAIS_DESTINO,
      DESC_PAIS_DESTINO,
      NUM_PASAPORTE,
      NUM_BOLETO,
      CTA_ABONO,
      CTA_ABONO_MONEDA,
      NUM_BOLETO_VUELTA,
      ID_PRODUCTO,
      TASA_CAMBIO,
      CONDICION_MP,
      FECHA_RECEPCION_REC,
      HORA_RECEPCION_REC,
      NOMBRE_SUBASTA,
      ORIGEN_FONDOS,
      DESTINO_FONDOS)
      VALUES
      (PIDORDEN,
      '',
      PNOMCLIENTE,
      PID,
      PVENCERIF,
      '',
      PCORREO,
      '',
      PMONTO,
      PMONTOCOMISION,
      PPCCOMISION,
      PNUMBLOQUEO,
      '',
      PIDCONCEPTO,
      '',
      '',
      '',
      'RECIBIDA',
      TO_DATE(SYSDATE),
      TO_CHAR(SYSDATE, 'HH:MM:SS'),
      SYSDATE,
      '',
      '',
      '',
      '',
      '',
      '',
      '',
      '',
      '',
      PVALORNOMINAL,
      vCUENTABFS,
      PNOMCLIENTE,
      PCUENTANUM,
      PCTABANCO,
      PCTADIRECCION,
      PCTABITSWIFT,
      PTELEFONO,
      PTELEFONO1,
      PTELEFONO2,
      '',
      PCTADIRECCIONC,
      '',
      '',
      '',
      '',
      '',
      '',
      '',
      '',
      PCANAL,
      TO_DATE(SYSDATE),
      TO_DATE(SYSDATE),
      TO_DATE(SYSDATE),
      PCODPAISORIGEN,
      PPAISORIGEN,
      PCODESTADO,
      PESTADO,
      PCODCIUDAD,
      PCIUDAD,
      '',
      '',
      '',
      '', 
      PCTAABONO,
      PCTAABONOMONEDA,
      '',
      PIDCONCEPTO,
      PTASA,
      '',
      '',
      '', 
      PNOMSUBASTA,
      PORIGENFONDO,
      PDESTINOFONDO
      ); 
      
   EXCEPTION 
    WHEN OTHERS THEN
        PSTATUS := 1;
        ROLLBACK TO start_tran;
        RAISE;   
        
        
PSTATUS := 'OK';
perror := 0;
END TOMA_DE_ORDEN; 

                                    
END parametros_canal_externo;
/


CREATE OR REPLACE PACKAGE BODY ADM_INFI.PK_INFI_CRUD
IS
--
-- To modify this template, edit file PKGBODY.TXT in TEMPLATE 
-- directory of SQL Navigator
--
-- Purpose: Briefly explain the functionality of the package body
--
-- MODIFICATION HISTORY
-- Person      Date    Comments
-- ---------   ------  ------------------------------------------      
   -- Enter procedure, function bodies as shown below

   PROCEDURE SP_CREAR_ORDEN(p_UNIINV_ID               IN INFI_TB_204_ORDENES.UNIINV_ID%TYPE,
                                                      p_CLIENT_ID               IN INFI_TB_204_ORDENES.CLIENT_ID%TYPE,
                                                      p_ORDSTA_ID               IN INFI_TB_204_ORDENES.ORDSTA_ID%TYPE,
                                                      p_SISTEMA_ID              IN INFI_TB_204_ORDENES.SISTEMA_ID%TYPE,
                                                      p_EMPRES_ID               IN INFI_TB_204_ORDENES.EMPRES_ID%TYPE,
                                                      p_CONTRAPARTE             IN INFI_TB_204_ORDENES.CONTRAPARTE%TYPE,
                                                      p_TRANSA_ID               IN INFI_TB_204_ORDENES.TRANSA_ID%TYPE,
                                                      p_ENVIADO                 IN INFI_TB_204_ORDENES.ENVIADO%TYPE,
                                                      p_ORDENE_CTE_SEG_BCO      IN INFI_TB_204_ORDENES.ORDENE_CTE_SEG_BCO%TYPE,
                                                      p_ORDENE_CTE_SEG_SEG      IN INFI_TB_204_ORDENES.ORDENE_CTE_SEG_SEG%TYPE,
                                                      p_ORDENE_CTE_SEG_SUB      IN INFI_TB_204_ORDENES.ORDENE_CTE_SEG_SUB%TYPE,
                                                      p_ORDENE_CTE_SEG_INFI     IN INFI_TB_204_ORDENES.ORDENE_CTE_SEG_INFI%TYPE,
                                                      p_ORDENE_PED_FE_ORDEN     IN INFI_TB_204_ORDENES.ORDENE_PED_FE_ORDEN%TYPE,
                                                      p_ORDENE_PED_FE_VALOR     IN INFI_TB_204_ORDENES.ORDENE_PED_FE_VALOR%TYPE,
                                                      p_ORDENE_PED_MONTO        IN INFI_TB_204_ORDENES.ORDENE_PED_MONTO%TYPE,
                                                      p_ORDENE_PED_TOTAL_PEND   IN INFI_TB_204_ORDENES.ORDENE_PED_TOTAL_PEND%TYPE,
                                                      p_ORDENE_PED_TOTAL        IN INFI_TB_204_ORDENES.ORDENE_PED_TOTAL%TYPE,
                                                      p_ORDENE_PED_INT_CAIDOS   IN INFI_TB_204_ORDENES.ORDENE_PED_INT_CAIDOS%TYPE,
                                                      p_BLOTER_ID               IN INFI_TB_204_ORDENES.BLOTER_ID%TYPE,
                                                      p_ORDENE_PED_CTA_BSNRO    IN INFI_TB_204_ORDENES.ORDENE_PED_CTA_BSNRO%TYPE,
                                                      p_ORDENE_PED_CTA_BSTIP    IN INFI_TB_204_ORDENES.ORDENE_PED_CTA_BSTIP%TYPE,
                                                      p_CTECTA_NUMERO           IN INFI_TB_204_ORDENES.CTECTA_NUMERO%TYPE,
                                                      p_ORDENE_PED_PRECIO       IN INFI_TB_204_ORDENES.ORDENE_PED_PRECIO%TYPE,
                                                      p_ORDENE_PED_RENDIMIENTO  IN INFI_TB_204_ORDENES.ORDENE_PED_RENDIMIENTO%TYPE,
                                                      p_ORDENE_PED_IN_BDV       IN INFI_TB_204_ORDENES.ORDENE_PED_IN_BDV%TYPE,
                                                      p_MONEDA_ID               IN INFI_TB_204_ORDENES.MONEDA_ID%TYPE,
                                                      p_ORDENE_PED_RCP_PRECIO   IN INFI_TB_204_ORDENES.ORDENE_PED_RCP_PRECIO%TYPE,
                                                      p_ORDENE_ADJ_MONTO        IN INFI_TB_204_ORDENES.ORDENE_ADJ_MONTO%TYPE,
                                                      p_ORDENE_USR_NOMBRE       IN INFI_TB_204_ORDENES.ORDENE_USR_NOMBRE%TYPE,
                                                      p_ORDENE_USR_CEN_CONTABLE IN INFI_TB_204_ORDENES.ORDENE_USR_CEN_CONTABLE%TYPE,
                                                      p_ORDENE_USR_SUCURSAL     IN INFI_TB_204_ORDENES.ORDENE_USR_SUCURSAL%TYPE,
                                                      p_ORDENE_USR_TERMINAL     IN INFI_TB_204_ORDENES.ORDENE_USR_TERMINAL%TYPE,
                                                      p_ORDENE_VEH_TOM          IN INFI_TB_204_ORDENES.ORDENE_VEH_TOM%TYPE,
                                                      p_ORDENE_VEH_COL          IN INFI_TB_204_ORDENES.ORDENE_VEH_COL%TYPE,
                                                      p_ORDENE_VEH_REC          IN INFI_TB_204_ORDENES.ORDENE_VEH_REC%TYPE,
                                                      p_ORDENE_EJEC_ID          IN INFI_TB_204_ORDENES.ORDENE_EJEC_ID%TYPE,
                                                      p_ORDENE_FE_ULT_ACT       IN INFI_TB_204_ORDENES.ORDENE_FE_ULT_ACT%TYPE,
                                                      p_ORDENE_PED_COMISIONES   IN INFI_TB_204_ORDENES.ORDENE_PED_COMISIONES%TYPE,
                                                      p_ORDENE_FINANCIADO       IN INFI_TB_204_ORDENES.ORDENE_FINANCIADO%TYPE,
                                                      p_EJECUCION_ID            IN INFI_TB_204_ORDENES.EJECUCION_ID%TYPE,
                                                      p_ORDENE_TASA_POOL        IN INFI_TB_204_ORDENES.ORDENE_TASA_POOL%TYPE,
                                                      p_ORDENE_GANANCIA_RED     IN INFI_TB_204_ORDENES.ORDENE_GANANCIA_RED%TYPE,
                                                      p_ORDENE_COMISION_OFICINA IN INFI_TB_204_ORDENES.ORDENE_COMISION_OFICINA%TYPE,
                                                      p_ORDENE_COMISION_OPERACION  IN INFI_TB_204_ORDENES.ORDENE_COMISION_OPERACION%TYPE,
                                                      p_ORDENE_OPERAC_PEND         IN INFI_TB_204_ORDENES.ORDENE_OPERAC_PEND%TYPE,
                                                      p_ORDENE_ID_RELACION         IN INFI_TB_204_ORDENES.ORDENE_ID_RELACION%TYPE,
                                                      p_ORDENE_TASA_CAMBIO         IN INFI_TB_204_ORDENES.ORDENE_TASA_CAMBIO%TYPE,
                                                      p_CONCEPTO_ID                IN INFI_TB_204_ORDENES.CONCEPTO_ID%TYPE,
                                                      p_ORDENE_OBSERVACION         IN INFI_TB_204_ORDENES.ORDENE_OBSERVACION%TYPE,
                                                      p_TIPO_PRODUCTO_ID           IN INFI_TB_204_ORDENES.TIPO_PRODUCTO_ID%TYPE,
                                                      p_CTA_ABONO                  IN INFI_TB_204_ORDENES.CTA_ABONO%TYPE,
                                                      p_PORC_COMISION_IGTF         IN INFI_TB_204_ORDENES.ORDENE_PED_PORC_COMISION_IGTF%TYPE,
                                                      p_COMISION_IGTF              IN INFI_TB_204_ORDENES.ORDENE_PED_COMISION_IGTF%TYPE,
                                                      p_ORDENE_ID                  OUT INFI_TB_204_ORDENES.ORDENE_ID%TYPE

) AS

BEGIN 
    
            IF P_CLIENT_ID IS NULL OR P_ORDSTA_ID IS NULL OR P_TRANSA_ID IS NULL OR P_ORDENE_PED_FE_ORDEN IS NULL OR P_ORDENE_PED_FE_VALOR IS NULL OR P_ORDENE_PED_IN_BDV IS NULL THEN--OR  P_ORDENE_ESTATUS_BCV IS NULL OR P_ORDENE_IDBCV THEN                      
                CRUD_MSJ_EXCEPTION:='Error Validacion: SP_CREAR_ORDEN  - Campo NOT NULL h sido pasado sin informacion';
                RAISE CRUD_VALIDATION_EXCEPTION;                   
            END IF;
                        v_secuencia_ordenes:=GET_SEQUENCE('INFI_TB_204_ORDENES');--BUSQUEDA DE ID DE NUEVA ORDEN
                        p_ORDENE_ID:=v_secuencia_ordenes;
                                   
                        INSERT INTO INFI_TB_204_ORDENES (ORDENE_ID,
                                                         UNIINV_ID,
                                                         CLIENT_ID,
                                                         ORDSTA_ID, 
                                                         SISTEMA_ID,
                                                         EMPRES_ID,
                                                         CONTRAPARTE,
                                                         TRANSA_ID,
                                                         ENVIADO,
                                                         ORDENE_CTE_SEG_BCO,
                                                         ORDENE_CTE_SEG_SEG, 
                                                         ORDENE_CTE_SEG_SUB,
                                                         ORDENE_CTE_SEG_INFI,
                                                         ORDENE_PED_FE_ORDEN,
                                                         ORDENE_PED_FE_VALOR, 
                                                         ORDENE_PED_MONTO,
                                                         ORDENE_PED_TOTAL_PEND,
                                                         ORDENE_PED_TOTAL,
                                                         ORDENE_PED_INT_CAIDOS,
                                                         BLOTER_ID, 
                                                         ORDENE_PED_CTA_BSNRO,
                                                         ORDENE_PED_CTA_BSTIP,
                                                         CTECTA_NUMERO,
                                                         ORDENE_PED_PRECIO, 
                                                         ORDENE_PED_RENDIMIENTO,
                                                         ORDENE_PED_IN_BDV,
                                                         MONEDA_ID,
                                                         ORDENE_PED_RCP_PRECIO,
                                                         ORDENE_ADJ_MONTO, 
                                                         ORDENE_USR_NOMBRE,
                                                         ORDENE_USR_CEN_CONTABLE,
                                                         ORDENE_USR_SUCURSAL,
                                                         ORDENE_USR_TERMINAL, 
                                                         ORDENE_VEH_TOM,
                                                         ORDENE_VEH_COL,
                                                         ORDENE_VEH_REC,
                                                         ORDENE_EJEC_ID,
                                                         ORDENE_FE_ULT_ACT,
                                                         ORDENE_PED_COMISIONES,
                                                         ORDENE_FINANCIADO,
                                                         EJECUCION_ID,
                                                         ORDENE_TASA_POOL,
                                                         ORDENE_GANANCIA_RED, 
                                                         ORDENE_COMISION_OFICINA, 
                                                         ORDENE_COMISION_OPERACION, 
                                                         ORDENE_OPERAC_PEND, 
                                                         ORDENE_ID_RELACION, 
                                                         ORDENE_TASA_CAMBIO,
                                                         CONCEPTO_ID,
                                                         ORDENE_OBSERVACION,
                                                         TIPO_PRODUCTO_ID,
                                                         CTA_ABONO,
                                                         ORDENE_PED_PORC_COMISION_IGTF,
                                                         ORDENE_PED_COMISION_IGTF)                                                           
                                                         VALUES(
                                                          v_secuencia_ordenes,
                                                          p_UNIINV_ID,
                                                          p_CLIENT_ID,
                                                          p_ORDSTA_ID,
                                                          p_SISTEMA_ID,
                                                          p_EMPRES_ID,
                                                          p_CONTRAPARTE,
                                                          p_TRANSA_ID,
                                                          p_ENVIADO,
                                                          p_ORDENE_CTE_SEG_BCO,
                                                          p_ORDENE_CTE_SEG_SEG,
                                                          p_ORDENE_CTE_SEG_SUB,
                                                          p_ORDENE_CTE_SEG_INFI,
                                                          p_ORDENE_PED_FE_ORDEN,
                                                          p_ORDENE_PED_FE_VALOR,
                                                          p_ORDENE_PED_MONTO,
                                                          p_ORDENE_PED_TOTAL_PEND,
                                                          p_ORDENE_PED_TOTAL,
                                                          p_ORDENE_PED_INT_CAIDOS,
                                                          p_BLOTER_ID,
                                                          p_ORDENE_PED_CTA_BSNRO,
                                                          p_ORDENE_PED_CTA_BSTIP,
                                                          p_CTECTA_NUMERO       ,
                                                          p_ORDENE_PED_PRECIO   ,
                                                          p_ORDENE_PED_RENDIMIENTO,
                                                          p_ORDENE_PED_IN_BDV     ,
                                                          p_MONEDA_ID             ,
                                                          p_ORDENE_PED_RCP_PRECIO ,
                                                          p_ORDENE_ADJ_MONTO      ,
                                                          p_ORDENE_USR_NOMBRE     ,
                                                          p_ORDENE_USR_CEN_CONTABLE,
                                                          p_ORDENE_USR_SUCURSAL    ,
                                                          p_ORDENE_USR_TERMINAL    ,
                                                          p_ORDENE_VEH_TOM         ,
                                                          p_ORDENE_VEH_COL         ,
                                                          p_ORDENE_VEH_REC         ,
                                                          p_ORDENE_EJEC_ID         ,
                                                          p_ORDENE_FE_ULT_ACT      ,
                                                          p_ORDENE_PED_COMISIONES  ,
                                                          p_ORDENE_FINANCIADO      ,
                                                          p_EJECUCION_ID           ,
                                                          p_ORDENE_TASA_POOL       ,
                                                          p_ORDENE_GANANCIA_RED    ,
                                                          p_ORDENE_COMISION_OFICINA,
                                                          p_ORDENE_COMISION_OPERACION,
                                                          p_ORDENE_OPERAC_PEND       ,
                                                          p_ORDENE_ID_RELACION       ,
                                                          p_ORDENE_TASA_CAMBIO       ,
                                                          p_CONCEPTO_ID              ,
                                                          p_ORDENE_OBSERVACION       ,
                                                          p_TIPO_PRODUCTO_ID         ,
                                                          p_CTA_ABONO                ,
                                                          p_PORC_COMISION_IGTF       ,
                                                          p_COMISION_IGTF);
            
           EXCEPTION
          WHEN CRUD_VALIDATION_EXCEPTION THEN
          BEGIN
          CRUD_MSJ_EXCEPTION:='Error de Validacion: SP_CREAR_ORDEN '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
            RAISE CRUD_VALIDATION_EXCEPTION;
          END;
          WHEN OTHERS THEN    
          BEGIN
          ROLLBACK;  
          CRUD_MSJ_EXCEPTION:='Error Inesperado: SP_CREAR_ORDEN '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
          RAISE CRUD_UNEXPECTED_EXCEPTION;
          END;
            
                                                                          
END SP_CREAR_ORDEN;


 PROCEDURE SP_CREAR_OPERACION(p_ORDENE_ID              IN INFI_TB_207_ORDENES_OPERACION.ORDENE_ID%TYPE,                                                         
                                                         p_TRNFIN_ID              IN INFI_TB_207_ORDENES_OPERACION.TRNFIN_ID%TYPE,
                                                         p_STATUS_OPERACION       IN INFI_TB_207_ORDENES_OPERACION.STATUS_OPERACION%TYPE,
                                                         p_APLICA_REVERSO         IN INFI_TB_207_ORDENES_OPERACION.APLICA_REVERSO%TYPE,
                                                         p_MONTO_OPERACION        IN INFI_TB_207_ORDENES_OPERACION.MONTO_OPERACION%TYPE,
                                                         p_TASA                   IN INFI_TB_207_ORDENES_OPERACION.TASA%TYPE,
                                                         p_FECHA_APLICAR          IN INFI_TB_207_ORDENES_OPERACION.FECHA_APLICAR%TYPE,
                                                         p_FECHA_PROCESADA        IN INFI_TB_207_ORDENES_OPERACION.FECHA_PROCESADA%TYPE,
                                                         p_ORDENE_OPERACION_ERROR IN INFI_TB_207_ORDENES_OPERACION.ORDENE_OPERACION_ERROR%TYPE,
                                                         p_SERIAL                 IN INFI_TB_207_ORDENES_OPERACION.SERIAL%TYPE,
                                                         p_IN_COMISION            IN INFI_TB_207_ORDENES_OPERACION.IN_COMISION%TYPE,
                                                         p_MONEDA_ID              IN INFI_TB_207_ORDENES_OPERACION.MONEDA_ID%TYPE,
                                                         p_CTECTA_NUMERO          IN INFI_TB_207_ORDENES_OPERACION.CTECTA_NUMERO%TYPE,
                                                         p_OPERACION_NOMBRE       IN INFI_TB_207_ORDENES_OPERACION.OPERACION_NOMBRE%TYPE,
                                                         p_CTECTA_NOMBRE          IN INFI_TB_207_ORDENES_OPERACION.CTECTA_NOMBRE%TYPE,
                                                         p_CTECTA_BCOCTA_BCO      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_BCO%TYPE,                                                         
                                                         p_CTECTA_BCOCTA_DIRECCION IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_DIRECCION%TYPE,
                                                         p_CTECTA_BCOCTA_SWIFT    IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_SWIFT%TYPE,
                                                         p_CTECTA_BCOCTA_BIC      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_BIC%TYPE,
                                                         p_CTECTA_BCOCTA_TELEFONO IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_TELEFONO%TYPE,
                                                         p_CTECTA_BCOCTA_ABA      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_ABA%TYPE,
                                                         p_CTECTA_BCOCTA_PAIS     IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_PAIS%TYPE,
                                                         p_CTECTA_BCOINT_BCO      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_BCO%TYPE,
                                                         p_CTECTA_BCOINT_DIRECCION IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_DIRECCION%TYPE,
                                                         p_CTECTA_BCOINT_SWIFT    IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_SWIFT%TYPE,
                                                         p_CTECTA_BCOINT_BIC      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_BIC%TYPE,
                                                         p_CTECTA_BCOINT_TELEFONO IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_TELEFONO%TYPE,
                                                         p_CTECTA_BCOINT_ABA      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_ABA%TYPE,
                                                         p_CTECTA_BCOINT_PAIS     IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_PAIS%TYPE,
                                                         p_TRNF_TIPO              IN INFI_TB_207_ORDENES_OPERACION.TRNF_TIPO%TYPE,
                                                         p_TITULO_ID              IN INFI_TB_207_ORDENES_OPERACION.TITULO_ID%TYPE,
                                                         p_CODIGO_OPERACION       IN INFI_TB_207_ORDENES_OPERACION.CODIGO_OPERACION%TYPE,
                                                         p_NUMERO_RETENCION       IN INFI_TB_207_ORDENES_OPERACION.NUMERO_RETENCION%TYPE,
                                                         p_ORDENE_RELAC_OPERACION_ID IN INFI_TB_207_ORDENES_OPERACION.ORDENE_RELAC_OPERACION_ID%TYPE,
                                                         p_FECHA_INICIO_CP        IN INFI_TB_207_ORDENES_OPERACION.FECHA_INICIO_CP%TYPE,
                                                         p_FECHA_FIN_CP           IN INFI_TB_207_ORDENES_OPERACION.FECHA_FIN_CP%TYPE,
                                                         p_IN_COMISION_INVARIABLE IN INFI_TB_207_ORDENES_OPERACION.IN_COMISION_INVARIABLE%TYPE

) AS

BEGIN 

        
            IF p_ORDENE_ID IS NULL OR p_MONTO_OPERACION IS NULL OR p_STATUS_OPERACION IS NULL OR p_TRNFIN_ID IS NULL THEN                      
            CRUD_MSJ_EXCEPTION:='Error Validacion: SP_CREAR_OPERACION  - Campo NOT NULL sido pasado sin informacion';
            RAISE CRUD_VALIDATION_EXCEPTION;                   
            END IF;

                  v_secuencia_operacion:=GET_SEQUENCE('INFI_TB_207_ORDENES_OPERACION');--BUSQUEDA DE ID DE NUEVA ORDEN

                                                         INSERT INTO INFI_TB_207_ORDENES_OPERACION (
                                                                ORDENE_ID,
                                                                ORDENE_OPERACION_ID, 
                                                                TRNFIN_ID,STATUS_OPERACION, 
                                                                APLICA_REVERSO,
                                                                MONTO_OPERACION,
                                                                TASA,
                                                                FECHA_APLICAR,
                                                                FECHA_PROCESADA, 
                                                                ORDENE_OPERACION_ERROR,
                                                                SERIAL,
                                                                IN_COMISION,
                                                                MONEDA_ID,                     
                                                                CTECTA_NUMERO, 
                                                                OPERACION_NOMBRE, 
                                                                CTECTA_NOMBRE,
                                                                CTECTA_BCOCTA_BCO,
                                                                CTECTA_BCOCTA_DIRECCION,
                                                                CTECTA_BCOCTA_SWIFT, 
                                                                CTECTA_BCOCTA_BIC,
                                                                CTECTA_BCOCTA_TELEFONO,
                                                                CTECTA_BCOCTA_ABA,
                                                                CTECTA_BCOCTA_PAIS,
                                                                CTECTA_BCOINT_BCO, 
                                                                CTECTA_BCOINT_DIRECCION,
                                                                CTECTA_BCOINT_SWIFT,
                                                                CTECTA_BCOINT_BIC,
                                                                CTECTA_BCOINT_TELEFONO,
                                                                CTECTA_BCOINT_ABA,    
                                                                CTECTA_BCOINT_PAIS,
                                                                TRNF_TIPO,TITULO_ID,
                                                                CODIGO_OPERACION,
                                                                NUMERO_RETENCION,
                                                                ORDENE_RELAC_OPERACION_ID,
                                                                FECHA_INICIO_CP,
                                                                FECHA_FIN_CP,
                                                                IN_COMISION_INVARIABLE)                     
                                                                VALUES
                                                                 (p_ORDENE_ID,
                                                                 v_secuencia_operacion,
                                                                 p_TRNFIN_ID,
                                                                 p_STATUS_OPERACION,
                                                                 p_APLICA_REVERSO,
                                                                 p_MONTO_OPERACION,
                                                                 p_TASA,
                                                                 p_FECHA_APLICAR,
                                                                 p_FECHA_PROCESADA,
                                                                 p_ORDENE_OPERACION_ERROR,
                                                                 p_SERIAL,
                                                                 p_IN_COMISION,
                                                                 p_MONEDA_ID,
                                                                 p_CTECTA_NUMERO,
                                                                 p_OPERACION_NOMBRE,
                                                                 p_CTECTA_NOMBRE,
                                                                 p_CTECTA_BCOCTA_BCO,
                                                                 p_CTECTA_BCOCTA_DIRECCION,
                                                                 p_CTECTA_BCOCTA_SWIFT,
                                                                 p_CTECTA_BCOCTA_BIC,
                                                                 p_CTECTA_BCOCTA_TELEFONO,
                                                                 p_CTECTA_BCOCTA_ABA,
                                                                 p_CTECTA_BCOCTA_PAIS,
                                                                 p_CTECTA_BCOINT_BCO,
                                                                 p_CTECTA_BCOINT_DIRECCION,
                                                                 p_CTECTA_BCOINT_SWIFT,
                                                                 p_CTECTA_BCOINT_BIC,
                                                                 p_CTECTA_BCOINT_TELEFONO,
                                                                 p_CTECTA_BCOINT_ABA,
                                                                 p_CTECTA_BCOINT_PAIS,
                                                                 p_TRNF_TIPO,
                                                                 p_TITULO_ID,
                                                                 p_CODIGO_OPERACION,
                                                                 p_NUMERO_RETENCION,
                                                                 p_ORDENE_RELAC_OPERACION_ID,
                                                                 p_FECHA_INICIO_CP,
                                                                 p_FECHA_FIN_CP,
                                                                 p_IN_COMISION_INVARIABLE);
          EXCEPTION
          WHEN CRUD_VALIDATION_EXCEPTION THEN
          BEGIN
          CRUD_MSJ_EXCEPTION:='Error de Validacion: SP_CREAR_OPERACION '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
            RAISE CRUD_VALIDATION_EXCEPTION;
          END;
          WHEN OTHERS THEN    
          BEGIN
          ROLLBACK;  
          CRUD_MSJ_EXCEPTION:='Error Inesperado: SP_CREAR_OPERACION '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
          RAISE CRUD_UNEXPECTED_EXCEPTION;
          END;  
            
END SP_CREAR_OPERACION;

PROCEDURE SP_CREAR_CLIENTE(p_TIPPER_ID        IN INFI_TB_201_CTES.TIPPER_ID%TYPE,
                            p_CLIENT_CEDRIF   IN INFI_TB_201_CTES.CLIENT_CEDRIF%TYPE,
                            p_CLIENT_NOMBRE   IN INFI_TB_201_CTES.CLIENT_NOMBRE%TYPE,
                            p_CLIENT_TELEFONO IN INFI_TB_201_CTES.CLIENT_TELEFONO%TYPE,
                            p_CLIENT_CORREO_ELECTRONICO IN INFI_TB_201_CTES.CLIENT_CORREO_ELECTRONICO%TYPE,
                            p_CTESEG_ID      IN INFI_TB_201_CTES.CTESEG_ID%TYPE,
                            p_NUMERO_PERSONA IN INFI_TB_201_CTES.NUMERO_PERSONA%TYPE,
                            p_CLIENT_ID      OUT INFI_TB_201_CTES.CLIENT_ID%TYPE) AS
                            
                            
                            v_CLIENT_CTA_CUSTOD_ID SEQUENCE_NUMBERS.NEXT_ID%TYPE;

BEGIN 

                            IF p_TIPPER_ID IS NULL OR p_CLIENT_CEDRIF IS NULL OR p_CLIENT_NOMBRE IS NULL THEN                      
                                CRUD_MSJ_EXCEPTION:='Error Validacion: SP_CREAR_CLIENTE  - Campo NOT NULL sido pasado sin informacion';
                                RAISE CRUD_VALIDATION_EXCEPTION;                   
                            END IF;
                            
                            v_secuencia_cliente:=GET_SEQUENCE('INFI_TB_201_CTES');--BUSQUEDA DE ID DE NUEVA ORDEN
                            p_CLIENT_ID:=v_secuencia_cliente;
                            v_CLIENT_CTA_CUSTOD_ID:=GET_SEQUENCE('CTA_CUSTODIA');
                            
                            INSERT INTO INFI_TB_201_CTES (CLIENT_ID,
                                                          TIPPER_ID,
                                                          CLIENT_CEDRIF,
                                                          CLIENT_NOMBRE,
                                                          CLIENT_TELEFONO,
                                                          CLIENT_CTA_CUSTOD_ID,
                                                          CLIENT_CTA_CUSTOD_FECHA,
                                                          CLIENT_CORREO_ELECTRONICO,
                                                          CTESEG_ID,
                                                          NUMERO_PERSONA) 
                                                    values (v_secuencia_cliente,
                                                            p_TIPPER_ID,
                                                            p_CLIENT_CEDRIF,
                                                            p_CLIENT_NOMBRE,
                                                            p_CLIENT_TELEFONO,
                                                             v_CLIENT_CTA_CUSTOD_ID,
                                                             SYSDATE,
                                                            p_CLIENT_CORREO_ELECTRONICO,
                                                            p_CTESEG_ID,
                                                            p_NUMERO_PERSONA
                                                            );
                                                            
                                                              
            EXCEPTION
          WHEN CRUD_VALIDATION_EXCEPTION THEN
          BEGIN
          CRUD_MSJ_EXCEPTION:='Error de Validacion: SP_CREAR_CLIENTE '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
            RAISE CRUD_VALIDATION_EXCEPTION;
          END;
          WHEN OTHERS THEN    
          BEGIN
          ROLLBACK;  
          CRUD_MSJ_EXCEPTION:='Error Inesperado: SP_CREAR_CLIENTE '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
          RAISE CRUD_UNEXPECTED_EXCEPTION;
          END;   
--            WHEN OTHERS THEN
--            BEGIN
--            ROLLBACK;  
--            CRUD_MSJ_EXCEPTION:='Error Inesperado: SP_CREAR_CLIENTE '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
--            RAISE CRUD_UNEXPECTED_EXCEPTION;                           
--            END;
            
END SP_CREAR_CLIENTE;   

PROCEDURE SP_ACTIALIZAR_SOLICITUD_DICOM( p_NRO_SOLICITUD         IN  SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
                                         P_NRO_JORNADA          IN  SOLICITUDES_DICOM.ID_JORNADA%TYPE,
                                         P_CODIGO_RESPUESTA     IN  SOLICITUDES_DICOM.CODIGO_RESPUESTA%TYPE,
                                         p_NOMBRE_CLIENTE       IN SOLICITUDES_DICOM.NOMBRE_CLIENTE%TYPE,
                                         p_TELEFONO_CLIENTE     IN SOLICITUDES_DICOM.TELEFONO_CLIENTE%TYPE,
                                         p_CORREO_CLIENTE       IN SOLICITUDES_DICOM.CORREO_CLIENTE%TYPE,
                                         p_NRO_RET_CAPITAL      IN SOLICITUDES_DICOM.NRO_RET_CAPITAL%TYPE,
                                         p_HORA_BLOQ            IN SOLICITUDES_DICOM.HORA_BLOQ%TYPE,
                                         p_DIVISA_NACIONAL      IN SOLICITUDES_DICOM.DIVISA_NACIONAL%TYPE,
                                         p_NRO_RET_COMISION     IN SOLICITUDES_DICOM.NRO_RET_COMISION%TYPE,
                                         p_MONTO_COMISION       IN SOLICITUDES_DICOM.MONTO_COMISION%TYPE,
                                         p_PORC_COMISION        IN SOLICITUDES_DICOM.PORC_COMISION%TYPE,
                                         p_DIVISA_EXTRANJERA    IN SOLICITUDES_DICOM.DIVISA_EXTRANJERA%TYPE,
                                         p_TASA_CAMBIO          IN SOLICITUDES_DICOM.TASA_CAMBIO%TYPE,
                                         P_NRO_OPE_DEBITO       IN  SOLICITUDES_DICOM.NRO_OPE_DEBITO%TYPE,
                                         P_NRO_OPE_CREDITO      IN  SOLICITUDES_DICOM.NRO_OPE_CREDITO%TYPE,
                                         P_UNDINV_ID            IN INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%TYPE,
                                         p_ESTATUS_REGISTRO     IN  SOLICITUDES_DICOM.ESTATUS_REGISTRO %TYPE, --VALOR DE CONTROL PARA EL FLUJO DE LA SOLICITUD
                                        -- 1 INDICA QUE LA OPERACION ESTA EN BLOQUEO PREVIO  
                                        --2 INDICA QUE LA OPERACION YA FUE PROCESADA POR BCV PARA SU ADJUDICACION, O SOLO DESBLOQUEO
                                        p_COMISION_IGTF         IN SOLICITUDES_DICOM.COMISION_IGTF%TYPE,
                                        p_PORC_COMISION_IGTF    IN SOLICITUDES_DICOM.PORC_COMISION_IGTF  %TYPE                                           
                                         ) AS           

    v_query     VARCHAR2(1000);
                                         
    BEGIN
    v_query:='UPDATE SOLICITUDES_DICOM SET ';
    
    IF P_CODIGO_RESPUESTA IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' CODIGO_RESPUESTA='||''''||P_CODIGO_RESPUESTA||''''||', ');
    END IF;
            
    IF p_NOMBRE_CLIENTE IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' NOMBRE_CLIENTE='||''''||p_NOMBRE_CLIENTE||''''||', ');
    END IF;
    
    IF p_TELEFONO_CLIENTE IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' TELEFONO_CLIENTE='||''''||p_TELEFONO_CLIENTE||''''||', ');
    END IF;
    
    IF p_CORREO_CLIENTE IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' CORREO_CLIENTE='||''''||p_CORREO_CLIENTE||''''||', ');
    END IF;
    
    IF p_NRO_RET_CAPITAL IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' NRO_RET_CAPITAL='||''''||p_NRO_RET_CAPITAL||''''||', ');
    END IF;
    
    IF p_HORA_BLOQ IS NOT NULL THEN
    flag_sent_correc:=1;    
    v_query:=CONCAT(v_query,' HORA_BLOQ='||''''||p_HORA_BLOQ||''''||', ');
    END IF;
    
    IF p_DIVISA_NACIONAL IS NOT NULL THEN
    flag_sent_correc:=1;    
    v_query:=CONCAT(v_query,' DIVISA_NACIONAL='||''''||p_DIVISA_NACIONAL||''''||', ');
    END IF;
    
    IF p_NRO_RET_COMISION IS NOT NULL THEN
    flag_sent_correc:=1;        
    v_query:=CONCAT(v_query,' NRO_RET_COMISION='||''''||p_NRO_RET_COMISION||''''||', ');
    END IF;
    
    IF p_MONTO_COMISION IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' MONTO_COMISION='||to_char(p_MONTO_COMISION,'0999999999999.99')|| ', ');--NUMERICO  
    END IF;
    
    IF p_PORC_COMISION IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' PORC_COMISION='||to_char(p_PORC_COMISION, '099.99')|| ', ');--NUMERICO 
    END IF;
    
    IF p_DIVISA_EXTRANJERA IS NOT NULL THEN
    flag_sent_correc:=1;    
    v_query:=CONCAT(v_query,' DIVISA_EXTRANJERA='||''''||p_DIVISA_EXTRANJERA||''''||', ');
    END IF;
    
    IF p_TASA_CAMBIO IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' TASA_CAMBIO='||to_char(p_TASA_CAMBIO, '099999.9999')|| ', ');--NUMERICO 
    END IF;
            
    IF P_NRO_OPE_DEBITO IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' NRO_OPE_DEBITO='||P_NRO_OPE_DEBITO|| ', ');--NUMERICO
    END IF;
    
    IF P_NRO_OPE_CREDITO IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' NRO_OPE_CREDITO='||P_NRO_OPE_CREDITO|| ', ');--NUMERICO
    END IF;

    IF P_UNDINV_ID IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' UNDINV_ID='||P_UNDINV_ID|| ', ');--NUMERICO
    END IF;         


--CAMBIOS DICOM 2018 LENIN RAMIREZ / JOSE GOMEZ 
--INCLUSION DE CAMPOS DE IGTF Y PORCENTAJE IGTF
    
    IF P_COMISION_IGTF IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' COMISION_IGTF='||P_COMISION_IGTF|| ', ');--NUMERICO
    END IF;         

    IF p_PORC_COMISION_IGTF IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' PORC_COMISION_IGTF='||p_PORC_COMISION_IGTF|| ', ');--NUMERICO
    END IF;         
      


    
   IF flag_sent_correc=0 THEN
   CRUD_MSJ_EXCEPTION:='Error Validacion: SP_ACTIALIZAR_SOLICITUD_DICOM  - No se ha ingresado ningun campo para ser modificado';
   RAISE CRUD_VALIDATION_EXCEPTION;       
   ELSE
      --CAMBIOS DICOM 2018 LENIN RAMIREZ / JOSE GOMEZ 
      --VALOR DE CONTROL PARA EL FLUJO DE LA SOLICITUD
      -- 1 INDICA QUE LA OPERACION ESTA EN BLOQUEO PREVIO  
      --2 INDICA QUE LA OPERACION YA FUE PROCESADA POR BCV PARA SU ADJUDICACION, O SOLO DESBLOQUEO       
   --v_query:=CONCAT(v_query,' ESTATUS_REGISTRO=1 ');
    v_query:=CONCAT(v_query,' ESTATUS_REGISTRO='||p_ESTATUS_REGISTRO|| ' ');--NUMERICO
   END IF;
       
    --v_query:=SUBSTR(v_query,0,(Length(v_query)-2));
    v_query:=CONCAT(v_query,' WHERE NRO_SOLICITUD='||''''||P_NRO_SOLICITUD||''''||' ');
    v_query:=CONCAT(v_query,' AND ID_JORNADA=' ||''''||P_NRO_JORNADA||''''||'');
       DBMS_OUTPUT.put_line('QUERY --> ' || v_query);                                                
    EXECUTE IMMEDIATE v_query;                
       EXCEPTION
          WHEN CRUD_VALIDATION_EXCEPTION THEN
          BEGIN
            RAISE CRUD_VALIDATION_EXCEPTION;
          END;
          WHEN OTHERS THEN  
          BEGIN  
          ROLLBACK;  
          CRUD_MSJ_EXCEPTION:='Error Inesperado: SP_ACTIALIZAR_SOLICITUD_DICOM '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
          RAISE CRUD_UNEXPECTED_EXCEPTION;
          END;             
                   
END SP_ACTIALIZAR_SOLICITUD_DICOM;     

  PROCEDURE SP_CREAR_UNIDAD_INVERSION (
          P_UNDINV_ID                    OUT  INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%type,            
          P_UNDINV_NOMBRE                   IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_NOMBRE%type,                   
          P_UNDINV_DESCRIPCION              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_DESCRIPCION%type,              
          P_INSFIN_ID                       IN  INFI_TB_106_UNIDAD_INVERSION.INSFIN_ID%type,                       
          P_UNDINV_EMISION                  IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_EMISION%type,                  
          P_UNDINV_SERIE                    IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_SERIE%type,                    
          P_UNDINV_TASA_CAMBIO              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_TASA_CAMBIO%type,              
          P_UNDINV_FE_EMISION               IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_EMISION%type,               
          P_UNDINV_IN_VTA_EMPLEADOS         IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_IN_VTA_EMPLEADOS%type,         
          P_TPPEVA_ID                       IN  INFI_TB_106_UNIDAD_INVERSION.TPPEVA_ID%type,                       
          P_UNDINV_PRECIO_MINIMO            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_PRECIO_MINIMO%type,            
          P_UNDINV_COMENTARIOS              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_COMENTARIOS%type,              
          P_UNDINV_DOC_BDV                  IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_DOC_BDV%type,                  
          P_UNDINV_DOC_EMISOR               IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_DOC_EMISOR%type,               
          P_UNDINV_FE_ADJUDICACION          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_ADJUDICACION%type,          
          P_UNDINV_FE_LIQUIDACION           IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_LIQUIDACION%type,           
          P_UNDINV_FE_CIERRE                IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_CIERRE%type,                
          P_UNDINV_IN_RECOMPRA_NETEO        IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_IN_RECOMPRA_NETEO%type,        
          P_MONEDA_ID                       IN  INFI_TB_106_UNIDAD_INVERSION.MONEDA_ID%type,                       
          P_UNDINV_UMI_INV_TOTAL            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_INV_TOTAL%type,            
          P_UNDINV_UMI_INV_MTO_MIN          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_INV_MTO_MIN%type,          
          P_UNDINV_UMI_INV_MTO_MAX          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_INV_MTO_MAX%type,          
          P_UNDINV_UMI_UM_CANT_MIN          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_UM_CANT_MIN%type,          
          P_UNDINV_UMI_UM_CANT_MAX          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_UM_CANT_MAX%type,          
          P_UNDINV_STATUS                   IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_STATUS%type,                   
          P_AUT_USUARIO_USERID              IN  INFI_TB_106_UNIDAD_INVERSION.AUT_USUARIO_USERID%type,              
          P_AUT_USUARIO_NOMBRE              IN  INFI_TB_106_UNIDAD_INVERSION.AUT_USUARIO_NOMBRE%type,              
          P_AUT_USUARIO_ROL_NOMBRE          IN  INFI_TB_106_UNIDAD_INVERSION.AUT_USUARIO_ROL_NOMBRE%type,          
          P_AUT_ESTACION                    IN  INFI_TB_106_UNIDAD_INVERSION.AUT_ESTACION%type,                    
          P_AUT_IP                          IN  INFI_TB_106_UNIDAD_INVERSION.AUT_IP%type,                          
          P_AUT_FECHA                       IN  INFI_TB_106_UNIDAD_INVERSION.AUT_FECHA%type,                       
          P_UPD_USUARIO_USERID              IN  INFI_TB_106_UNIDAD_INVERSION.UPD_USUARIO_USERID%type,              
          P_UPD_USUARIO_NOMBRE              IN  INFI_TB_106_UNIDAD_INVERSION.UPD_USUARIO_NOMBRE%type,              
          P_UPD_USUARIO_ROL_NOMBRE          IN  INFI_TB_106_UNIDAD_INVERSION.UPD_USUARIO_ROL_NOMBRE%type,          
          P_UPD_ESTACION                    IN  INFI_TB_106_UNIDAD_INVERSION.UPD_ESTACION%type,                    
          P_UPD_IP                          IN  INFI_TB_106_UNIDAD_INVERSION.UPD_IP%type,                          
          P_UPD_FECHA                       IN  INFI_TB_106_UNIDAD_INVERSION.UPD_FECHA%type,                       
          P_EMPRES_ID                       IN  INFI_TB_106_UNIDAD_INVERSION.EMPRES_ID%type,                       
          P_UNDINV_UMI_INV_DISPONIBLE       IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_INV_DISPONIBLE%type,       
          P_UNDINV_UMI_UNIDAD               IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_UNIDAD%type,               
          P_UNDINV_PCT_MAX_FINAN            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_PCT_MAX_FINAN%type,            
          P_UNDINV_PRECIO_MAXIMO            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_PRECIO_MAXIMO%type,            
          P_UNDINV_MULTIPLOS                IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_MULTIPLOS%type,                
          P_UNDINV_IN_PEDIDO_MONTO          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_IN_PEDIDO_MONTO%type,          
          P_UNDINV_TASA_POOL                IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_TASA_POOL%type,                
          P_UNDINV_RENDIMIENTO              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_RENDIMIENTO%type,              
          P_UNDINV_MERCADO                  IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_MERCADO%type,                  
          P_UNDINV_IN_PRECIO_SUCIO          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_IN_PRECIO_SUCIO%type,          
          P_UNDINV_FE_LIQUIDACION_HORA1     IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_LIQUIDACION_HORA1%type,     
          P_UNDINV_FE_LIQUIDACION_HORA2     IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_LIQUIDACION_HORA2%type,     
          P_PAGO_IN_BCV                     IN  INFI_TB_106_UNIDAD_INVERSION.PAGO_IN_BCV%type,                     
          P_IN_COBRO_BATCH_ADJ              IN  INFI_TB_106_UNIDAD_INVERSION.IN_COBRO_BATCH_ADJ%type,              
          P_IN_COBRO_BATCH_LIQ              IN  INFI_TB_106_UNIDAD_INVERSION.IN_COBRO_BATCH_LIQ%type,              
          P_DIAS_APERTURA_CUENTA            IN  INFI_TB_106_UNIDAD_INVERSION.DIAS_APERTURA_CUENTA%type,            
          P_INDC_PERMITE_CANCELACION        IN  INFI_TB_106_UNIDAD_INVERSION.INDC_PERMITE_CANCELACION%type,        
          P_UNDINV_ACTIVE                   IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_ACTIVE%type,                   
          --P_UNDINV_STATUS_CONCILIACION      IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_STATUS_CONCILIACION%type,                    
          P_MONTO_ACUMULADO_SOLIC           IN  INFI_TB_106_UNIDAD_INVERSION.MONTO_ACUMULADO_SOLIC%type,           
          P_TIPO_NEGOCIO                    IN  INFI_TB_106_UNIDAD_INVERSION.TIPO_NEGOCIO%type,                    
          P_NRO_JORNADA                     IN  INFI_TB_106_UNIDAD_INVERSION.NRO_JORNADA%type,                     
          P_UNDINV_PERIODO_VENTA            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_PERIODO_VENTA%type,            
          P_UNDINV_MULTIPLOS_EFECTIVO       IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_MULTIPLOS_EFECTIVO%type,       
          P_UNDINV_UMAX_UNIDAD              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMAX_UNIDAD%type,              
          P_UNDINV_TASA_CAMBIO_OFER         IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_TASA_CAMBIO_OFER%type,         
          P_COMISION_IGTF                   IN  INFI_TB_106_UNIDAD_INVERSION.COMISION_IGTF%type,                   
          P_TIPO_SOLICITUD                  IN  INFI_TB_106_UNIDAD_INVERSION.TIPO_SOLICITUD%type,
          p_TIPO_PROCESO                    IN  INFI_TB_106_UNIDAD_INVERSION.CONTROL_DES%TYPE --PARAMETRO CREADO PARA EL MANEJO DEL NUEVO PASO EN EL FLUJO DE 
          --DICOM - 0 INDICA QUE SOLO SE CREARAN LOS REGISTROS DE BLOQUEO Y DESBLOQUEO  
          --1 INDICA QUE SON OPERACIONES EN FIRNA, A LAS CUALES SE LES CREARAN LOS REGISTROS
          --DE DEBITO Y CREDITO TANTO EN DIVISAS COMOM EN BOLIVARES                    
               
    )AS
    BEGIN
        NOMBRE_SP:='SP_CREAR_UNIDAD_INVERSION';
         
         IF P_INSFIN_ID IS NULL OR P_MONEDA_ID IS NULL OR P_UNDINV_STATUS IS NULL OR P_UPD_IP IS NULL OR P_EMPRES_ID IS NULL OR P_TIPO_SOLICITUD IS NULL THEN             
                MSJ_EXCEPTION:='Error Validacion: '|| NOMBRE_SP||'  - Campo NOT NULL ha sido pasado sin informacion';
                RAISE CRUD_VALIDATION_EXCEPTION;                   
            END IF;
            
        P_UNDINV_ID:=GET_SEQUENCE('INFI_TB_106_UNIDAD_INVERSION');

        INSERT INTO INFI_TB_106_UNIDAD_INVERSION(
            UNDINV_ID,                
            UNDINV_NOMBRE,              
            UNDINV_DESCRIPCION,         
            INSFIN_ID,                  
            UNDINV_EMISION,             
            UNDINV_SERIE,               
            UNDINV_TASA_CAMBIO,         
            UNDINV_FE_EMISION,          
            UNDINV_IN_VTA_EMPLEADOS,    
            TPPEVA_ID,                  
            UNDINV_PRECIO_MINIMO,       
            UNDINV_COMENTARIOS,         
            UNDINV_DOC_BDV,             
            UNDINV_DOC_EMISOR,          
            UNDINV_FE_ADJUDICACION,     
            UNDINV_FE_LIQUIDACION,      
            UNDINV_FE_CIERRE,           
            UNDINV_IN_RECOMPRA_NETEO,   
            MONEDA_ID,                  
            UNDINV_UMI_INV_TOTAL,       
            UNDINV_UMI_INV_MTO_MIN,     
            UNDINV_UMI_INV_MTO_MAX,     
            UNDINV_UMI_UM_CANT_MIN,     
            UNDINV_UMI_UM_CANT_MAX,     
            UNDINV_STATUS,              
            AUT_USUARIO_USERID,         
            AUT_USUARIO_NOMBRE,         
            AUT_USUARIO_ROL_NOMBRE,     
            AUT_ESTACION,               
            AUT_IP,                     
            AUT_FECHA,                  
            UPD_USUARIO_USERID,         
            UPD_USUARIO_NOMBRE,         
            UPD_USUARIO_ROL_NOMBRE,     
            UPD_ESTACION,               
            UPD_IP,                     
            UPD_FECHA,                  
            EMPRES_ID,                  
            UNDINV_UMI_INV_DISPONIBLE,  
            UNDINV_UMI_UNIDAD,          
            UNDINV_PCT_MAX_FINAN,       
            UNDINV_PRECIO_MAXIMO,       
            UNDINV_MULTIPLOS,           
            UNDINV_IN_PEDIDO_MONTO,     
            UNDINV_TASA_POOL,           
            UNDINV_RENDIMIENTO,         
            UNDINV_MERCADO,             
            UNDINV_IN_PRECIO_SUCIO,     
            UNDINV_FE_LIQUIDACION_HORA1,
            UNDINV_FE_LIQUIDACION_HORA2,
            PAGO_IN_BCV,                
            IN_COBRO_BATCH_ADJ,         
            IN_COBRO_BATCH_LIQ,         
            DIAS_APERTURA_CUENTA,       
            INDC_PERMITE_CANCELACION,   
            UNDINV_ACTIVE,              
           -- UNDINV_STATUS_CONCILIACION,            
            MONTO_ACUMULADO_SOLIC,      
            TIPO_NEGOCIO,               
            NRO_JORNADA,                
            UNDINV_PERIODO_VENTA,       
            UNDINV_MULTIPLOS_EFECTIVO,  
            UNDINV_UMAX_UNIDAD,         
            UNDINV_TASA_CAMBIO_OFER,    
            COMISION_IGTF,              
            TIPO_SOLICITUD,
            CONTROL_DES) --0 INDICA QUE SOLO SE CREARAN LOS REGISTROS DE BLOQUEO Y DESBLOQUEO  
                         --1 INDICA QUE SON OPERACIONES EN FIRNA, A LAS CUALES SE LES CREARAN LOS REGISTROS
    VALUES (
          P_UNDINV_ID,                              
          P_UNDINV_NOMBRE,              
          P_UNDINV_DESCRIPCION,         
          P_INSFIN_ID,                  
          P_UNDINV_EMISION,             
          P_UNDINV_SERIE,               
          P_UNDINV_TASA_CAMBIO,         
          P_UNDINV_FE_EMISION,          
          P_UNDINV_IN_VTA_EMPLEADOS,    
          P_TPPEVA_ID,                  
          P_UNDINV_PRECIO_MINIMO,       
          P_UNDINV_COMENTARIOS,         
          P_UNDINV_DOC_BDV,             
          P_UNDINV_DOC_EMISOR,          
          P_UNDINV_FE_ADJUDICACION,     
          P_UNDINV_FE_LIQUIDACION,      
          P_UNDINV_FE_CIERRE,           
          P_UNDINV_IN_RECOMPRA_NETEO,   
          P_MONEDA_ID,                  
          P_UNDINV_UMI_INV_TOTAL,       
          P_UNDINV_UMI_INV_MTO_MIN,     
          P_UNDINV_UMI_INV_MTO_MAX,     
          P_UNDINV_UMI_UM_CANT_MIN,     
          P_UNDINV_UMI_UM_CANT_MAX,     
          P_UNDINV_STATUS,              
          P_AUT_USUARIO_USERID,         
          P_AUT_USUARIO_NOMBRE,         
          P_AUT_USUARIO_ROL_NOMBRE,     
          P_AUT_ESTACION,               
          P_AUT_IP,                     
          P_AUT_FECHA,                  
          P_UPD_USUARIO_USERID,         
          P_UPD_USUARIO_NOMBRE,         
          P_UPD_USUARIO_ROL_NOMBRE,     
          P_UPD_ESTACION,               
          P_UPD_IP,                     
          P_UPD_FECHA,                  
          P_EMPRES_ID,                  
          P_UNDINV_UMI_INV_DISPONIBLE,  
          P_UNDINV_UMI_UNIDAD,          
          P_UNDINV_PCT_MAX_FINAN,       
          P_UNDINV_PRECIO_MAXIMO,       
          P_UNDINV_MULTIPLOS,           
          P_UNDINV_IN_PEDIDO_MONTO,     
          P_UNDINV_TASA_POOL,           
          P_UNDINV_RENDIMIENTO,         
          P_UNDINV_MERCADO,             
          P_UNDINV_IN_PRECIO_SUCIO,     
          P_UNDINV_FE_LIQUIDACION_HORA1,
          P_UNDINV_FE_LIQUIDACION_HORA2,
          P_PAGO_IN_BCV,                
          P_IN_COBRO_BATCH_ADJ,         
          P_IN_COBRO_BATCH_LIQ,         
          P_DIAS_APERTURA_CUENTA,       
          P_INDC_PERMITE_CANCELACION,   
          P_UNDINV_ACTIVE,              
         -- P_UNDINV_STATUS_CONCILIACION,           
          P_MONTO_ACUMULADO_SOLIC,      
          P_TIPO_NEGOCIO,               
          P_NRO_JORNADA,                
          P_UNDINV_PERIODO_VENTA,       
          P_UNDINV_MULTIPLOS_EFECTIVO,  
          P_UNDINV_UMAX_UNIDAD,         
          P_UNDINV_TASA_CAMBIO_OFER,    
          P_COMISION_IGTF,              
          P_TIPO_SOLICITUD,
          p_TIPO_PROCESO          --0 INDICA QUE SOLO SE CREARAN LOS REGISTROS DE BLOQUEO Y DESBLOQUEO  
                         --1 INDICA QUE SON OPERACIONES EN FIRNA, A LAS CUALES SE LES CREARAN LOS REGISTROS
          ); 
                      
     EXCEPTION 
            WHEN CRUD_VALIDATION_EXCEPTION  THEN
            BEGIN                
                raise_application_error(-20001,'Validacion: '|| NOMBRE_SP||' : '||MSJ_EXCEPTION);
            END;  
            WHEN OTHERS THEN
            BEGIN
            MSJ_EXCEPTION:='Error Inesperado: '|| NOMBRE_SP||' '||' SQLERRM ' ||SQLERRM ||' SQLCODE ' ||SQLCODE;
            RAISE CRUD_UNEXPECTED_EXCEPTION;
            END;
    
    END SP_CREAR_UNIDAD_INVERSION;

        --CAMBIOS DICOM 2018 LENIN RAMIREZ / JOSE GOMEZ 
        --CREACION DE UPDATE SOBRE LA TABLA INFI_TB_106_UNIDAD_INVERSION PARA COLOCAR LA UNIDAD EN ESTATUS 1
        --LO CUAL INDICA QUE EL REGISTRO YA FUE PROCESADO POR DICOM Y SE OBTUVO UNA RESPUESTA SOBRE SU ORDEN  
                          
PROCEDURE SP_ACTUALIZ_ESTATUS_ORDEN_204 (
          P_UNDINV_ID                    IN   INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%type,            
          p_ORDENE_ID  INFI_TB_204_ORDENES.ORDENE_ID%TYPE,
          v_Estatus VARCHAR2
          )AS
           v_query     VARCHAR2(1000);
          BEGIN
            NOMBRE_SP:='SP_ACTUALIZ_ESTATUS_ORDEN_204';
            v_query:='UPDATE INFI_TB_204_ORDENES SET ';
         
            IF P_UNDINV_ID is not null  THEN --Verificacion de campo P_TIPO_PROCESO
                flag_sent_correc:=1; 
                v_query:=CONCAT(v_query,' ORDSTA_ID='||''''||v_Estatus||''''||' ');
            END IF;
            
                --v_query:=SUBSTR(v_query,0,(Length(v_query-2));
                v_query:=CONCAT(v_query,' WHERE UNIINV_ID='||''''||P_UNDINV_ID||''''||' AND ORDENE_ID= '||''''||p_ORDENE_ID||''''||'' );
                               
            
           IF flag_sent_correc=0 THEN
            MSJ_EXCEPTION:='Error Validacion: SP_ACTUALIZ_ESTATUS_ORDEN_204 - No se ha ingresado ningun campo para ser modificado';
            RAISE CRUD_VALIDATION_EXCEPTION;       
           END IF;            
           
           EXECUTE IMMEDIATE v_query;                
           EXCEPTION
              WHEN CRUD_VALIDATION_EXCEPTION THEN
              BEGIN
                RAISE CRUD_VALIDATION_EXCEPTION;
              END;
              WHEN OTHERS THEN    
              ROLLBACK;  
              MSJ_EXCEPTION:='Error Inesperado: SP_ACTUALIZ_ESTATUS_ORDEN_204 '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
              RAISE CRUD_UNEXPECTED_EXCEPTION;           
                 
          END  SP_ACTUALIZ_ESTATUS_ORDEN_204;
          
PROCEDURE SP_CON_SOLICI_DICOM_ORDEN_ID (
                     p_NRO_SOLICITUD        IN  SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
                    p_ORDENE_ID              OUT INFI_TB_207_ORDENES_OPERACION.ORDENE_ID%TYPE
          )
          AS
          
          BEGIN          
          SELECT ORDENE_ID INTO p_ORDENE_ID FROM SOLICITUDES_DICOM WHERE   NRO_SOLICITUD=p_NRO_SOLICITUD ;
END   SP_CON_SOLICI_DICOM_ORDEN_ID;
 
PROCEDURE SP_ACT_SOLICI_DICOM_ORDEN_ID (
                     p_NRO_SOLICITUD        IN  SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
                    
                     p_ORDENE_ID              IN INFI_TB_207_ORDENES_OPERACION.ORDENE_ID%TYPE
                     )
AS
           v_query     VARCHAR2(1000);
          BEGIN
            NOMBRE_SP:='SP_ACT_SOLICI_DICOM_ORDEN_ID ';
            v_query:='UPDATE SOLICITUDES_DICOM SET ';
         
            IF p_ORDENE_ID  is not null  THEN --Verificacion de campo P_TIPO_PROCESO
                flag_sent_correc:=1; 
                v_query:=CONCAT(v_query,' ORDENE_ID='||''''||p_ORDENE_ID||''''||' ');
            END IF;
            
            --v_query:=SUBSTR(v_query,0,(Length(v_query-2));
            v_query:=CONCAT(v_query,' WHERE NRO_SOLICITUD='||''''||p_NRO_SOLICITUD ||''''||''  );
                               
            
           IF flag_sent_correc=0 THEN
            MSJ_EXCEPTION:='Error Validacion: SP_ACT_SOLICI_DICOM_ORDEN_ID  - No se ha ingresado ningun campo para ser modificado';
            RAISE CRUD_VALIDATION_EXCEPTION;       
           END IF;            
           
           EXECUTE IMMEDIATE v_query;                
           EXCEPTION
              WHEN CRUD_VALIDATION_EXCEPTION THEN
              BEGIN
                RAISE CRUD_VALIDATION_EXCEPTION;
              END;
              WHEN OTHERS THEN    
              ROLLBACK;  
              MSJ_EXCEPTION:='Error Inesperado: SP_ACT_SOLICI_DICOM_ORDEN_ID  '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
              RAISE CRUD_UNEXPECTED_EXCEPTION;                           
         END   SP_ACT_SOLICI_DICOM_ORDEN_ID;
          
    
    PROCEDURE SP_CREAR_UI_TITULOS (
            P_UNDINV_ID            IN    INFI_TB_108_UI_TITULOS.UNDINV_ID%type,             
            P_TITULO_ID            IN    INFI_TB_108_UI_TITULOS.TITULO_ID%type,             
            P_UITITU_PORCENTAJE        IN    INFI_TB_108_UI_TITULOS.UITITU_PORCENTAJE%type,         
            P_UITITU_VALOR_EQUIVALENTE    IN    INFI_TB_108_UI_TITULOS.UITITU_VALOR_EQUIVALENTE%type,     
            P_UITITU_IN_CONIDB        IN    INFI_TB_108_UI_TITULOS.UITITU_IN_CONIDB%type,         
            P_UITITU_IN_CONTROL_DISPONIBLE    IN    INFI_TB_108_UI_TITULOS.UITITU_IN_CONTROL_DISPONIBLE%type
        )AS
        BEGIN
            NOMBRE_SP:='SP_CREAR_UI_TITULOS';
             IF P_UNDINV_ID IS NULL OR P_TITULO_ID IS NULL OR  P_UITITU_PORCENTAJE IS NULL THEN                     
                MSJ_EXCEPTION:='Error Validacion: '|| NOMBRE_SP||'  - Campo NOT NULL ha sido pasado sin informacion';
                RAISE CRUD_VALIDATION_EXCEPTION;                   
            END IF;

             INSERT INTO INFI_TB_108_UI_TITULOS (
                UNDINV_ID,                 
                TITULO_ID,                    
                UITITU_PORCENTAJE,        
                UITITU_VALOR_EQUIVALENTE,     
                UITITU_IN_CONIDB,                          
                UITITU_IN_CONTROL_DISPONIBLE    
            )VALUES(
                P_UNDINV_ID,                 
                P_TITULO_ID,                    
                P_UITITU_PORCENTAJE,        
                P_UITITU_VALOR_EQUIVALENTE,     
                P_UITITU_IN_CONIDB,                          
                P_UITITU_IN_CONTROL_DISPONIBLE              
            );
        EXCEPTION 
            WHEN CRUD_VALIDATION_EXCEPTION  THEN
            BEGIN                
                raise_application_error(-20001,'Validacion: '|| NOMBRE_SP||' : '||MSJ_EXCEPTION);
            END; 
            WHEN OTHERS THEN
            BEGIN
            ROLLBACK;  
            MSJ_EXCEPTION:='Error Inesperado: '|| NOMBRE_SP||' '||' SQLERRM ' ||SQLERRM ||' SQLCODE ' ||SQLCODE;
            RAISE CRUD_UNEXPECTED_EXCEPTION;
            END;
            
    END SP_CREAR_UI_TITULOS;
    
    PROCEDURE SP_CREAR_UI_EMPRESA (
        P_UNDINV_ID        IN    INFI_TB_109_UI_EMPRESAS.UNDINV_ID%type,            
        P_EMPRES_ID        IN    INFI_TB_109_UI_EMPRESAS.EMPRES_ID%type,        
        P_ROLES_ID        IN    INFI_TB_109_UI_EMPRESAS.ROLES_ID%type,        
        P_UIEMPR_CONTACTO_NOM    IN    INFI_TB_109_UI_EMPRESAS.UIEMPR_CONTACTO_NOM%type,     
        P_UIEMPR_CONTACTO_TLF    IN    INFI_TB_109_UI_EMPRESAS.UIEMPR_CONTACTO_TLF%type
)AS
BEGIN
    NOMBRE_SP:='SP_CREAR_UI_EMPRESA';
    IF P_UNDINV_ID IS NULL OR P_EMPRES_ID IS NULL THEN                     
        MSJ_EXCEPTION:='Error Validacion: '|| NOMBRE_SP||'  - Campo NOT NULL ha sido pasado sin informacion';
        RAISE CRUD_VALIDATION_EXCEPTION;                   
    END IF;    

    INSERT INTO INFI_TB_109_UI_EMPRESAS(
        UNDINV_ID,
        EMPRES_ID,
        ROLES_ID,
        UIEMPR_CONTACTO_NOM,
        UIEMPR_CONTACTO_TLF
        )
        VALUES (
        P_UNDINV_ID,             
        P_EMPRES_ID,
        P_ROLES_ID,
        P_UIEMPR_CONTACTO_NOM,
        P_UIEMPR_CONTACTO_TLF                
        );

EXCEPTION 
    WHEN CRUD_VALIDATION_EXCEPTION  THEN
    BEGIN                
        raise_application_error(-20001,'Validacion: '|| NOMBRE_SP||' : '||MSJ_EXCEPTION);
    END; 
    WHEN OTHERS THEN
    BEGIN
    ROLLBACK;  
    MSJ_EXCEPTION:='Error Inesperado: '|| NOMBRE_SP||' '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
    RAISE CRUD_UNEXPECTED_EXCEPTION;
    END;
    
END SP_CREAR_UI_EMPRESA;

PROCEDURE SP_CREAR_UI_BLOTTER (
    P_UNDINV_ID                     IN INFI_TB_107_UI_BLOTTER.UNDINV_ID%type,                   
    P_BLOTER_ID                     IN INFI_TB_107_UI_BLOTTER.BLOTER_ID%type,                   
    P_UIBLOT_IN_DISPONIBLE          IN INFI_TB_107_UI_BLOTTER.UIBLOT_IN_DISPONIBLE%type,        
    P_UIBLOT_HORARIO_DESDE          IN INFI_TB_107_UI_BLOTTER.UIBLOT_HORARIO_DESDE%type,        
    P_UIBLOT_HORARIO_HASTA          IN INFI_TB_107_UI_BLOTTER.UIBLOT_HORARIO_HASTA%type,        
    P_UIBLOT_PEDIDO_FE_INI          IN INFI_TB_107_UI_BLOTTER.UIBLOT_PEDIDO_FE_INI%type,        
    P_UIBLOT_PEDIDO_FE_FIN          IN INFI_TB_107_UI_BLOTTER.UIBLOT_PEDIDO_FE_FIN%type,        
    P_UIBLOT_SERIAL_COMISIONES      IN INFI_TB_107_UI_BLOTTER.UIBLOT_SERIAL_COMISIONES%type,    
    P_UIBLOT_SERIAL_CAPITAL         IN INFI_TB_107_UI_BLOTTER.UIBLOT_SERIAL_CAPITAL%type,       
    P_TPPEVA_ID                     IN INFI_TB_107_UI_BLOTTER.TPPEVA_ID%type,                   
    P_CTESEG_ID                     IN INFI_TB_107_UI_BLOTTER.CTESEG_ID%type,                   
    P_UIBLOT_IN_DEFECTO             IN INFI_TB_107_UI_BLOTTER.UIBLOT_IN_DEFECTO%type,           
    P_UIBLOT_IN_TESORERIA           IN INFI_TB_107_UI_BLOTTER.UIBLOT_IN_TESORERIA%type,         
    P_UIBLOT_HORARIO_DESDE_ULT_DIA  IN INFI_TB_107_UI_BLOTTER.UIBLOT_HORARIO_DESDE_ULT_DIA%type,
    P_UIBLOT_HORARIO_HASTA_ULT_DIA  IN INFI_TB_107_UI_BLOTTER.UIBLOT_HORARIO_HASTA_ULT_DIA%type,
    P_UIBLOT_GANANCIA_RED           IN INFI_TB_107_UI_BLOTTER.UIBLOT_GANANCIA_RED%type,         
    P_UIBLOT_IN_RECOMPRA            IN INFI_TB_107_UI_BLOTTER.UIBLOT_IN_RECOMPRA%type          
)AS
BEGIN
    NOMBRE_SP:='SP_CREAR_UI_BLOTTER';
    IF P_UNDINV_ID IS NULL OR P_BLOTER_ID IS NULL OR P_UIBLOT_HORARIO_DESDE IS NULL OR P_UIBLOT_HORARIO_HASTA IS NULL OR P_UIBLOT_PEDIDO_FE_INI IS NULL OR P_UIBLOT_PEDIDO_FE_FIN IS NULL THEN                     
        MSJ_EXCEPTION:='Error Validacion: '|| NOMBRE_SP||'  - Campo NOT NULL ha sido pasado sin informacion';
        RAISE CRUD_VALIDATION_EXCEPTION;                   
    END IF;    

    INSERT INTO INFI_TB_107_UI_BLOTTER(
        UNDINV_ID,                   
        BLOTER_ID,                   
        UIBLOT_IN_DISPONIBLE,        
        UIBLOT_HORARIO_DESDE,        
        UIBLOT_HORARIO_HASTA,        
        UIBLOT_PEDIDO_FE_INI,        
        UIBLOT_PEDIDO_FE_FIN,        
        UIBLOT_SERIAL_COMISIONES,    
        UIBLOT_SERIAL_CAPITAL,       
        TPPEVA_ID,                   
        CTESEG_ID,                   
        UIBLOT_IN_DEFECTO,           
        UIBLOT_IN_TESORERIA,         
        UIBLOT_HORARIO_DESDE_ULT_DIA,
        UIBLOT_HORARIO_HASTA_ULT_DIA,
        UIBLOT_GANANCIA_RED,         
        UIBLOT_IN_RECOMPRA   
    ) VALUES (
        P_UNDINV_ID,                   
        P_BLOTER_ID,                   
        P_UIBLOT_IN_DISPONIBLE,        
        P_UIBLOT_HORARIO_DESDE,        
        P_UIBLOT_HORARIO_HASTA,        
        P_UIBLOT_PEDIDO_FE_INI,        
        P_UIBLOT_PEDIDO_FE_FIN,        
        P_UIBLOT_SERIAL_COMISIONES,    
        P_UIBLOT_SERIAL_CAPITAL,       
        P_TPPEVA_ID,                   
        P_CTESEG_ID,                   
        P_UIBLOT_IN_DEFECTO,           
        P_UIBLOT_IN_TESORERIA,         
        P_UIBLOT_HORARIO_DESDE_ULT_DIA,
        P_UIBLOT_HORARIO_HASTA_ULT_DIA,
        P_UIBLOT_GANANCIA_RED,         
        P_UIBLOT_IN_RECOMPRA 
    );              
        
EXCEPTION
    WHEN CRUD_VALIDATION_EXCEPTION  THEN
    BEGIN                
        raise_application_error(-20001,'Validacion: '|| NOMBRE_SP||' : '||MSJ_EXCEPTION);
    END;  
    WHEN OTHERS THEN
    BEGIN
    ROLLBACK;  
    MSJ_EXCEPTION:='Error Inesperado: '|| NOMBRE_SP||' '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
    RAISE CRUD_UNEXPECTED_EXCEPTION;
    END;
        
END SP_CREAR_UI_BLOTTER;

PROCEDURE SP_CREAR_SOLICITUD_DICOM (
    P_NRO_SOLICITUD            IN SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
    P_TIPO_OPERACION           IN SOLICITUDES_DICOM.TIPO_OPERACION%TYPE,
    P_TIPO_CLIENTE             IN SOLICITUDES_DICOM.TIPO_CLIENTE%TYPE,
    P_CED_RIF                  IN SOLICITUDES_DICOM.CED_RIF%TYPE,
    P_NOMBRE_CLIENTE           IN SOLICITUDES_DICOM.NOMBRE_CLIENTE%TYPE,
    P_TELEFONO_CLIENTE         IN SOLICITUDES_DICOM.TELEFONO_CLIENTE%TYPE,
    P_CORREO_CLIENTE           IN SOLICITUDES_DICOM.CORREO_CLIENTE%TYPE,
    P_NRO_CTA_NACIONAL         IN SOLICITUDES_DICOM.NRO_CTA_NACIONAL%TYPE,
    P_NRO_RET_CAPITAL          IN SOLICITUDES_DICOM.NRO_RET_CAPITAL%TYPE,
    P_HORA_BLOQ                IN SOLICITUDES_DICOM.HORA_BLOQ%TYPE,
    P_MONTO_OP_NACIONAL        IN SOLICITUDES_DICOM.MONTO_OP_NACIONAL%TYPE,
    P_DIVISA_NACIONAL          IN SOLICITUDES_DICOM.DIVISA_NACIONAL%TYPE,
    P_NRO_RET_COMISION         IN SOLICITUDES_DICOM.NRO_RET_COMISION%TYPE,
    P_MONTO_COMISION           IN SOLICITUDES_DICOM.MONTO_COMISION%TYPE,
    P_PORC_COMISION            IN SOLICITUDES_DICOM.PORC_COMISION%TYPE,
    P_FECHA_OPERACION          IN SOLICITUDES_DICOM.FECHA_OPERACION%TYPE,
    P_NRO_CTA_EXTRANJERA       IN SOLICITUDES_DICOM.NRO_CTA_EXTRANJERA%TYPE,
    P_MONTO_OP_EXTRANJERA      IN SOLICITUDES_DICOM.MONTO_OP_EXTRANJERA%TYPE,
    P_DIVISA_EXTRANJERA        IN SOLICITUDES_DICOM.DIVISA_EXTRANJERA%TYPE,
    P_TASA_CAMBIO              IN SOLICITUDES_DICOM.TASA_CAMBIO%TYPE,
    P_FECHA_VALOR_OPERACION    IN SOLICITUDES_DICOM.FECHA_VALOR_OPERACION%TYPE,
    P_CODIGO_RESPUESTA         IN SOLICITUDES_DICOM.CODIGO_RESPUESTA%TYPE,
    P_NRO_OPE_DEBITO           IN SOLICITUDES_DICOM.NRO_OPE_DEBITO%TYPE,
    P_NRO_OPE_CREDITO          IN SOLICITUDES_DICOM.NRO_OPE_CREDITO%TYPE,
    P_ESTATUS_REGISTRO         IN SOLICITUDES_DICOM.ESTATUS_REGISTRO%TYPE,
    P_ESTATUS_NOTIFICACION_WS  IN SOLICITUDES_DICOM.ESTATUS_NOTIFICACION_WS%TYPE,
    P_ID_JORNADA               IN SOLICITUDES_DICOM.ID_JORNADA%TYPE,
    P_UNDINV_ID                IN SOLICITUDES_DICOM.UNDINV_ID%TYPE,
    P_MONEDA_JORNADA           IN SOLICITUDES_DICOM.MONEDA_JORNADA%TYPE)
AS
BEGIN

    NOMBRE_SP:='SP_CREAR_SOLICITUD_DICOM';
         
    --IF  P_NRO_SOLICITUD IS NULL OR P_TIPO_OPERACION IS NULL OR P_TIPO_CLIENTE IS NULL OR P_NRO_CTA_NACIONAL IS NULL OR P_NRO_CTA_EXTRANJERA IS NULL OR P_ESTATUS_REGISTRO IS NULL THEN             
    IF  P_NRO_SOLICITUD IS NULL OR P_ESTATUS_REGISTRO IS NULL THEN             
        MSJ_EXCEPTION:='Error Validacion: '|| NOMBRE_SP||'  - Campo NOT NULL ha sido pasado sin informacion';
        RAISE CRUD_VALIDATION_EXCEPTION;                   
    END IF;

     INSERT INTO SOLICITUDES_DICOM(
         NRO_SOLICITUD,          
        TIPO_OPERACION,         
        TIPO_CLIENTE,           
        CED_RIF,                
        NOMBRE_CLIENTE,         
        TELEFONO_CLIENTE,       
        CORREO_CLIENTE,         
        NRO_CTA_NACIONAL,       
        NRO_RET_CAPITAL,        
        HORA_BLOQ,              
        MONTO_OP_NACIONAL,      
        DIVISA_NACIONAL,        
        NRO_RET_COMISION,       
        MONTO_COMISION,         
        PORC_COMISION,          
        FECHA_OPERACION,        
        NRO_CTA_EXTRANJERA,     
        MONTO_OP_EXTRANJERA,    
        DIVISA_EXTRANJERA,      
        TASA_CAMBIO,            
        FECHA_VALOR_OPERACION,  
        CODIGO_RESPUESTA,       
        NRO_OPE_DEBITO,         
        NRO_OPE_CREDITO,        
        ESTATUS_REGISTRO,       
        ESTATUS_NOTIFICACION_WS,
        ID_JORNADA,             
        UNDINV_ID,
        MONEDA_JORNADA )
     VALUES (
         P_NRO_SOLICITUD,          
        P_TIPO_OPERACION,         
        P_TIPO_CLIENTE,           
        P_CED_RIF,                
        P_NOMBRE_CLIENTE,         
        P_TELEFONO_CLIENTE,       
        P_CORREO_CLIENTE,         
        P_NRO_CTA_NACIONAL,       
        P_NRO_RET_CAPITAL,        
        P_HORA_BLOQ,              
        P_MONTO_OP_NACIONAL,      
        P_DIVISA_NACIONAL,        
        P_NRO_RET_COMISION,       
        P_MONTO_COMISION,         
        P_PORC_COMISION,          
        P_FECHA_OPERACION,        
        P_NRO_CTA_EXTRANJERA,     
        P_MONTO_OP_EXTRANJERA,    
        P_DIVISA_EXTRANJERA,      
        P_TASA_CAMBIO,            
        P_FECHA_VALOR_OPERACION,  
        P_CODIGO_RESPUESTA,       
        P_NRO_OPE_DEBITO,         
        P_NRO_OPE_CREDITO,        
        P_ESTATUS_REGISTRO,       
        P_ESTATUS_NOTIFICACION_WS,
        P_ID_JORNADA,             
        P_UNDINV_ID,
        P_MONEDA_JORNADA            
      );    
            
    EXCEPTION
            WHEN DUP_VAL_ON_INDEX THEN
                     MSJ_EXCEPTION:='Registro ya Existente '|| NOMBRE_SP||' '||' SQLERRM ' ||SQLERRM ||' SQLCODE ' ||SQLCODE;
---Actualiza los valores Anterios si ya fue registrado NM11383 09102018  ---                     
                     UPDATE SOLICITUDES_DICOM sd
                     SET     sd.MONTO_OP_NACIONAL = P_MONTO_OP_NACIONAL,
                                sd.NRO_CTA_NACIONAL = P_NRO_CTA_NACIONAL,
                                sd.MONTO_OP_EXTRANJERA = P_MONTO_OP_EXTRANJERA,
                                sd.NRO_CTA_EXTRANJERA = P_NRO_CTA_EXTRANJERA
                      WHERE sd.NRO_SOLICITUD = P_NRO_SOLICITUD
                      AND     sd.ID_JORNADA = P_ID_JORNADA;
                      
            WHEN CRUD_VALIDATION_EXCEPTION  THEN
                    BEGIN                
                        raise_application_error(-20001,'Validacion: '|| NOMBRE_SP||' : '||MSJ_EXCEPTION);
                    END;  
            
            WHEN OTHERS THEN
                    BEGIN
                        MSJ_EXCEPTION:='Error Inesperado: '|| NOMBRE_SP||' '||' SQLERRM ' ||SQLERRM ||' SQLCODE ' ||SQLCODE;
                        RAISE CRUD_UNEXPECTED_EXCEPTION;
                    END;
END SP_CREAR_SOLICITUD_DICOM;  
       
FUNCTION GET_SEQUENCE (
        P_TABLE_NAME SEQUENCE_NUMBERS.TABLE_NAME%type
    )
    RETURN SEQUENCE_NUMBERS.NEXT_ID%TYPE IS
    ID_SEQUENCE NUMBER;
    /******************************************************************************
       NAME:       GET_SEQUENCE 
       PURPOSE:    Funcion creada para obtener la secuencia (id) de tabla a insertar
                    Se realiza de esta manera para no cambiar el esquema de manejo de
                    secuencias usado en la aplicación 

       REVISIONS:
       Ver        Date        Author           Description
       ---------  ----------  ---------------  ------------------------------------
       1.0        18/05/2017          1. Created this function.

       NOTES:

       Automatically available Auto Replace Keywords:
          Object Name:     GET_SEQUENCE
          Sysdate:         18/05/2017
          Date and Time:   18/05/2017, 04:10:45 p.m., and 18/05/2017 04:10:45 p.m.
          Username:         NM25287 
          Table Name:       SEQUENCE_NUMBERS 

    ******************************************************************************/
    BEGIN
       ID_SEQUENCE := 0;
       
       UPDATE SEQUENCE_NUMBERS 
        SET NEXT_ID = NEXT_ID + 1 
        WHERE TABLE_NAME = P_TABLE_NAME;
             
       SELECT NEXT_ID 
        INTO ID_SEQUENCE
        FROM SEQUENCE_NUMBERS 
        WHERE TABLE_NAME = P_TABLE_NAME;
       
       RETURN ID_SEQUENCE;
       EXCEPTION
         WHEN NO_DATA_FOUND THEN
         BEGIN
         --DBMS_OUTPUT.PUT_LINE('ERROR GET SEQ '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE);
           RAISE;
         END;
         WHEN OTHERS THEN
          BEGIN
         --DBMS_OUTPUT.PUT_LINE('OTHERS ERROR GET SEQ '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE);
           RAISE;
         END;
    END GET_SEQUENCE;
                   
--   PROCEDURE SP_CREAR_SOL_DICOM_TRANSF (    
--                                        P_ID_JORNADA               IN SOLICITUDES_DICOM.ID_JORNADA%TYPE,
--                                        P_TIPO_OPERACION           IN SOLICITUDES_DICOM.TIPO_OPERACION%TYPE,
--                                        P_NRO_SOLICITUD            IN SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
--                                        P_TIPO_CLIENTE             IN SOLICITUDES_DICOM.TIPO_CLIENTE%TYPE,
--                                        P_CED_RIF                  IN SOLICITUDES_DICOM.CED_RIF%TYPE,
--                                        P_NRO_CTA_EXTRANJERA       IN SOLICITUDES_DICOM.NRO_CTA_EXTRANJERA%TYPE,
--                                        P_MONTO_OP_EXTRANJERA      IN SOLICITUDES_DICOM.MONTO_OP_EXTRANJERA%TYPE,
--                                        P_DIVISA_EXTRANJERA        IN SOLICITUDES_DICOM.DIVISA_EXTRANJERA%TYPE,
--                                        P_FECHA_OPERACION          IN SOLICITUDES_DICOM.FECHA_OPERACION%TYPE,
--                                        P_FECHA_VALOR_OPERACION    IN SOLICITUDES_DICOM.FECHA_VALOR_OPERACION%TYPE
--    ) 
--AS
--BEGIN

--    NOMBRE_SP:='SP_CREAR_SOL_DICOM_TRANSF';
--         
--    --IF  P_NRO_SOLICITUD IS NULL OR P_TIPO_OPERACION IS NULL OR P_TIPO_CLIENTE IS NULL OR P_NRO_CTA_NACIONAL IS NULL OR P_NRO_CTA_EXTRANJERA IS NULL OR P_ESTATUS_REGISTRO IS NULL THEN             
--    IF  P_NRO_SOLICITUD IS NULL THEN             
--        MSJ_EXCEPTION:='Error Validacion: '|| NOMBRE_SP||'  - Campo NOT NULL ha sido pasado sin informacion';
--        RAISE CRUD_VALIDATION_EXCEPTION;                   
--    END IF;


--     INSERT INTO SOLICITUDES_DICOM(
--                             ID_JORNADA,
--                             TIPO_OPERACION,
--                             NRO_SOLICITUD,
--                             TIPO_CLIENTE,
--                             CED_RIF,
--                             NRO_CTA_EXTRANJERA,
--                             MONTO_OP_EXTRANJERA,
--                             DIVISA_EXTRANJERA,
--                             FECHA_OPERACION,
--                             FECHA_VALOR_OPERACION)
--                     VALUES (P_ID_JORNADA,
--                             P_TIPO_OPERACION,
--                             P_NRO_SOLICITUD,
--                             P_TIPO_CLIENTE,
--                             P_CED_RIF,
--                             P_NRO_CTA_EXTRANJERA,
--                             P_MONTO_OP_EXTRANJERA,
--                             P_DIVISA_EXTRANJERA,
--                             P_FECHA_OPERACION,
--                             P_FECHA_VALOR_OPERACION);
--     
--     

--            
--    EXCEPTION 
--            WHEN CRUD_VALIDATION_EXCEPTION  THEN
--            BEGIN                
--                raise_application_error(-20001,'Validacion: '|| NOMBRE_SP||' : '||MSJ_EXCEPTION);
--            END;  
--            WHEN OTHERS THEN
--            BEGIN
--            MSJ_EXCEPTION:='Error Inesperado: '|| NOMBRE_SP||' '||' SQLERRM ' ||SQLERRM ||' SQLCODE ' ||SQLCODE;
--            RAISE CRUD_UNEXPECTED_EXCEPTION;
--            END;
--END SP_CREAR_SOL_DICOM_TRANSF;   
--                                                 
--   PROCEDURE SP_ACT_SOL_DICOM_TRANSF( p_NRO_SOLICITUD         IN  SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
--                                         P_NRO_JORNADA          IN  SOLICITUDES_DICOM.ID_JORNADA%TYPE,
--                                         P_CODIGO_RESPUESTA     IN  SOLICITUDES_DICOM.CODIGO_RESPUESTA%TYPE,
--                                         p_NOMBRE_CLIENTE       IN SOLICITUDES_DICOM.NOMBRE_CLIENTE%TYPE,
--                                         p_TELEFONO_CLIENTE     IN SOLICITUDES_DICOM.TELEFONO_CLIENTE%TYPE,
--                                         p_CORREO_CLIENTE       IN SOLICITUDES_DICOM.CORREO_CLIENTE%TYPE,
--                                         p_NRO_RET_CAPITAL      IN SOLICITUDES_DICOM.NRO_RET_CAPITAL%TYPE,
--                                         p_HORA_BLOQ            IN SOLICITUDES_DICOM.HORA_BLOQ%TYPE,
--                                         --p_DIVISA_NACIONAL      IN SOLICITUDES_DICOM.DIVISA_NACIONAL%TYPE,
--                                         p_NRO_RET_COMISION     IN SOLICITUDES_DICOM.NRO_RET_COMISION%TYPE,
--                                         p_MONTO_COMISION       IN SOLICITUDES_DICOM.MONTO_COMISION%TYPE,
--                                         p_PORC_COMISION        IN SOLICITUDES_DICOM.PORC_COMISION%TYPE,
--                                         p_DIVISA_EXTRANJERA    IN SOLICITUDES_DICOM.DIVISA_EXTRANJERA%TYPE,
--                                        -- p_TASA_CAMBIO          IN SOLICITUDES_DICOM.TASA_CAMBIO%TYPE,
--                                         P_NRO_OPE_DEBITO       IN  SOLICITUDES_DICOM.NRO_OPE_DEBITO%TYPE,
--                                         P_NRO_OPE_CREDITO      IN  SOLICITUDES_DICOM.NRO_OPE_CREDITO%TYPE,
--                                         P_UNDINV_ID            IN INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%TYPE,
--                                         P_FECHA_BLOQUEO     IN  SOLICITUDES_DICOM.FECHA_BLOQUEO%TYPE,
--                                         P_ID_RESULT_COMPROBACION_BCV  IN  SOLICITUDES_DICOM.ID_RESULT_COMPROBACION_BCV%TYPE                                                                         
--                                         ) AS           

--    v_query     VARCHAR2(1000);
--                                         
--    BEGIN
--    
--    NOMBRE_SP:='SP_ACT_SOL_DICOM_TRANSF';
--    v_query:='UPDATE SOLICITUDES_DICOM SET ';
--    
--    IF P_CODIGO_RESPUESTA IS NOT NULL THEN
--    flag_sent_correc:=1;
--    v_query:=CONCAT(v_query,' CODIGO_RESPUESTA='||''''||P_CODIGO_RESPUESTA||''''||', ');
--    END IF;
--            
--    IF p_NOMBRE_CLIENTE IS NOT NULL THEN
--    flag_sent_correc:=1;
--    v_query:=CONCAT(v_query,' NOMBRE_CLIENTE=TRIM('||''''||p_NOMBRE_CLIENTE||''''||'), ');
--    END IF;
--    
--    IF p_TELEFONO_CLIENTE IS NOT NULL THEN
--    flag_sent_correc:=1;
--    v_query:=CONCAT(v_query,' TELEFONO_CLIENTE='||''''||p_TELEFONO_CLIENTE||''''||', ');
--    END IF;
--    
--    IF p_CORREO_CLIENTE IS NOT NULL THEN
--    flag_sent_correc:=1;
--    v_query:=CONCAT(v_query,' CORREO_CLIENTE='||''''||p_CORREO_CLIENTE||''''||', ');
--    END IF;
--    
--    IF p_NRO_RET_CAPITAL IS NOT NULL THEN
--    flag_sent_correc:=1;
--    v_query:=CONCAT(v_query,' NRO_RET_CAPITAL='||''''||p_NRO_RET_CAPITAL||''''||', ');
--    END IF;
--    
--    IF p_HORA_BLOQ IS NOT NULL THEN
--    flag_sent_correc:=1;    
--    v_query:=CONCAT(v_query,' HORA_BLOQ='||''''||p_HORA_BLOQ||''''||', ');
--    END IF;
--    
--    /*IF p_DIVISA_NACIONAL IS NOT NULL THEN
--    flag_sent_correc:=1;    
--    v_query:=CONCAT(v_query,' DIVISA_NACIONAL='||''''||p_DIVISA_NACIONAL||''''||', ');
--    END IF;*/
--    
--    IF p_NRO_RET_COMISION IS NOT NULL THEN
--    flag_sent_correc:=1;        
--    v_query:=CONCAT(v_query,' NRO_RET_COMISION='||''''||p_NRO_RET_COMISION||''''||', ');
--    END IF;
--    
--    IF p_MONTO_COMISION IS NOT NULL THEN
--    flag_sent_correc:=1;
--    v_query:=CONCAT(v_query,' MONTO_COMISION='||to_char(p_MONTO_COMISION,'0999999999999.99')|| ', ');--NUMERICO  
--    END IF;
--    
--    IF p_PORC_COMISION IS NOT NULL THEN
--    flag_sent_correc:=1;
--    v_query:=CONCAT(v_query,' PORC_COMISION='||to_char(p_PORC_COMISION, '099.99')|| ', ');--NUMERICO 
--    END IF;
--    
--    IF p_DIVISA_EXTRANJERA IS NOT NULL THEN
--    flag_sent_correc:=1;    
--    v_query:=CONCAT(v_query,' DIVISA_EXTRANJERA='||''''||p_DIVISA_EXTRANJERA||''''||', ');
--    END IF;
--    
--   /* IF p_TASA_CAMBIO IS NOT NULL THEN
--    flag_sent_correc:=1;
--    v_query:=CONCAT(v_query,' TASA_CAMBIO='||to_char(p_TASA_CAMBIO, '099999.9999')|| ', ');--NUMERICO 
--    END IF;*/
--            
--    IF P_NRO_OPE_DEBITO IS NOT NULL THEN
--    flag_sent_correc:=1;
--    v_query:=CONCAT(v_query,' NRO_OPE_DEBITO='||P_NRO_OPE_DEBITO|| ', ');--NUMERICO
--    END IF;
--    
--    IF P_NRO_OPE_CREDITO IS NOT NULL THEN
--    flag_sent_correc:=1;
--    v_query:=CONCAT(v_query,' NRO_OPE_CREDITO='||P_NRO_OPE_CREDITO|| ', ');--NUMERICO
--    END IF;

--    IF P_UNDINV_ID IS NOT NULL AND  P_UNDINV_ID<>0 THEN
--    flag_sent_correc:=1;
--    v_query:=CONCAT(v_query,' UNDINV_ID='||P_UNDINV_ID|| ', ');--NUMERICO
--    END IF;       
--    
--     IF P_FECHA_BLOQUEO IS NOT NULL THEN
--    flag_sent_correc:=1;
--    v_query:=CONCAT(v_query,' FECHA_BLOQUEO='||''''||P_FECHA_BLOQUEO||''''||', ');--DATE
--    END IF;  
--    
--     IF P_ID_RESULT_COMPROBACION_BCV IS NOT NULL THEN
--    flag_sent_correc:=1;
--    v_query:=CONCAT(v_query,' ID_RESULT_COMPROBACION_BCV='||P_ID_RESULT_COMPROBACION_BCV|| ', ');--VARCHAR
--    END IF;            
--                 
--    
--       IF flag_sent_correc=0 THEN
--       CRUD_MSJ_EXCEPTION:='Error Validacion: '||NOMBRE_SP||'  - No se ha ingresado ningun campo para ser modificado';
--       RAISE CRUD_VALIDATION_EXCEPTION;       
--       ELSE
--       v_query:=CONCAT(v_query,' ESTATUS_REGISTRO=1 ');
--       END IF;
--       
--    --v_query:=SUBSTR(v_query,0,(Length(v_query)-2));
--    v_query:=CONCAT(v_query,' WHERE NRO_SOLICITUD='||''''||P_NRO_SOLICITUD||''''||' ');
--    v_query:=CONCAT(v_query,' AND ID_JORNADA=' ||''''||P_NRO_JORNADA||''''||'');
--      DBMS_OUTPUT.put_line('QUERY --> ' || v_query);                                                
--    EXECUTE IMMEDIATE v_query;                
--       EXCEPTION
--          WHEN CRUD_VALIDATION_EXCEPTION THEN
--          BEGIN
--            RAISE CRUD_VALIDATION_EXCEPTION;
--          END;
--          WHEN OTHERS THEN  
--          BEGIN  
--          ROLLBACK;  
--          CRUD_MSJ_EXCEPTION:='Error Inesperado: '||NOMBRE_SP||' '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
--          RAISE CRUD_UNEXPECTED_EXCEPTION;
--          END;             
--                   
--END SP_ACT_SOL_DICOM_TRANSF;                                                   

END PK_INFI_CRUD;
/


CREATE OR REPLACE PACKAGE BODY ADM_INFI.PK_INFI_CRUD_F2
IS
--
-- To modify this template, edit file PKGBODY.TXT in TEMPLATE 
-- directory of SQL Navigator
--
-- Purpose: Briefly explain the functionality of the package body
--
-- MODIFICATION HISTORY
-- Person      Date    Comments
-- ---------   ------  ------------------------------------------      
   -- Enter procedure, function bodies as shown below

   PROCEDURE SP_CREAR_ORDEN(p_UNIINV_ID               IN INFI_TB_204_ORDENES.UNIINV_ID%TYPE,
                                                      p_CLIENT_ID               IN INFI_TB_204_ORDENES.CLIENT_ID%TYPE,
                                                      p_ORDSTA_ID               IN INFI_TB_204_ORDENES.ORDSTA_ID%TYPE,
                                                      p_SISTEMA_ID              IN INFI_TB_204_ORDENES.SISTEMA_ID%TYPE,
                                                      p_EMPRES_ID               IN INFI_TB_204_ORDENES.EMPRES_ID%TYPE,
                                                      p_CONTRAPARTE             IN INFI_TB_204_ORDENES.CONTRAPARTE%TYPE,
                                                      p_TRANSA_ID               IN INFI_TB_204_ORDENES.TRANSA_ID%TYPE,
                                                      p_ENVIADO                 IN INFI_TB_204_ORDENES.ENVIADO%TYPE,
                                                      p_ORDENE_CTE_SEG_BCO      IN INFI_TB_204_ORDENES.ORDENE_CTE_SEG_BCO%TYPE,
                                                      p_ORDENE_CTE_SEG_SEG      IN INFI_TB_204_ORDENES.ORDENE_CTE_SEG_SEG%TYPE,
                                                      p_ORDENE_CTE_SEG_SUB      IN INFI_TB_204_ORDENES.ORDENE_CTE_SEG_SUB%TYPE,
                                                      p_ORDENE_CTE_SEG_INFI     IN INFI_TB_204_ORDENES.ORDENE_CTE_SEG_INFI%TYPE,
                                                      p_ORDENE_PED_FE_ORDEN     IN INFI_TB_204_ORDENES.ORDENE_PED_FE_ORDEN%TYPE,
                                                      p_ORDENE_PED_FE_VALOR     IN INFI_TB_204_ORDENES.ORDENE_PED_FE_VALOR%TYPE,
                                                      p_ORDENE_PED_MONTO        IN INFI_TB_204_ORDENES.ORDENE_PED_MONTO%TYPE,
                                                      p_ORDENE_PED_TOTAL_PEND   IN INFI_TB_204_ORDENES.ORDENE_PED_TOTAL_PEND%TYPE,
                                                      p_ORDENE_PED_TOTAL        IN INFI_TB_204_ORDENES.ORDENE_PED_TOTAL%TYPE,
                                                      p_ORDENE_PED_INT_CAIDOS   IN INFI_TB_204_ORDENES.ORDENE_PED_INT_CAIDOS%TYPE,
                                                      p_BLOTER_ID               IN INFI_TB_204_ORDENES.BLOTER_ID%TYPE,
                                                      p_ORDENE_PED_CTA_BSNRO    IN INFI_TB_204_ORDENES.ORDENE_PED_CTA_BSNRO%TYPE,
                                                      p_ORDENE_PED_CTA_BSTIP    IN INFI_TB_204_ORDENES.ORDENE_PED_CTA_BSTIP%TYPE,
                                                      p_CTECTA_NUMERO           IN INFI_TB_204_ORDENES.CTECTA_NUMERO%TYPE,
                                                      p_ORDENE_PED_PRECIO       IN INFI_TB_204_ORDENES.ORDENE_PED_PRECIO%TYPE,
                                                      p_ORDENE_PED_RENDIMIENTO  IN INFI_TB_204_ORDENES.ORDENE_PED_RENDIMIENTO%TYPE,
                                                      p_ORDENE_PED_IN_BDV       IN INFI_TB_204_ORDENES.ORDENE_PED_IN_BDV%TYPE,
                                                      p_MONEDA_ID               IN INFI_TB_204_ORDENES.MONEDA_ID%TYPE,
                                                      p_ORDENE_PED_RCP_PRECIO   IN INFI_TB_204_ORDENES.ORDENE_PED_RCP_PRECIO%TYPE,
                                                      p_ORDENE_ADJ_MONTO        IN INFI_TB_204_ORDENES.ORDENE_ADJ_MONTO%TYPE,
                                                      p_ORDENE_USR_NOMBRE       IN INFI_TB_204_ORDENES.ORDENE_USR_NOMBRE%TYPE,
                                                      p_ORDENE_USR_CEN_CONTABLE IN INFI_TB_204_ORDENES.ORDENE_USR_CEN_CONTABLE%TYPE,
                                                      p_ORDENE_USR_SUCURSAL     IN INFI_TB_204_ORDENES.ORDENE_USR_SUCURSAL%TYPE,
                                                      p_ORDENE_USR_TERMINAL     IN INFI_TB_204_ORDENES.ORDENE_USR_TERMINAL%TYPE,
                                                      p_ORDENE_VEH_TOM          IN INFI_TB_204_ORDENES.ORDENE_VEH_TOM%TYPE,
                                                      p_ORDENE_VEH_COL          IN INFI_TB_204_ORDENES.ORDENE_VEH_COL%TYPE,
                                                      p_ORDENE_VEH_REC          IN INFI_TB_204_ORDENES.ORDENE_VEH_REC%TYPE,
                                                      p_ORDENE_EJEC_ID          IN INFI_TB_204_ORDENES.ORDENE_EJEC_ID%TYPE,
                                                      p_ORDENE_FE_ULT_ACT       IN INFI_TB_204_ORDENES.ORDENE_FE_ULT_ACT%TYPE,
                                                      p_ORDENE_PED_COMISIONES   IN INFI_TB_204_ORDENES.ORDENE_PED_COMISIONES%TYPE,
                                                      p_ORDENE_FINANCIADO       IN INFI_TB_204_ORDENES.ORDENE_FINANCIADO%TYPE,
                                                      p_EJECUCION_ID            IN INFI_TB_204_ORDENES.EJECUCION_ID%TYPE,
                                                      p_ORDENE_TASA_POOL        IN INFI_TB_204_ORDENES.ORDENE_TASA_POOL%TYPE,
                                                      p_ORDENE_GANANCIA_RED     IN INFI_TB_204_ORDENES.ORDENE_GANANCIA_RED%TYPE,
                                                      p_ORDENE_COMISION_OFICINA IN INFI_TB_204_ORDENES.ORDENE_COMISION_OFICINA%TYPE,
                                                      p_ORDENE_COMISION_OPERACION  IN INFI_TB_204_ORDENES.ORDENE_COMISION_OPERACION%TYPE,
                                                      p_ORDENE_OPERAC_PEND         IN INFI_TB_204_ORDENES.ORDENE_OPERAC_PEND%TYPE,
                                                      p_ORDENE_ID_RELACION         IN INFI_TB_204_ORDENES.ORDENE_ID_RELACION%TYPE,
                                                      p_ORDENE_TASA_CAMBIO         IN INFI_TB_204_ORDENES.ORDENE_TASA_CAMBIO%TYPE,
                                                      p_CONCEPTO_ID                IN INFI_TB_204_ORDENES.CONCEPTO_ID%TYPE,
                                                      p_ORDENE_OBSERVACION         IN INFI_TB_204_ORDENES.ORDENE_OBSERVACION%TYPE,
                                                      p_TIPO_PRODUCTO_ID           IN INFI_TB_204_ORDENES.TIPO_PRODUCTO_ID%TYPE,
                                                      p_CTA_ABONO                  IN INFI_TB_204_ORDENES.CTA_ABONO%TYPE,
                                                      p_PORC_COMISION_IGTF         IN INFI_TB_204_ORDENES.ORDENE_PED_PORC_COMISION_IGTF%TYPE,
                                                      p_COMISION_IGTF              IN INFI_TB_204_ORDENES.ORDENE_PED_COMISION_IGTF%TYPE,
                                                      p_ORDENE_ID                  OUT INFI_TB_204_ORDENES.ORDENE_ID%TYPE

) AS

BEGIN 
    
            IF P_CLIENT_ID IS NULL OR P_ORDSTA_ID IS NULL OR P_TRANSA_ID IS NULL OR P_ORDENE_PED_FE_ORDEN IS NULL OR P_ORDENE_PED_FE_VALOR IS NULL OR P_ORDENE_PED_IN_BDV IS NULL THEN--OR  P_ORDENE_ESTATUS_BCV IS NULL OR P_ORDENE_IDBCV THEN                      
                CRUD_MSJ_EXCEPTION:='Error Validacion: SP_CREAR_ORDEN  - Campo NOT NULL h sido pasado sin informacion';
                RAISE CRUD_VALIDATION_EXCEPTION;                   
            END IF;
                        v_secuencia_ordenes:=GET_SEQUENCE('INFI_TB_204_ORDENES');--BUSQUEDA DE ID DE NUEVA ORDEN
                        p_ORDENE_ID:=v_secuencia_ordenes;
                                   
                        INSERT INTO INFI_TB_204_ORDENES (ORDENE_ID,
                                                         UNIINV_ID,
                                                         CLIENT_ID,
                                                         ORDSTA_ID, 
                                                         SISTEMA_ID,
                                                         EMPRES_ID,
                                                         CONTRAPARTE,
                                                         TRANSA_ID,
                                                         ENVIADO,
                                                         ORDENE_CTE_SEG_BCO,
                                                         ORDENE_CTE_SEG_SEG, 
                                                         ORDENE_CTE_SEG_SUB,
                                                         ORDENE_CTE_SEG_INFI,
                                                         ORDENE_PED_FE_ORDEN,
                                                         ORDENE_PED_FE_VALOR, 
                                                         ORDENE_PED_MONTO,
                                                         ORDENE_PED_TOTAL_PEND,
                                                         ORDENE_PED_TOTAL,
                                                         ORDENE_PED_INT_CAIDOS,
                                                         BLOTER_ID, 
                                                         ORDENE_PED_CTA_BSNRO,
                                                         ORDENE_PED_CTA_BSTIP,
                                                         CTECTA_NUMERO,
                                                         ORDENE_PED_PRECIO, 
                                                         ORDENE_PED_RENDIMIENTO,
                                                         ORDENE_PED_IN_BDV,
                                                         MONEDA_ID,
                                                         ORDENE_PED_RCP_PRECIO,
                                                         ORDENE_ADJ_MONTO, 
                                                         ORDENE_USR_NOMBRE,
                                                         ORDENE_USR_CEN_CONTABLE,
                                                         ORDENE_USR_SUCURSAL,
                                                         ORDENE_USR_TERMINAL, 
                                                         ORDENE_VEH_TOM,
                                                         ORDENE_VEH_COL,
                                                         ORDENE_VEH_REC,
                                                         ORDENE_EJEC_ID,
                                                         ORDENE_FE_ULT_ACT,
                                                         ORDENE_PED_COMISIONES,
                                                         ORDENE_FINANCIADO,
                                                         EJECUCION_ID,
                                                         ORDENE_TASA_POOL,
                                                         ORDENE_GANANCIA_RED, 
                                                         ORDENE_COMISION_OFICINA, 
                                                         ORDENE_COMISION_OPERACION, 
                                                         ORDENE_OPERAC_PEND, 
                                                         ORDENE_ID_RELACION, 
                                                         ORDENE_TASA_CAMBIO,
                                                         CONCEPTO_ID,
                                                         ORDENE_OBSERVACION,
                                                         TIPO_PRODUCTO_ID,
                                                         CTA_ABONO,
                                                         ORDENE_PED_PORC_COMISION_IGTF,
                                                         ORDENE_PED_COMISION_IGTF)                                                           
                                                         VALUES(
                                                          v_secuencia_ordenes,
                                                          p_UNIINV_ID,
                                                          p_CLIENT_ID,
                                                          p_ORDSTA_ID,
                                                          p_SISTEMA_ID,
                                                          p_EMPRES_ID,
                                                          p_CONTRAPARTE,
                                                          p_TRANSA_ID,
                                                          p_ENVIADO,
                                                          p_ORDENE_CTE_SEG_BCO,
                                                          p_ORDENE_CTE_SEG_SEG,
                                                          p_ORDENE_CTE_SEG_SUB,
                                                          p_ORDENE_CTE_SEG_INFI,
                                                          p_ORDENE_PED_FE_ORDEN,
                                                          p_ORDENE_PED_FE_VALOR,
                                                          p_ORDENE_PED_MONTO,
                                                          p_ORDENE_PED_TOTAL_PEND,
                                                          p_ORDENE_PED_TOTAL,
                                                          p_ORDENE_PED_INT_CAIDOS,
                                                          p_BLOTER_ID,
                                                          p_ORDENE_PED_CTA_BSNRO,
                                                          p_ORDENE_PED_CTA_BSTIP,
                                                          p_CTECTA_NUMERO       ,
                                                          p_ORDENE_PED_PRECIO   ,
                                                          p_ORDENE_PED_RENDIMIENTO,
                                                          p_ORDENE_PED_IN_BDV     ,
                                                          p_MONEDA_ID             ,
                                                          p_ORDENE_PED_RCP_PRECIO ,
                                                          p_ORDENE_ADJ_MONTO      ,
                                                          p_ORDENE_USR_NOMBRE     ,
                                                          p_ORDENE_USR_CEN_CONTABLE,
                                                          p_ORDENE_USR_SUCURSAL    ,
                                                          p_ORDENE_USR_TERMINAL    ,
                                                          p_ORDENE_VEH_TOM         ,
                                                          p_ORDENE_VEH_COL         ,
                                                          p_ORDENE_VEH_REC         ,
                                                          p_ORDENE_EJEC_ID         ,
                                                          p_ORDENE_FE_ULT_ACT      ,
                                                          p_ORDENE_PED_COMISIONES  ,
                                                          p_ORDENE_FINANCIADO      ,
                                                          p_EJECUCION_ID           ,
                                                          p_ORDENE_TASA_POOL       ,
                                                          p_ORDENE_GANANCIA_RED    ,
                                                          p_ORDENE_COMISION_OFICINA,
                                                          p_ORDENE_COMISION_OPERACION,
                                                          p_ORDENE_OPERAC_PEND       ,
                                                          p_ORDENE_ID_RELACION       ,
                                                          p_ORDENE_TASA_CAMBIO       ,
                                                          p_CONCEPTO_ID              ,
                                                          p_ORDENE_OBSERVACION       ,
                                                          p_TIPO_PRODUCTO_ID         ,
                                                          p_CTA_ABONO                ,
                                                          p_PORC_COMISION_IGTF       ,
                                                          p_COMISION_IGTF);
            
           EXCEPTION
          WHEN CRUD_VALIDATION_EXCEPTION THEN
          BEGIN
          CRUD_MSJ_EXCEPTION:='Error de Validacion: SP_CREAR_ORDEN '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
            RAISE CRUD_VALIDATION_EXCEPTION;
          END;
          WHEN OTHERS THEN    
          BEGIN
          ROLLBACK;  
          CRUD_MSJ_EXCEPTION:='Error Inesperado: SP_CREAR_ORDEN '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
          RAISE CRUD_UNEXPECTED_EXCEPTION;
          END;
            
                                                                          
END SP_CREAR_ORDEN;
 PROCEDURE SP_CREAR_OPERACION(p_ORDENE_ID              IN INFI_TB_207_ORDENES_OPERACION.ORDENE_ID%TYPE,                                                         
                                                         p_TRNFIN_ID              IN INFI_TB_207_ORDENES_OPERACION.TRNFIN_ID%TYPE,
                                                         p_STATUS_OPERACION       IN INFI_TB_207_ORDENES_OPERACION.STATUS_OPERACION%TYPE,
                                                         p_APLICA_REVERSO         IN INFI_TB_207_ORDENES_OPERACION.APLICA_REVERSO%TYPE,
                                                         p_MONTO_OPERACION        IN INFI_TB_207_ORDENES_OPERACION.MONTO_OPERACION%TYPE,
                                                         p_TASA                   IN INFI_TB_207_ORDENES_OPERACION.TASA%TYPE,
                                                         p_FECHA_APLICAR          IN INFI_TB_207_ORDENES_OPERACION.FECHA_APLICAR%TYPE,
                                                         p_FECHA_PROCESADA        IN INFI_TB_207_ORDENES_OPERACION.FECHA_PROCESADA%TYPE,
                                                         p_ORDENE_OPERACION_ERROR IN INFI_TB_207_ORDENES_OPERACION.ORDENE_OPERACION_ERROR%TYPE,
                                                         p_SERIAL                 IN INFI_TB_207_ORDENES_OPERACION.SERIAL%TYPE,
                                                         p_IN_COMISION            IN INFI_TB_207_ORDENES_OPERACION.IN_COMISION%TYPE,
                                                         p_MONEDA_ID              IN INFI_TB_207_ORDENES_OPERACION.MONEDA_ID%TYPE,
                                                         p_CTECTA_NUMERO          IN INFI_TB_207_ORDENES_OPERACION.CTECTA_NUMERO%TYPE,
                                                         p_OPERACION_NOMBRE       IN INFI_TB_207_ORDENES_OPERACION.OPERACION_NOMBRE%TYPE,
                                                         p_CTECTA_NOMBRE          IN INFI_TB_207_ORDENES_OPERACION.CTECTA_NOMBRE%TYPE,
                                                         p_CTECTA_BCOCTA_BCO      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_BCO%TYPE,                                                         
                                                         p_CTECTA_BCOCTA_DIRECCION IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_DIRECCION%TYPE,
                                                         p_CTECTA_BCOCTA_SWIFT    IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_SWIFT%TYPE,
                                                         p_CTECTA_BCOCTA_BIC      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_BIC%TYPE,
                                                         p_CTECTA_BCOCTA_TELEFONO IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_TELEFONO%TYPE,
                                                         p_CTECTA_BCOCTA_ABA      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_ABA%TYPE,
                                                         p_CTECTA_BCOCTA_PAIS     IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_PAIS%TYPE,
                                                         p_CTECTA_BCOINT_BCO      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_BCO%TYPE,
                                                         p_CTECTA_BCOINT_DIRECCION IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_DIRECCION%TYPE,
                                                         p_CTECTA_BCOINT_SWIFT    IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_SWIFT%TYPE,
                                                         p_CTECTA_BCOINT_BIC      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_BIC%TYPE,
                                                         p_CTECTA_BCOINT_TELEFONO IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_TELEFONO%TYPE,
                                                         p_CTECTA_BCOINT_ABA      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_ABA%TYPE,
                                                         p_CTECTA_BCOINT_PAIS     IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_PAIS%TYPE,
                                                         p_TRNF_TIPO              IN INFI_TB_207_ORDENES_OPERACION.TRNF_TIPO%TYPE,
                                                         p_TITULO_ID              IN INFI_TB_207_ORDENES_OPERACION.TITULO_ID%TYPE,
                                                         p_CODIGO_OPERACION       IN INFI_TB_207_ORDENES_OPERACION.CODIGO_OPERACION%TYPE,
                                                         p_NUMERO_RETENCION       IN INFI_TB_207_ORDENES_OPERACION.NUMERO_RETENCION%TYPE,
                                                         p_ORDENE_RELAC_OPERACION_ID IN INFI_TB_207_ORDENES_OPERACION.ORDENE_RELAC_OPERACION_ID%TYPE,
                                                         p_FECHA_INICIO_CP        IN INFI_TB_207_ORDENES_OPERACION.FECHA_INICIO_CP%TYPE,
                                                         p_FECHA_FIN_CP           IN INFI_TB_207_ORDENES_OPERACION.FECHA_FIN_CP%TYPE,
                                                         p_IN_COMISION_INVARIABLE IN INFI_TB_207_ORDENES_OPERACION.IN_COMISION_INVARIABLE%TYPE

) AS

BEGIN 

        
            IF p_ORDENE_ID IS NULL OR p_MONTO_OPERACION IS NULL OR p_STATUS_OPERACION IS NULL OR p_TRNFIN_ID IS NULL THEN                      
            CRUD_MSJ_EXCEPTION:='Error Validacion: SP_CREAR_OPERACION  - Campo NOT NULL sido pasado sin informacion';
            RAISE CRUD_VALIDATION_EXCEPTION;                   
            END IF;

                  v_secuencia_operacion:=GET_SEQUENCE('INFI_TB_207_ORDENES_OPERACION');--BUSQUEDA DE ID DE NUEVA ORDEN

                                                         INSERT INTO INFI_TB_207_ORDENES_OPERACION (
                                                                ORDENE_ID,
                                                                ORDENE_OPERACION_ID, 
                                                                TRNFIN_ID,STATUS_OPERACION, 
                                                                APLICA_REVERSO,
                                                                MONTO_OPERACION,
                                                                TASA,
                                                                FECHA_APLICAR,
                                                                FECHA_PROCESADA, 
                                                                ORDENE_OPERACION_ERROR,
                                                                SERIAL,
                                                                IN_COMISION,
                                                                MONEDA_ID,                     
                                                                CTECTA_NUMERO, 
                                                                OPERACION_NOMBRE, 
                                                                CTECTA_NOMBRE,
                                                                CTECTA_BCOCTA_BCO,
                                                                CTECTA_BCOCTA_DIRECCION,
                                                                CTECTA_BCOCTA_SWIFT, 
                                                                CTECTA_BCOCTA_BIC,
                                                                CTECTA_BCOCTA_TELEFONO,
                                                                CTECTA_BCOCTA_ABA,
                                                                CTECTA_BCOCTA_PAIS,
                                                                CTECTA_BCOINT_BCO, 
                                                                CTECTA_BCOINT_DIRECCION,
                                                                CTECTA_BCOINT_SWIFT,
                                                                CTECTA_BCOINT_BIC,
                                                                CTECTA_BCOINT_TELEFONO,
                                                                CTECTA_BCOINT_ABA,    
                                                                CTECTA_BCOINT_PAIS,
                                                                TRNF_TIPO,TITULO_ID,
                                                                CODIGO_OPERACION,
                                                                NUMERO_RETENCION,
                                                                ORDENE_RELAC_OPERACION_ID,
                                                                FECHA_INICIO_CP,
                                                                FECHA_FIN_CP,
                                                                IN_COMISION_INVARIABLE)                     
                                                                VALUES
                                                                 (p_ORDENE_ID,
                                                                 v_secuencia_operacion,
                                                                 p_TRNFIN_ID,
                                                                 p_STATUS_OPERACION,
                                                                 p_APLICA_REVERSO,
                                                                 p_MONTO_OPERACION,
                                                                 p_TASA,
                                                                 p_FECHA_APLICAR,
                                                                 p_FECHA_PROCESADA,
                                                                 p_ORDENE_OPERACION_ERROR,
                                                                 p_SERIAL,
                                                                 p_IN_COMISION,
                                                                 p_MONEDA_ID,
                                                                 p_CTECTA_NUMERO,
                                                                 p_OPERACION_NOMBRE,
                                                                 p_CTECTA_NOMBRE,
                                                                 p_CTECTA_BCOCTA_BCO,
                                                                 p_CTECTA_BCOCTA_DIRECCION,
                                                                 p_CTECTA_BCOCTA_SWIFT,
                                                                 p_CTECTA_BCOCTA_BIC,
                                                                 p_CTECTA_BCOCTA_TELEFONO,
                                                                 p_CTECTA_BCOCTA_ABA,
                                                                 p_CTECTA_BCOCTA_PAIS,
                                                                 p_CTECTA_BCOINT_BCO,
                                                                 p_CTECTA_BCOINT_DIRECCION,
                                                                 p_CTECTA_BCOINT_SWIFT,
                                                                 p_CTECTA_BCOINT_BIC,
                                                                 p_CTECTA_BCOINT_TELEFONO,
                                                                 p_CTECTA_BCOINT_ABA,
                                                                 p_CTECTA_BCOINT_PAIS,
                                                                 p_TRNF_TIPO,
                                                                 p_TITULO_ID,
                                                                 p_CODIGO_OPERACION,
                                                                 p_NUMERO_RETENCION,
                                                                 p_ORDENE_RELAC_OPERACION_ID,
                                                                 p_FECHA_INICIO_CP,
                                                                 p_FECHA_FIN_CP,
                                                                 p_IN_COMISION_INVARIABLE);
          EXCEPTION
          WHEN CRUD_VALIDATION_EXCEPTION THEN
          BEGIN
          CRUD_MSJ_EXCEPTION:='Error de Validacion: SP_CREAR_OPERACION '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
            RAISE CRUD_VALIDATION_EXCEPTION;
          END;
          WHEN OTHERS THEN    
          BEGIN
          ROLLBACK;  
          CRUD_MSJ_EXCEPTION:='Error Inesperado: SP_CREAR_OPERACION '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
          RAISE CRUD_UNEXPECTED_EXCEPTION;
          END;  
            
END SP_CREAR_OPERACION;

PROCEDURE SP_CREAR_CLIENTE(p_TIPPER_ID        IN INFI_TB_201_CTES.TIPPER_ID%TYPE,
                            p_CLIENT_CEDRIF   IN INFI_TB_201_CTES.CLIENT_CEDRIF%TYPE,
                            p_CLIENT_NOMBRE   IN INFI_TB_201_CTES.CLIENT_NOMBRE%TYPE,
                            p_CLIENT_TELEFONO IN INFI_TB_201_CTES.CLIENT_TELEFONO%TYPE,
                            p_CLIENT_CORREO_ELECTRONICO IN INFI_TB_201_CTES.CLIENT_CORREO_ELECTRONICO%TYPE,
                            p_CTESEG_ID      IN INFI_TB_201_CTES.CTESEG_ID%TYPE,
                            p_NUMERO_PERSONA IN INFI_TB_201_CTES.NUMERO_PERSONA%TYPE,
                            p_CLIENT_ID      OUT INFI_TB_201_CTES.CLIENT_ID%TYPE) AS
                            
                            
                            v_CLIENT_CTA_CUSTOD_ID SEQUENCE_NUMBERS.NEXT_ID%TYPE;

BEGIN 

                            IF p_TIPPER_ID IS NULL OR p_CLIENT_CEDRIF IS NULL OR p_CLIENT_NOMBRE IS NULL THEN                      
                                CRUD_MSJ_EXCEPTION:='Error Validacion: SP_CREAR_CLIENTE  - Campo NOT NULL sido pasado sin informacion';
                                RAISE CRUD_VALIDATION_EXCEPTION;                   
                            END IF;
                            
                            v_secuencia_cliente:=GET_SEQUENCE('INFI_TB_201_CTES');--BUSQUEDA DE ID DE NUEVA ORDEN
                            p_CLIENT_ID:=v_secuencia_cliente;
                            v_CLIENT_CTA_CUSTOD_ID:=GET_SEQUENCE('CTA_CUSTODIA');
                            
                            INSERT INTO INFI_TB_201_CTES (CLIENT_ID,
                                                          TIPPER_ID,
                                                          CLIENT_CEDRIF,
                                                          CLIENT_NOMBRE,
                                                          CLIENT_TELEFONO,
                                                          CLIENT_CTA_CUSTOD_ID,
                                                          CLIENT_CTA_CUSTOD_FECHA,
                                                          CLIENT_CORREO_ELECTRONICO,
                                                          CTESEG_ID,
                                                          NUMERO_PERSONA) 
                                                    values (v_secuencia_cliente,
                                                            p_TIPPER_ID,
                                                            p_CLIENT_CEDRIF,
                                                            p_CLIENT_NOMBRE,
                                                            p_CLIENT_TELEFONO,
                                                             v_CLIENT_CTA_CUSTOD_ID,
                                                             SYSDATE,
                                                            p_CLIENT_CORREO_ELECTRONICO,
                                                            p_CTESEG_ID,
                                                            p_NUMERO_PERSONA
                                                            );
                                                            
                                                              
            EXCEPTION
          WHEN CRUD_VALIDATION_EXCEPTION THEN
          BEGIN
          CRUD_MSJ_EXCEPTION:='Error de Validacion: SP_CREAR_CLIENTE '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
            RAISE CRUD_VALIDATION_EXCEPTION;
          END;
          WHEN OTHERS THEN    
          BEGIN
          ROLLBACK;  
          CRUD_MSJ_EXCEPTION:='Error Inesperado: SP_CREAR_CLIENTE '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
          RAISE CRUD_UNEXPECTED_EXCEPTION;
          END;   
--            WHEN OTHERS THEN
--            BEGIN
--            ROLLBACK;  
--            CRUD_MSJ_EXCEPTION:='Error Inesperado: SP_CREAR_CLIENTE '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
--            RAISE CRUD_UNEXPECTED_EXCEPTION;                           
--            END;
            
END SP_CREAR_CLIENTE;   

PROCEDURE SP_ACTIALIZAR_SOLICITUD_DICOM( p_NRO_SOLICITUD         IN  SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
                                         P_NRO_JORNADA          IN  SOLICITUDES_DICOM.ID_JORNADA%TYPE,
                                         P_CODIGO_RESPUESTA     IN  SOLICITUDES_DICOM.CODIGO_RESPUESTA%TYPE,
                                         p_NOMBRE_CLIENTE       IN SOLICITUDES_DICOM.NOMBRE_CLIENTE%TYPE,
                                         p_TELEFONO_CLIENTE     IN SOLICITUDES_DICOM.TELEFONO_CLIENTE%TYPE,
                                         p_CORREO_CLIENTE       IN SOLICITUDES_DICOM.CORREO_CLIENTE%TYPE,
                                         p_NRO_RET_CAPITAL      IN SOLICITUDES_DICOM.NRO_RET_CAPITAL%TYPE,
                                         p_HORA_BLOQ            IN SOLICITUDES_DICOM.HORA_BLOQ%TYPE,
                                         p_DIVISA_NACIONAL      IN SOLICITUDES_DICOM.DIVISA_NACIONAL%TYPE,
                                         p_NRO_RET_COMISION     IN SOLICITUDES_DICOM.NRO_RET_COMISION%TYPE,
                                         p_MONTO_COMISION       IN SOLICITUDES_DICOM.MONTO_COMISION%TYPE,
                                         p_PORC_COMISION        IN SOLICITUDES_DICOM.PORC_COMISION%TYPE,
                                         p_DIVISA_EXTRANJERA    IN SOLICITUDES_DICOM.DIVISA_EXTRANJERA%TYPE,
                                         p_TASA_CAMBIO          IN SOLICITUDES_DICOM.TASA_CAMBIO%TYPE,
                                         P_NRO_OPE_DEBITO       IN  SOLICITUDES_DICOM.NRO_OPE_DEBITO%TYPE,
                                         P_NRO_OPE_CREDITO      IN  SOLICITUDES_DICOM.NRO_OPE_CREDITO%TYPE,
                                         P_UNDINV_ID            IN INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%TYPE                                         
                                         ) AS           

    v_query     VARCHAR2(1000);
                                         
    BEGIN
    v_query:='UPDATE SOLICITUDES_DICOM SET ';
    
    IF P_CODIGO_RESPUESTA IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' CODIGO_RESPUESTA='||''''||P_CODIGO_RESPUESTA||''''||', ');
    END IF;
            
    IF p_NOMBRE_CLIENTE IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' NOMBRE_CLIENTE='||''''||p_NOMBRE_CLIENTE||''''||', ');
    END IF;
    
    IF p_TELEFONO_CLIENTE IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' TELEFONO_CLIENTE='||''''||p_TELEFONO_CLIENTE||''''||', ');
    END IF;
    
    IF p_CORREO_CLIENTE IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' CORREO_CLIENTE='||''''||p_CORREO_CLIENTE||''''||', ');
    END IF;
    
    IF p_NRO_RET_CAPITAL IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' NRO_RET_CAPITAL='||''''||p_NRO_RET_CAPITAL||''''||', ');
    END IF;
    
    IF p_HORA_BLOQ IS NOT NULL THEN
    flag_sent_correc:=1;    
    v_query:=CONCAT(v_query,' HORA_BLOQ='||''''||p_HORA_BLOQ||''''||', ');
    END IF;
    
    IF p_DIVISA_NACIONAL IS NOT NULL THEN
    flag_sent_correc:=1;    
    v_query:=CONCAT(v_query,' DIVISA_NACIONAL='||''''||p_DIVISA_NACIONAL||''''||', ');
    END IF;
    
    IF p_NRO_RET_COMISION IS NOT NULL THEN
    flag_sent_correc:=1;        
    v_query:=CONCAT(v_query,' NRO_RET_COMISION='||''''||p_NRO_RET_COMISION||''''||', ');
    END IF;
    
    IF p_MONTO_COMISION IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' MONTO_COMISION='||to_char(p_MONTO_COMISION,'0999999999999.99')|| ', ');--NUMERICO  
    END IF;
    
    IF p_PORC_COMISION IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' PORC_COMISION='||to_char(p_PORC_COMISION, '099.99')|| ', ');--NUMERICO 
    END IF;
    
    IF p_DIVISA_EXTRANJERA IS NOT NULL THEN
    flag_sent_correc:=1;    
    v_query:=CONCAT(v_query,' DIVISA_EXTRANJERA='||''''||p_DIVISA_EXTRANJERA||''''||', ');
    END IF;
    
    IF p_TASA_CAMBIO IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' TASA_CAMBIO='||to_char(p_TASA_CAMBIO, '099999.9999')|| ', ');--NUMERICO 
    END IF;
            
    IF P_NRO_OPE_DEBITO IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' NRO_OPE_DEBITO='||P_NRO_OPE_DEBITO|| ', ');--NUMERICO
    END IF;
    
    IF P_NRO_OPE_CREDITO IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' NRO_OPE_CREDITO='||P_NRO_OPE_CREDITO|| ', ');--NUMERICO
    END IF;

    IF P_UNDINV_ID IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' UNDINV_ID='||P_UNDINV_ID|| ', ');--NUMERICO
    END IF;                 
                 
    
       IF flag_sent_correc=0 THEN
       CRUD_MSJ_EXCEPTION:='Error Validacion: SP_ACTIALIZAR_SOLICITUD_DICOM  - No se ha ingresado ningun campo para ser modificado';
       RAISE CRUD_VALIDATION_EXCEPTION;       
       ELSE
       v_query:=CONCAT(v_query,' ESTATUS_REGISTRO=1 ');
       END IF;
       
    --v_query:=SUBSTR(v_query,0,(Length(v_query)-2));
    v_query:=CONCAT(v_query,' WHERE NRO_SOLICITUD='||''''||P_NRO_SOLICITUD||''''||' ');
    v_query:=CONCAT(v_query,' AND ID_JORNADA=' ||''''||P_NRO_JORNADA||''''||'');
       DBMS_OUTPUT.put_line('QUERY --> ' || v_query);                                                
    EXECUTE IMMEDIATE v_query;                
       EXCEPTION
          WHEN CRUD_VALIDATION_EXCEPTION THEN
          BEGIN
            RAISE CRUD_VALIDATION_EXCEPTION;
          END;
          WHEN OTHERS THEN  
          BEGIN  
          ROLLBACK;  
          CRUD_MSJ_EXCEPTION:='Error Inesperado: SP_ACTIALIZAR_SOLICITUD_DICOM '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
          RAISE CRUD_UNEXPECTED_EXCEPTION;
          END;             
                   
END SP_ACTIALIZAR_SOLICITUD_DICOM;     

  PROCEDURE SP_CREAR_UNIDAD_INVERSION (
          P_UNDINV_ID                    OUT  INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%type,            
          P_UNDINV_NOMBRE                   IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_NOMBRE%type,                   
          P_UNDINV_DESCRIPCION              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_DESCRIPCION%type,              
          P_INSFIN_ID                       IN  INFI_TB_106_UNIDAD_INVERSION.INSFIN_ID%type,                       
          P_UNDINV_EMISION                  IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_EMISION%type,                  
          P_UNDINV_SERIE                    IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_SERIE%type,                    
          P_UNDINV_TASA_CAMBIO              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_TASA_CAMBIO%type,              
          P_UNDINV_FE_EMISION               IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_EMISION%type,               
          P_UNDINV_IN_VTA_EMPLEADOS         IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_IN_VTA_EMPLEADOS%type,         
          P_TPPEVA_ID                       IN  INFI_TB_106_UNIDAD_INVERSION.TPPEVA_ID%type,                       
          P_UNDINV_PRECIO_MINIMO            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_PRECIO_MINIMO%type,            
          P_UNDINV_COMENTARIOS              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_COMENTARIOS%type,              
          P_UNDINV_DOC_BDV                  IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_DOC_BDV%type,                  
          P_UNDINV_DOC_EMISOR               IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_DOC_EMISOR%type,               
          P_UNDINV_FE_ADJUDICACION          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_ADJUDICACION%type,          
          P_UNDINV_FE_LIQUIDACION           IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_LIQUIDACION%type,           
          P_UNDINV_FE_CIERRE                IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_CIERRE%type,                
          P_UNDINV_IN_RECOMPRA_NETEO        IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_IN_RECOMPRA_NETEO%type,        
          P_MONEDA_ID                       IN  INFI_TB_106_UNIDAD_INVERSION.MONEDA_ID%type,                       
          P_UNDINV_UMI_INV_TOTAL            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_INV_TOTAL%type,            
          P_UNDINV_UMI_INV_MTO_MIN          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_INV_MTO_MIN%type,          
          P_UNDINV_UMI_INV_MTO_MAX          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_INV_MTO_MAX%type,          
          P_UNDINV_UMI_UM_CANT_MIN          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_UM_CANT_MIN%type,          
          P_UNDINV_UMI_UM_CANT_MAX          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_UM_CANT_MAX%type,          
          P_UNDINV_STATUS                   IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_STATUS%type,                   
          P_AUT_USUARIO_USERID              IN  INFI_TB_106_UNIDAD_INVERSION.AUT_USUARIO_USERID%type,              
          P_AUT_USUARIO_NOMBRE              IN  INFI_TB_106_UNIDAD_INVERSION.AUT_USUARIO_NOMBRE%type,              
          P_AUT_USUARIO_ROL_NOMBRE          IN  INFI_TB_106_UNIDAD_INVERSION.AUT_USUARIO_ROL_NOMBRE%type,          
          P_AUT_ESTACION                    IN  INFI_TB_106_UNIDAD_INVERSION.AUT_ESTACION%type,                    
          P_AUT_IP                          IN  INFI_TB_106_UNIDAD_INVERSION.AUT_IP%type,                          
          P_AUT_FECHA                       IN  INFI_TB_106_UNIDAD_INVERSION.AUT_FECHA%type,                       
          P_UPD_USUARIO_USERID              IN  INFI_TB_106_UNIDAD_INVERSION.UPD_USUARIO_USERID%type,              
          P_UPD_USUARIO_NOMBRE              IN  INFI_TB_106_UNIDAD_INVERSION.UPD_USUARIO_NOMBRE%type,              
          P_UPD_USUARIO_ROL_NOMBRE          IN  INFI_TB_106_UNIDAD_INVERSION.UPD_USUARIO_ROL_NOMBRE%type,          
          P_UPD_ESTACION                    IN  INFI_TB_106_UNIDAD_INVERSION.UPD_ESTACION%type,                    
          P_UPD_IP                          IN  INFI_TB_106_UNIDAD_INVERSION.UPD_IP%type,                          
          P_UPD_FECHA                       IN  INFI_TB_106_UNIDAD_INVERSION.UPD_FECHA%type,                       
          P_EMPRES_ID                       IN  INFI_TB_106_UNIDAD_INVERSION.EMPRES_ID%type,                       
          P_UNDINV_UMI_INV_DISPONIBLE       IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_INV_DISPONIBLE%type,       
          P_UNDINV_UMI_UNIDAD               IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_UNIDAD%type,               
          P_UNDINV_PCT_MAX_FINAN            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_PCT_MAX_FINAN%type,            
          P_UNDINV_PRECIO_MAXIMO            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_PRECIO_MAXIMO%type,            
          P_UNDINV_MULTIPLOS                IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_MULTIPLOS%type,                
          P_UNDINV_IN_PEDIDO_MONTO          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_IN_PEDIDO_MONTO%type,          
          P_UNDINV_TASA_POOL                IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_TASA_POOL%type,                
          P_UNDINV_RENDIMIENTO              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_RENDIMIENTO%type,              
          P_UNDINV_MERCADO                  IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_MERCADO%type,                  
          P_UNDINV_IN_PRECIO_SUCIO          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_IN_PRECIO_SUCIO%type,          
          P_UNDINV_FE_LIQUIDACION_HORA1     IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_LIQUIDACION_HORA1%type,     
          P_UNDINV_FE_LIQUIDACION_HORA2     IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_LIQUIDACION_HORA2%type,     
          P_PAGO_IN_BCV                     IN  INFI_TB_106_UNIDAD_INVERSION.PAGO_IN_BCV%type,                     
          P_IN_COBRO_BATCH_ADJ              IN  INFI_TB_106_UNIDAD_INVERSION.IN_COBRO_BATCH_ADJ%type,              
          P_IN_COBRO_BATCH_LIQ              IN  INFI_TB_106_UNIDAD_INVERSION.IN_COBRO_BATCH_LIQ%type,              
          P_DIAS_APERTURA_CUENTA            IN  INFI_TB_106_UNIDAD_INVERSION.DIAS_APERTURA_CUENTA%type,            
          P_INDC_PERMITE_CANCELACION        IN  INFI_TB_106_UNIDAD_INVERSION.INDC_PERMITE_CANCELACION%type,        
          P_UNDINV_ACTIVE                   IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_ACTIVE%type,                   
          --P_UNDINV_STATUS_CONCILIACION      IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_STATUS_CONCILIACION%type,                    
          P_MONTO_ACUMULADO_SOLIC           IN  INFI_TB_106_UNIDAD_INVERSION.MONTO_ACUMULADO_SOLIC%type,           
          P_TIPO_NEGOCIO                    IN  INFI_TB_106_UNIDAD_INVERSION.TIPO_NEGOCIO%type,                    
          P_NRO_JORNADA                     IN  INFI_TB_106_UNIDAD_INVERSION.NRO_JORNADA%type,                     
          P_UNDINV_PERIODO_VENTA            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_PERIODO_VENTA%type,            
          P_UNDINV_MULTIPLOS_EFECTIVO       IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_MULTIPLOS_EFECTIVO%type,       
          P_UNDINV_UMAX_UNIDAD              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMAX_UNIDAD%type,              
          P_UNDINV_TASA_CAMBIO_OFER         IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_TASA_CAMBIO_OFER%type,         
          P_COMISION_IGTF                   IN  INFI_TB_106_UNIDAD_INVERSION.COMISION_IGTF%type,                   
          P_TIPO_SOLICITUD                  IN  INFI_TB_106_UNIDAD_INVERSION.TIPO_SOLICITUD%type     
    )AS
    BEGIN
        NOMBRE_SP:='SP_CREAR_UNIDAD_INVERSION';
         
         IF P_INSFIN_ID IS NULL OR P_MONEDA_ID IS NULL OR P_UNDINV_STATUS IS NULL OR P_UPD_IP IS NULL OR P_EMPRES_ID IS NULL OR P_TIPO_SOLICITUD IS NULL THEN             
                MSJ_EXCEPTION:='Error Validacion: '|| NOMBRE_SP||'  - Campo NOT NULL ha sido pasado sin informacion';
                RAISE CRUD_VALIDATION_EXCEPTION;                   
            END IF;
            
        P_UNDINV_ID:=GET_SEQUENCE('INFI_TB_106_UNIDAD_INVERSION');

        INSERT INTO INFI_TB_106_UNIDAD_INVERSION(
            UNDINV_ID,                
            UNDINV_NOMBRE,              
            UNDINV_DESCRIPCION,         
            INSFIN_ID,                  
            UNDINV_EMISION,             
            UNDINV_SERIE,               
            UNDINV_TASA_CAMBIO,         
            UNDINV_FE_EMISION,          
            UNDINV_IN_VTA_EMPLEADOS,    
            TPPEVA_ID,                  
            UNDINV_PRECIO_MINIMO,       
            UNDINV_COMENTARIOS,         
            UNDINV_DOC_BDV,             
            UNDINV_DOC_EMISOR,          
            UNDINV_FE_ADJUDICACION,     
            UNDINV_FE_LIQUIDACION,      
            UNDINV_FE_CIERRE,           
            UNDINV_IN_RECOMPRA_NETEO,   
            MONEDA_ID,                  
            UNDINV_UMI_INV_TOTAL,       
            UNDINV_UMI_INV_MTO_MIN,     
            UNDINV_UMI_INV_MTO_MAX,     
            UNDINV_UMI_UM_CANT_MIN,     
            UNDINV_UMI_UM_CANT_MAX,     
            UNDINV_STATUS,              
            AUT_USUARIO_USERID,         
            AUT_USUARIO_NOMBRE,         
            AUT_USUARIO_ROL_NOMBRE,     
            AUT_ESTACION,               
            AUT_IP,                     
            AUT_FECHA,                  
            UPD_USUARIO_USERID,         
            UPD_USUARIO_NOMBRE,         
            UPD_USUARIO_ROL_NOMBRE,     
            UPD_ESTACION,               
            UPD_IP,                     
            UPD_FECHA,                  
            EMPRES_ID,                  
            UNDINV_UMI_INV_DISPONIBLE,  
            UNDINV_UMI_UNIDAD,          
            UNDINV_PCT_MAX_FINAN,       
            UNDINV_PRECIO_MAXIMO,       
            UNDINV_MULTIPLOS,           
            UNDINV_IN_PEDIDO_MONTO,     
            UNDINV_TASA_POOL,           
            UNDINV_RENDIMIENTO,         
            UNDINV_MERCADO,             
            UNDINV_IN_PRECIO_SUCIO,     
            UNDINV_FE_LIQUIDACION_HORA1,
            UNDINV_FE_LIQUIDACION_HORA2,
            PAGO_IN_BCV,                
            IN_COBRO_BATCH_ADJ,         
            IN_COBRO_BATCH_LIQ,         
            DIAS_APERTURA_CUENTA,       
            INDC_PERMITE_CANCELACION,   
            UNDINV_ACTIVE,              
           -- UNDINV_STATUS_CONCILIACION,            
            MONTO_ACUMULADO_SOLIC,      
            TIPO_NEGOCIO,               
            NRO_JORNADA,                
            UNDINV_PERIODO_VENTA,       
            UNDINV_MULTIPLOS_EFECTIVO,  
            UNDINV_UMAX_UNIDAD,         
            UNDINV_TASA_CAMBIO_OFER,    
            COMISION_IGTF,              
            TIPO_SOLICITUD)
    VALUES (
          P_UNDINV_ID,                              
          P_UNDINV_NOMBRE,              
          P_UNDINV_DESCRIPCION,         
          P_INSFIN_ID,                  
          P_UNDINV_EMISION,             
          P_UNDINV_SERIE,               
          P_UNDINV_TASA_CAMBIO,         
          P_UNDINV_FE_EMISION,          
          P_UNDINV_IN_VTA_EMPLEADOS,    
          P_TPPEVA_ID,                  
          P_UNDINV_PRECIO_MINIMO,       
          P_UNDINV_COMENTARIOS,         
          P_UNDINV_DOC_BDV,             
          P_UNDINV_DOC_EMISOR,          
          P_UNDINV_FE_ADJUDICACION,     
          P_UNDINV_FE_LIQUIDACION,      
          P_UNDINV_FE_CIERRE,           
          P_UNDINV_IN_RECOMPRA_NETEO,   
          P_MONEDA_ID,                  
          P_UNDINV_UMI_INV_TOTAL,       
          P_UNDINV_UMI_INV_MTO_MIN,     
          P_UNDINV_UMI_INV_MTO_MAX,     
          P_UNDINV_UMI_UM_CANT_MIN,     
          P_UNDINV_UMI_UM_CANT_MAX,     
          P_UNDINV_STATUS,              
          P_AUT_USUARIO_USERID,         
          P_AUT_USUARIO_NOMBRE,         
          P_AUT_USUARIO_ROL_NOMBRE,     
          P_AUT_ESTACION,               
          P_AUT_IP,                     
          P_AUT_FECHA,                  
          P_UPD_USUARIO_USERID,         
          P_UPD_USUARIO_NOMBRE,         
          P_UPD_USUARIO_ROL_NOMBRE,     
          P_UPD_ESTACION,               
          P_UPD_IP,                     
          P_UPD_FECHA,                  
          P_EMPRES_ID,                  
          P_UNDINV_UMI_INV_DISPONIBLE,  
          P_UNDINV_UMI_UNIDAD,          
          P_UNDINV_PCT_MAX_FINAN,       
          P_UNDINV_PRECIO_MAXIMO,       
          P_UNDINV_MULTIPLOS,           
          P_UNDINV_IN_PEDIDO_MONTO,     
          P_UNDINV_TASA_POOL,           
          P_UNDINV_RENDIMIENTO,         
          P_UNDINV_MERCADO,             
          P_UNDINV_IN_PRECIO_SUCIO,     
          P_UNDINV_FE_LIQUIDACION_HORA1,
          P_UNDINV_FE_LIQUIDACION_HORA2,
          P_PAGO_IN_BCV,                
          P_IN_COBRO_BATCH_ADJ,         
          P_IN_COBRO_BATCH_LIQ,         
          P_DIAS_APERTURA_CUENTA,       
          P_INDC_PERMITE_CANCELACION,   
          P_UNDINV_ACTIVE,              
         -- P_UNDINV_STATUS_CONCILIACION,           
          P_MONTO_ACUMULADO_SOLIC,      
          P_TIPO_NEGOCIO,               
          P_NRO_JORNADA,                
          P_UNDINV_PERIODO_VENTA,       
          P_UNDINV_MULTIPLOS_EFECTIVO,  
          P_UNDINV_UMAX_UNIDAD,         
          P_UNDINV_TASA_CAMBIO_OFER,    
          P_COMISION_IGTF,              
          P_TIPO_SOLICITUD         
          ); 
                      
     EXCEPTION 
            WHEN CRUD_VALIDATION_EXCEPTION  THEN
            BEGIN                
                raise_application_error(-20001,'Validacion: '|| NOMBRE_SP||' : '||MSJ_EXCEPTION);
            END;  
            WHEN OTHERS THEN
            BEGIN
            MSJ_EXCEPTION:='Error Inesperado: '|| NOMBRE_SP||' '||' SQLERRM ' ||SQLERRM ||' SQLCODE ' ||SQLCODE;
            RAISE CRUD_UNEXPECTED_EXCEPTION;
            END;
    
    END SP_CREAR_UNIDAD_INVERSION;
    
    PROCEDURE SP_CREAR_UI_TITULOS (
            P_UNDINV_ID            IN    INFI_TB_108_UI_TITULOS.UNDINV_ID%type,             
            P_TITULO_ID            IN    INFI_TB_108_UI_TITULOS.TITULO_ID%type,             
            P_UITITU_PORCENTAJE        IN    INFI_TB_108_UI_TITULOS.UITITU_PORCENTAJE%type,         
            P_UITITU_VALOR_EQUIVALENTE    IN    INFI_TB_108_UI_TITULOS.UITITU_VALOR_EQUIVALENTE%type,     
            P_UITITU_IN_CONIDB        IN    INFI_TB_108_UI_TITULOS.UITITU_IN_CONIDB%type,         
            P_UITITU_IN_CONTROL_DISPONIBLE    IN    INFI_TB_108_UI_TITULOS.UITITU_IN_CONTROL_DISPONIBLE%type
        )AS
        BEGIN
            NOMBRE_SP:='SP_CREAR_UI_TITULOS';
             IF P_UNDINV_ID IS NULL OR P_TITULO_ID IS NULL OR  P_UITITU_PORCENTAJE IS NULL THEN                     
                MSJ_EXCEPTION:='Error Validacion: '|| NOMBRE_SP||'  - Campo NOT NULL ha sido pasado sin informacion';
                RAISE CRUD_VALIDATION_EXCEPTION;                   
            END IF;

             INSERT INTO INFI_TB_108_UI_TITULOS (
                UNDINV_ID,                 
                TITULO_ID,                    
                UITITU_PORCENTAJE,        
                UITITU_VALOR_EQUIVALENTE,     
                UITITU_IN_CONIDB,                          
                UITITU_IN_CONTROL_DISPONIBLE    
            )VALUES(
                P_UNDINV_ID,                 
                P_TITULO_ID,                    
                P_UITITU_PORCENTAJE,        
                P_UITITU_VALOR_EQUIVALENTE,     
                P_UITITU_IN_CONIDB,                          
                P_UITITU_IN_CONTROL_DISPONIBLE              
            );
        EXCEPTION 
            WHEN CRUD_VALIDATION_EXCEPTION  THEN
            BEGIN                
                raise_application_error(-20001,'Validacion: '|| NOMBRE_SP||' : '||MSJ_EXCEPTION);
            END; 
            WHEN OTHERS THEN
            BEGIN
            ROLLBACK;  
            MSJ_EXCEPTION:='Error Inesperado: '|| NOMBRE_SP||' '||' SQLERRM ' ||SQLERRM ||' SQLCODE ' ||SQLCODE;
            RAISE CRUD_UNEXPECTED_EXCEPTION;
            END;
            
    END SP_CREAR_UI_TITULOS;
    
    PROCEDURE SP_CREAR_UI_EMPRESA (
        P_UNDINV_ID        IN    INFI_TB_109_UI_EMPRESAS.UNDINV_ID%type,            
        P_EMPRES_ID        IN    INFI_TB_109_UI_EMPRESAS.EMPRES_ID%type,        
        P_ROLES_ID        IN    INFI_TB_109_UI_EMPRESAS.ROLES_ID%type,        
        P_UIEMPR_CONTACTO_NOM    IN    INFI_TB_109_UI_EMPRESAS.UIEMPR_CONTACTO_NOM%type,     
        P_UIEMPR_CONTACTO_TLF    IN    INFI_TB_109_UI_EMPRESAS.UIEMPR_CONTACTO_TLF%type
)AS
BEGIN
    NOMBRE_SP:='SP_CREAR_UI_EMPRESA';
    IF P_UNDINV_ID IS NULL OR P_EMPRES_ID IS NULL THEN                     
        MSJ_EXCEPTION:='Error Validacion: '|| NOMBRE_SP||'  - Campo NOT NULL ha sido pasado sin informacion';
        RAISE CRUD_VALIDATION_EXCEPTION;                   
    END IF;    

    INSERT INTO INFI_TB_109_UI_EMPRESAS(
        UNDINV_ID,
        EMPRES_ID,
        ROLES_ID,
        UIEMPR_CONTACTO_NOM,
        UIEMPR_CONTACTO_TLF
        )
        VALUES (
        P_UNDINV_ID,             
        P_EMPRES_ID,
        P_ROLES_ID,
        P_UIEMPR_CONTACTO_NOM,
        P_UIEMPR_CONTACTO_TLF                
        );

EXCEPTION 
    WHEN CRUD_VALIDATION_EXCEPTION  THEN
    BEGIN                
        raise_application_error(-20001,'Validacion: '|| NOMBRE_SP||' : '||MSJ_EXCEPTION);
    END; 
    WHEN OTHERS THEN
    BEGIN
    ROLLBACK;  
    MSJ_EXCEPTION:='Error Inesperado: '|| NOMBRE_SP||' '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
    RAISE CRUD_UNEXPECTED_EXCEPTION;
    END;
    
END SP_CREAR_UI_EMPRESA;

PROCEDURE SP_CREAR_UI_BLOTTER (
    P_UNDINV_ID                     IN INFI_TB_107_UI_BLOTTER.UNDINV_ID%type,                   
    P_BLOTER_ID                     IN INFI_TB_107_UI_BLOTTER.BLOTER_ID%type,                   
    P_UIBLOT_IN_DISPONIBLE          IN INFI_TB_107_UI_BLOTTER.UIBLOT_IN_DISPONIBLE%type,        
    P_UIBLOT_HORARIO_DESDE          IN INFI_TB_107_UI_BLOTTER.UIBLOT_HORARIO_DESDE%type,        
    P_UIBLOT_HORARIO_HASTA          IN INFI_TB_107_UI_BLOTTER.UIBLOT_HORARIO_HASTA%type,        
    P_UIBLOT_PEDIDO_FE_INI          IN INFI_TB_107_UI_BLOTTER.UIBLOT_PEDIDO_FE_INI%type,        
    P_UIBLOT_PEDIDO_FE_FIN          IN INFI_TB_107_UI_BLOTTER.UIBLOT_PEDIDO_FE_FIN%type,        
    P_UIBLOT_SERIAL_COMISIONES      IN INFI_TB_107_UI_BLOTTER.UIBLOT_SERIAL_COMISIONES%type,    
    P_UIBLOT_SERIAL_CAPITAL         IN INFI_TB_107_UI_BLOTTER.UIBLOT_SERIAL_CAPITAL%type,       
    P_TPPEVA_ID                     IN INFI_TB_107_UI_BLOTTER.TPPEVA_ID%type,                   
    P_CTESEG_ID                     IN INFI_TB_107_UI_BLOTTER.CTESEG_ID%type,                   
    P_UIBLOT_IN_DEFECTO             IN INFI_TB_107_UI_BLOTTER.UIBLOT_IN_DEFECTO%type,           
    P_UIBLOT_IN_TESORERIA           IN INFI_TB_107_UI_BLOTTER.UIBLOT_IN_TESORERIA%type,         
    P_UIBLOT_HORARIO_DESDE_ULT_DIA  IN INFI_TB_107_UI_BLOTTER.UIBLOT_HORARIO_DESDE_ULT_DIA%type,
    P_UIBLOT_HORARIO_HASTA_ULT_DIA  IN INFI_TB_107_UI_BLOTTER.UIBLOT_HORARIO_HASTA_ULT_DIA%type,
    P_UIBLOT_GANANCIA_RED           IN INFI_TB_107_UI_BLOTTER.UIBLOT_GANANCIA_RED%type,         
    P_UIBLOT_IN_RECOMPRA            IN INFI_TB_107_UI_BLOTTER.UIBLOT_IN_RECOMPRA%type          
)AS
BEGIN
    NOMBRE_SP:='SP_CREAR_UI_BLOTTER';
    IF P_UNDINV_ID IS NULL OR P_BLOTER_ID IS NULL OR P_UIBLOT_HORARIO_DESDE IS NULL OR P_UIBLOT_HORARIO_HASTA IS NULL OR P_UIBLOT_PEDIDO_FE_INI IS NULL OR P_UIBLOT_PEDIDO_FE_FIN IS NULL THEN                     
        MSJ_EXCEPTION:='Error Validacion: '|| NOMBRE_SP||'  - Campo NOT NULL ha sido pasado sin informacion';
        RAISE CRUD_VALIDATION_EXCEPTION;                   
    END IF;    

    INSERT INTO INFI_TB_107_UI_BLOTTER(
        UNDINV_ID,                   
        BLOTER_ID,                   
        UIBLOT_IN_DISPONIBLE,        
        UIBLOT_HORARIO_DESDE,        
        UIBLOT_HORARIO_HASTA,        
        UIBLOT_PEDIDO_FE_INI,        
        UIBLOT_PEDIDO_FE_FIN,        
        UIBLOT_SERIAL_COMISIONES,    
        UIBLOT_SERIAL_CAPITAL,       
        TPPEVA_ID,                   
        CTESEG_ID,                   
        UIBLOT_IN_DEFECTO,           
        UIBLOT_IN_TESORERIA,         
        UIBLOT_HORARIO_DESDE_ULT_DIA,
        UIBLOT_HORARIO_HASTA_ULT_DIA,
        UIBLOT_GANANCIA_RED,         
        UIBLOT_IN_RECOMPRA   
    ) VALUES (
        P_UNDINV_ID,                   
        P_BLOTER_ID,                   
        P_UIBLOT_IN_DISPONIBLE,        
        P_UIBLOT_HORARIO_DESDE,        
        P_UIBLOT_HORARIO_HASTA,        
        P_UIBLOT_PEDIDO_FE_INI,        
        P_UIBLOT_PEDIDO_FE_FIN,        
        P_UIBLOT_SERIAL_COMISIONES,    
        P_UIBLOT_SERIAL_CAPITAL,       
        P_TPPEVA_ID,                   
        P_CTESEG_ID,                   
        P_UIBLOT_IN_DEFECTO,           
        P_UIBLOT_IN_TESORERIA,         
        P_UIBLOT_HORARIO_DESDE_ULT_DIA,
        P_UIBLOT_HORARIO_HASTA_ULT_DIA,
        P_UIBLOT_GANANCIA_RED,         
        P_UIBLOT_IN_RECOMPRA 
    );              
        
EXCEPTION
    WHEN CRUD_VALIDATION_EXCEPTION  THEN
    BEGIN                
        raise_application_error(-20001,'Validacion: '|| NOMBRE_SP||' : '||MSJ_EXCEPTION);
    END;  
    WHEN OTHERS THEN
    BEGIN
    ROLLBACK;  
    MSJ_EXCEPTION:='Error Inesperado: '|| NOMBRE_SP||' '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
    RAISE CRUD_UNEXPECTED_EXCEPTION;
    END;
        
END SP_CREAR_UI_BLOTTER;

PROCEDURE SP_CREAR_SOLICITUD_DICOM (
    P_NRO_SOLICITUD            IN SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
    P_TIPO_OPERACION           IN SOLICITUDES_DICOM.TIPO_OPERACION%TYPE,
    P_TIPO_CLIENTE             IN SOLICITUDES_DICOM.TIPO_CLIENTE%TYPE,
    P_CED_RIF                  IN SOLICITUDES_DICOM.CED_RIF%TYPE,
    P_NOMBRE_CLIENTE           IN SOLICITUDES_DICOM.NOMBRE_CLIENTE%TYPE,
    P_TELEFONO_CLIENTE         IN SOLICITUDES_DICOM.TELEFONO_CLIENTE%TYPE,
    P_CORREO_CLIENTE           IN SOLICITUDES_DICOM.CORREO_CLIENTE%TYPE,
    P_NRO_CTA_NACIONAL         IN SOLICITUDES_DICOM.NRO_CTA_NACIONAL%TYPE,
    P_NRO_RET_CAPITAL          IN SOLICITUDES_DICOM.NRO_RET_CAPITAL%TYPE,
    P_HORA_BLOQ                IN SOLICITUDES_DICOM.HORA_BLOQ%TYPE,
    P_MONTO_OP_NACIONAL        IN SOLICITUDES_DICOM.MONTO_OP_NACIONAL%TYPE,
    P_DIVISA_NACIONAL          IN SOLICITUDES_DICOM.DIVISA_NACIONAL%TYPE,
    P_NRO_RET_COMISION         IN SOLICITUDES_DICOM.NRO_RET_COMISION%TYPE,
    P_MONTO_COMISION           IN SOLICITUDES_DICOM.MONTO_COMISION%TYPE,
    P_PORC_COMISION            IN SOLICITUDES_DICOM.PORC_COMISION%TYPE,
    P_FECHA_OPERACION          IN SOLICITUDES_DICOM.FECHA_OPERACION%TYPE,
    P_NRO_CTA_EXTRANJERA       IN SOLICITUDES_DICOM.NRO_CTA_EXTRANJERA%TYPE,
    P_MONTO_OP_EXTRANJERA      IN SOLICITUDES_DICOM.MONTO_OP_EXTRANJERA%TYPE,
    P_DIVISA_EXTRANJERA        IN SOLICITUDES_DICOM.DIVISA_EXTRANJERA%TYPE,
    P_TASA_CAMBIO              IN SOLICITUDES_DICOM.TASA_CAMBIO%TYPE,
    P_FECHA_VALOR_OPERACION    IN SOLICITUDES_DICOM.FECHA_VALOR_OPERACION%TYPE,
    P_CODIGO_RESPUESTA         IN SOLICITUDES_DICOM.CODIGO_RESPUESTA%TYPE,
    P_NRO_OPE_DEBITO           IN SOLICITUDES_DICOM.NRO_OPE_DEBITO%TYPE,
    P_NRO_OPE_CREDITO          IN SOLICITUDES_DICOM.NRO_OPE_CREDITO%TYPE,
    P_ESTATUS_REGISTRO         IN SOLICITUDES_DICOM.ESTATUS_REGISTRO%TYPE,
    P_ESTATUS_NOTIFICACION_WS  IN SOLICITUDES_DICOM.ESTATUS_NOTIFICACION_WS%TYPE,
    P_ID_JORNADA               IN SOLICITUDES_DICOM.ID_JORNADA%TYPE,
    P_UNDINV_ID                IN SOLICITUDES_DICOM.UNDINV_ID%TYPE)
AS
BEGIN

    NOMBRE_SP:='SP_CREAR_SOLICITUD_DICOM';
         
    --IF  P_NRO_SOLICITUD IS NULL OR P_TIPO_OPERACION IS NULL OR P_TIPO_CLIENTE IS NULL OR P_NRO_CTA_NACIONAL IS NULL OR P_NRO_CTA_EXTRANJERA IS NULL OR P_ESTATUS_REGISTRO IS NULL THEN             
    IF  P_NRO_SOLICITUD IS NULL OR P_ESTATUS_REGISTRO IS NULL THEN             
        MSJ_EXCEPTION:='Error Validacion: '|| NOMBRE_SP||'  - Campo NOT NULL ha sido pasado sin informacion';
        RAISE CRUD_VALIDATION_EXCEPTION;                   
    END IF;

     INSERT INTO SOLICITUDES_DICOM(
         NRO_SOLICITUD,          
        TIPO_OPERACION,         
        TIPO_CLIENTE,           
        CED_RIF,                
        NOMBRE_CLIENTE,         
        TELEFONO_CLIENTE,       
        CORREO_CLIENTE,         
        NRO_CTA_NACIONAL,       
        NRO_RET_CAPITAL,        
        HORA_BLOQ,              
        MONTO_OP_NACIONAL,      
        DIVISA_NACIONAL,        
        NRO_RET_COMISION,       
        MONTO_COMISION,         
        PORC_COMISION,          
        FECHA_OPERACION,        
        NRO_CTA_EXTRANJERA,     
        MONTO_OP_EXTRANJERA,    
        DIVISA_EXTRANJERA,      
        TASA_CAMBIO,            
        FECHA_VALOR_OPERACION,  
        CODIGO_RESPUESTA,       
        NRO_OPE_DEBITO,         
        NRO_OPE_CREDITO,        
        ESTATUS_REGISTRO,       
        ESTATUS_NOTIFICACION_WS,
        ID_JORNADA,             
        UNDINV_ID )
     VALUES (
         P_NRO_SOLICITUD,          
        P_TIPO_OPERACION,         
        P_TIPO_CLIENTE,           
        P_CED_RIF,                
        P_NOMBRE_CLIENTE,         
        P_TELEFONO_CLIENTE,       
        P_CORREO_CLIENTE,         
        P_NRO_CTA_NACIONAL,       
        P_NRO_RET_CAPITAL,        
        P_HORA_BLOQ,              
        P_MONTO_OP_NACIONAL,      
        P_DIVISA_NACIONAL,        
        P_NRO_RET_COMISION,       
        P_MONTO_COMISION,         
        P_PORC_COMISION,          
        P_FECHA_OPERACION,        
        P_NRO_CTA_EXTRANJERA,     
        P_MONTO_OP_EXTRANJERA,    
        P_DIVISA_EXTRANJERA,      
        P_TASA_CAMBIO,            
        P_FECHA_VALOR_OPERACION,  
        P_CODIGO_RESPUESTA,       
        P_NRO_OPE_DEBITO,         
        P_NRO_OPE_CREDITO,        
        P_ESTATUS_REGISTRO,       
        P_ESTATUS_NOTIFICACION_WS,
        P_ID_JORNADA,             
        P_UNDINV_ID             
      );    
            
    EXCEPTION 
            WHEN CRUD_VALIDATION_EXCEPTION  THEN
            BEGIN                
                raise_application_error(-20001,'Validacion: '|| NOMBRE_SP||' : '||MSJ_EXCEPTION);
            END;  
            WHEN OTHERS THEN
            BEGIN
            MSJ_EXCEPTION:='Error Inesperado: '|| NOMBRE_SP||' '||' SQLERRM ' ||SQLERRM ||' SQLCODE ' ||SQLCODE;
            RAISE CRUD_UNEXPECTED_EXCEPTION;
            END;
END SP_CREAR_SOLICITUD_DICOM;  
        FUNCTION GET_SEQUENCE (
        P_TABLE_NAME SEQUENCE_NUMBERS.TABLE_NAME%type
    )
    RETURN SEQUENCE_NUMBERS.NEXT_ID%TYPE IS
    ID_SEQUENCE NUMBER;
    /******************************************************************************
       NAME:       GET_SEQUENCE 
       PURPOSE:    Funcion creada para obtener la secuencia (id) de tabla a insertar
                    Se realiza de esta manera para no cambiar el esquema de manejo de
                    secuencias usado en la aplicación 

       REVISIONS:
       Ver        Date        Author           Description
       ---------  ----------  ---------------  ------------------------------------
       1.0        18/05/2017          1. Created this function.

       NOTES:

       Automatically available Auto Replace Keywords:
          Object Name:     GET_SEQUENCE
          Sysdate:         18/05/2017
          Date and Time:   18/05/2017, 04:10:45 p.m., and 18/05/2017 04:10:45 p.m.
          Username:         NM25287 
          Table Name:       SEQUENCE_NUMBERS 

    ******************************************************************************/
    BEGIN
       ID_SEQUENCE := 0;
       
       UPDATE SEQUENCE_NUMBERS 
        SET NEXT_ID = NEXT_ID + 1 
        WHERE TABLE_NAME = P_TABLE_NAME;
             
       SELECT NEXT_ID 
        INTO ID_SEQUENCE
        FROM SEQUENCE_NUMBERS 
        WHERE TABLE_NAME = P_TABLE_NAME;
       
       RETURN ID_SEQUENCE;
       EXCEPTION
         WHEN NO_DATA_FOUND THEN
         BEGIN
         --DBMS_OUTPUT.PUT_LINE('ERROR GET SEQ '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE);
           RAISE;
         END;
         WHEN OTHERS THEN
          BEGIN
         --DBMS_OUTPUT.PUT_LINE('OTHERS ERROR GET SEQ '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE);
           RAISE;
         END;
    END GET_SEQUENCE;
                                                        
                                                 

END PK_INFI_CRUD_F2;
/


CREATE OR REPLACE PACKAGE BODY ADM_INFI.PK_INFI_CRUD_RESP_IGTF
IS
--
-- To modify this template, edit file PKGBODY.TXT in TEMPLATE 
-- directory of SQL Navigator
--
-- Purpose: Briefly explain the functionality of the package body
--
-- MODIFICATION HISTORY
-- Person      Date    Comments
-- ---------   ------  ------------------------------------------      
   -- Enter procedure, function bodies as shown below

   PROCEDURE SP_CREAR_ORDEN(p_UNIINV_ID               IN INFI_TB_204_ORDENES.UNIINV_ID%TYPE,
                                                      p_CLIENT_ID               IN INFI_TB_204_ORDENES.CLIENT_ID%TYPE,
                                                      p_ORDSTA_ID               IN INFI_TB_204_ORDENES.ORDSTA_ID%TYPE,
                                                      p_SISTEMA_ID              IN INFI_TB_204_ORDENES.SISTEMA_ID%TYPE,
                                                      p_EMPRES_ID               IN INFI_TB_204_ORDENES.EMPRES_ID%TYPE,
                                                      p_CONTRAPARTE             IN INFI_TB_204_ORDENES.CONTRAPARTE%TYPE,
                                                      p_TRANSA_ID               IN INFI_TB_204_ORDENES.TRANSA_ID%TYPE,
                                                      p_ENVIADO                 IN INFI_TB_204_ORDENES.ENVIADO%TYPE,
                                                      p_ORDENE_CTE_SEG_BCO      IN INFI_TB_204_ORDENES.ORDENE_CTE_SEG_BCO%TYPE,
                                                      p_ORDENE_CTE_SEG_SEG      IN INFI_TB_204_ORDENES.ORDENE_CTE_SEG_SEG%TYPE,
                                                      p_ORDENE_CTE_SEG_SUB      IN INFI_TB_204_ORDENES.ORDENE_CTE_SEG_SUB%TYPE,
                                                      p_ORDENE_CTE_SEG_INFI     IN INFI_TB_204_ORDENES.ORDENE_CTE_SEG_INFI%TYPE,
                                                      p_ORDENE_PED_FE_ORDEN     IN INFI_TB_204_ORDENES.ORDENE_PED_FE_ORDEN%TYPE,
                                                      p_ORDENE_PED_FE_VALOR     IN INFI_TB_204_ORDENES.ORDENE_PED_FE_VALOR%TYPE,
                                                      p_ORDENE_PED_MONTO        IN INFI_TB_204_ORDENES.ORDENE_PED_MONTO%TYPE,
                                                      p_ORDENE_PED_TOTAL_PEND   IN INFI_TB_204_ORDENES.ORDENE_PED_TOTAL_PEND%TYPE,
                                                      p_ORDENE_PED_TOTAL        IN INFI_TB_204_ORDENES.ORDENE_PED_TOTAL%TYPE,
                                                      p_ORDENE_PED_INT_CAIDOS   IN INFI_TB_204_ORDENES.ORDENE_PED_INT_CAIDOS%TYPE,
                                                      p_BLOTER_ID               IN INFI_TB_204_ORDENES.BLOTER_ID%TYPE,
                                                      p_ORDENE_PED_CTA_BSNRO    IN INFI_TB_204_ORDENES.ORDENE_PED_CTA_BSNRO%TYPE,
                                                      p_ORDENE_PED_CTA_BSTIP    IN INFI_TB_204_ORDENES.ORDENE_PED_CTA_BSTIP%TYPE,
                                                      p_CTECTA_NUMERO           IN INFI_TB_204_ORDENES.CTECTA_NUMERO%TYPE,
                                                      p_ORDENE_PED_PRECIO       IN INFI_TB_204_ORDENES.ORDENE_PED_PRECIO%TYPE,
                                                      p_ORDENE_PED_RENDIMIENTO  IN INFI_TB_204_ORDENES.ORDENE_PED_RENDIMIENTO%TYPE,
                                                      p_ORDENE_PED_IN_BDV       IN INFI_TB_204_ORDENES.ORDENE_PED_IN_BDV%TYPE,
                                                      p_MONEDA_ID               IN INFI_TB_204_ORDENES.MONEDA_ID%TYPE,
                                                      p_ORDENE_PED_RCP_PRECIO   IN INFI_TB_204_ORDENES.ORDENE_PED_RCP_PRECIO%TYPE,
                                                      p_ORDENE_ADJ_MONTO        IN INFI_TB_204_ORDENES.ORDENE_ADJ_MONTO%TYPE,
                                                      p_ORDENE_USR_NOMBRE       IN INFI_TB_204_ORDENES.ORDENE_USR_NOMBRE%TYPE,
                                                      p_ORDENE_USR_CEN_CONTABLE IN INFI_TB_204_ORDENES.ORDENE_USR_CEN_CONTABLE%TYPE,
                                                      p_ORDENE_USR_SUCURSAL     IN INFI_TB_204_ORDENES.ORDENE_USR_SUCURSAL%TYPE,
                                                      p_ORDENE_USR_TERMINAL     IN INFI_TB_204_ORDENES.ORDENE_USR_TERMINAL%TYPE,
                                                      p_ORDENE_VEH_TOM          IN INFI_TB_204_ORDENES.ORDENE_VEH_TOM%TYPE,
                                                      p_ORDENE_VEH_COL          IN INFI_TB_204_ORDENES.ORDENE_VEH_COL%TYPE,
                                                      p_ORDENE_VEH_REC          IN INFI_TB_204_ORDENES.ORDENE_VEH_REC%TYPE,
                                                      p_ORDENE_EJEC_ID          IN INFI_TB_204_ORDENES.ORDENE_EJEC_ID%TYPE,
                                                      p_ORDENE_FE_ULT_ACT       IN INFI_TB_204_ORDENES.ORDENE_FE_ULT_ACT%TYPE,
                                                      p_ORDENE_PED_COMISIONES   IN INFI_TB_204_ORDENES.ORDENE_PED_COMISIONES%TYPE,
                                                      p_ORDENE_FINANCIADO       IN INFI_TB_204_ORDENES.ORDENE_FINANCIADO%TYPE,
                                                      p_EJECUCION_ID            IN INFI_TB_204_ORDENES.EJECUCION_ID%TYPE,
                                                      p_ORDENE_TASA_POOL        IN INFI_TB_204_ORDENES.ORDENE_TASA_POOL%TYPE,
                                                      p_ORDENE_GANANCIA_RED     IN INFI_TB_204_ORDENES.ORDENE_GANANCIA_RED%TYPE,
                                                      p_ORDENE_COMISION_OFICINA IN INFI_TB_204_ORDENES.ORDENE_COMISION_OFICINA%TYPE,
                                                      p_ORDENE_COMISION_OPERACION  IN INFI_TB_204_ORDENES.ORDENE_COMISION_OPERACION%TYPE,
                                                      p_ORDENE_OPERAC_PEND         IN INFI_TB_204_ORDENES.ORDENE_OPERAC_PEND%TYPE,
                                                      p_ORDENE_ID_RELACION         IN INFI_TB_204_ORDENES.ORDENE_ID_RELACION%TYPE,
                                                      p_ORDENE_TASA_CAMBIO         IN INFI_TB_204_ORDENES.ORDENE_TASA_CAMBIO%TYPE,
                                                      p_CONCEPTO_ID                IN INFI_TB_204_ORDENES.CONCEPTO_ID%TYPE,
                                                      p_ORDENE_OBSERVACION         IN INFI_TB_204_ORDENES.ORDENE_OBSERVACION%TYPE,
                                                      p_TIPO_PRODUCTO_ID           IN INFI_TB_204_ORDENES.TIPO_PRODUCTO_ID%TYPE,
                                                      p_CTA_ABONO                  IN INFI_TB_204_ORDENES.CTA_ABONO%TYPE,
                                                      p_PORC_COMISION_IGTF         IN INFI_TB_204_ORDENES.ORDENE_PED_PORC_COMISION_IGTF%TYPE,
                                                      p_COMISION_IGTF              IN INFI_TB_204_ORDENES.ORDENE_PED_COMISION_IGTF%TYPE,
                                                      p_ORDENE_ID                  OUT INFI_TB_204_ORDENES.ORDENE_ID%TYPE

) AS

BEGIN 
    
            IF P_CLIENT_ID IS NULL OR P_ORDSTA_ID IS NULL OR P_TRANSA_ID IS NULL OR P_ORDENE_PED_FE_ORDEN IS NULL OR P_ORDENE_PED_FE_VALOR IS NULL OR P_ORDENE_PED_IN_BDV IS NULL THEN--OR  P_ORDENE_ESTATUS_BCV IS NULL OR P_ORDENE_IDBCV THEN                      
                CRUD_MSJ_EXCEPTION:='Error Validacion: SP_CREAR_ORDEN  - Campo NOT NULL h sido pasado sin informacion';
                RAISE CRUD_VALIDATION_EXCEPTION;                   
            END IF;
                        v_secuencia_ordenes:=GET_SEQUENCE('INFI_TB_204_ORDENES');--BUSQUEDA DE ID DE NUEVA ORDEN
                        p_ORDENE_ID:=v_secuencia_ordenes;
                                   
                        INSERT INTO INFI_TB_204_ORDENES (ORDENE_ID,
                                                         UNIINV_ID,
                                                         CLIENT_ID,
                                                         ORDSTA_ID, 
                                                         SISTEMA_ID,
                                                         EMPRES_ID,
                                                         CONTRAPARTE,
                                                         TRANSA_ID,
                                                         ENVIADO,
                                                         ORDENE_CTE_SEG_BCO,
                                                         ORDENE_CTE_SEG_SEG, 
                                                         ORDENE_CTE_SEG_SUB,
                                                         ORDENE_CTE_SEG_INFI,
                                                         ORDENE_PED_FE_ORDEN,
                                                         ORDENE_PED_FE_VALOR, 
                                                         ORDENE_PED_MONTO,
                                                         ORDENE_PED_TOTAL_PEND,
                                                         ORDENE_PED_TOTAL,
                                                         ORDENE_PED_INT_CAIDOS,
                                                         BLOTER_ID, 
                                                         ORDENE_PED_CTA_BSNRO,
                                                         ORDENE_PED_CTA_BSTIP,
                                                         CTECTA_NUMERO,
                                                         ORDENE_PED_PRECIO, 
                                                         ORDENE_PED_RENDIMIENTO,
                                                         ORDENE_PED_IN_BDV,
                                                         MONEDA_ID,
                                                         ORDENE_PED_RCP_PRECIO,
                                                         ORDENE_ADJ_MONTO, 
                                                         ORDENE_USR_NOMBRE,
                                                         ORDENE_USR_CEN_CONTABLE,
                                                         ORDENE_USR_SUCURSAL,
                                                         ORDENE_USR_TERMINAL, 
                                                         ORDENE_VEH_TOM,
                                                         ORDENE_VEH_COL,
                                                         ORDENE_VEH_REC,
                                                         ORDENE_EJEC_ID,
                                                         ORDENE_FE_ULT_ACT,
                                                         ORDENE_PED_COMISIONES,
                                                         ORDENE_FINANCIADO,
                                                         EJECUCION_ID,
                                                         ORDENE_TASA_POOL,
                                                         ORDENE_GANANCIA_RED, 
                                                         ORDENE_COMISION_OFICINA, 
                                                         ORDENE_COMISION_OPERACION, 
                                                         ORDENE_OPERAC_PEND, 
                                                         ORDENE_ID_RELACION, 
                                                         ORDENE_TASA_CAMBIO,
                                                         CONCEPTO_ID,
                                                         ORDENE_OBSERVACION,
                                                         TIPO_PRODUCTO_ID,
                                                         CTA_ABONO,
                                                         ORDENE_PED_PORC_COMISION_IGTF,
                                                         ORDENE_PED_COMISION_IGTF)                                                           
                                                         VALUES(
                                                          v_secuencia_ordenes,
                                                          p_UNIINV_ID,
                                                          p_CLIENT_ID,
                                                          p_ORDSTA_ID,
                                                          p_SISTEMA_ID,
                                                          p_EMPRES_ID,
                                                          p_CONTRAPARTE,
                                                          p_TRANSA_ID,
                                                          p_ENVIADO,
                                                          p_ORDENE_CTE_SEG_BCO,
                                                          p_ORDENE_CTE_SEG_SEG,
                                                          p_ORDENE_CTE_SEG_SUB,
                                                          p_ORDENE_CTE_SEG_INFI,
                                                          p_ORDENE_PED_FE_ORDEN,
                                                          p_ORDENE_PED_FE_VALOR,
                                                          p_ORDENE_PED_MONTO,
                                                          p_ORDENE_PED_TOTAL_PEND,
                                                          p_ORDENE_PED_TOTAL,
                                                          p_ORDENE_PED_INT_CAIDOS,
                                                          p_BLOTER_ID,
                                                          p_ORDENE_PED_CTA_BSNRO,
                                                          p_ORDENE_PED_CTA_BSTIP,
                                                          p_CTECTA_NUMERO       ,
                                                          p_ORDENE_PED_PRECIO   ,
                                                          p_ORDENE_PED_RENDIMIENTO,
                                                          p_ORDENE_PED_IN_BDV     ,
                                                          p_MONEDA_ID             ,
                                                          p_ORDENE_PED_RCP_PRECIO ,
                                                          p_ORDENE_ADJ_MONTO      ,
                                                          p_ORDENE_USR_NOMBRE     ,
                                                          p_ORDENE_USR_CEN_CONTABLE,
                                                          p_ORDENE_USR_SUCURSAL    ,
                                                          p_ORDENE_USR_TERMINAL    ,
                                                          p_ORDENE_VEH_TOM         ,
                                                          p_ORDENE_VEH_COL         ,
                                                          p_ORDENE_VEH_REC         ,
                                                          p_ORDENE_EJEC_ID         ,
                                                          p_ORDENE_FE_ULT_ACT      ,
                                                          p_ORDENE_PED_COMISIONES  ,
                                                          p_ORDENE_FINANCIADO      ,
                                                          p_EJECUCION_ID           ,
                                                          p_ORDENE_TASA_POOL       ,
                                                          p_ORDENE_GANANCIA_RED    ,
                                                          p_ORDENE_COMISION_OFICINA,
                                                          p_ORDENE_COMISION_OPERACION,
                                                          p_ORDENE_OPERAC_PEND       ,
                                                          p_ORDENE_ID_RELACION       ,
                                                          p_ORDENE_TASA_CAMBIO       ,
                                                          p_CONCEPTO_ID              ,
                                                          p_ORDENE_OBSERVACION       ,
                                                          p_TIPO_PRODUCTO_ID         ,
                                                          p_CTA_ABONO                ,
                                                          p_PORC_COMISION_IGTF       ,
                                                          p_COMISION_IGTF);
            
           EXCEPTION
          WHEN CRUD_VALIDATION_EXCEPTION THEN
          BEGIN
          CRUD_MSJ_EXCEPTION:='Error de Validacion: SP_CREAR_ORDEN '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
            RAISE CRUD_VALIDATION_EXCEPTION;
          END;
          WHEN OTHERS THEN    
          BEGIN
          ROLLBACK;  
          CRUD_MSJ_EXCEPTION:='Error Inesperado: SP_CREAR_ORDEN '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
          RAISE CRUD_UNEXPECTED_EXCEPTION;
          END;
            
                                                                          
END SP_CREAR_ORDEN;
 PROCEDURE SP_CREAR_OPERACION(p_ORDENE_ID              IN INFI_TB_207_ORDENES_OPERACION.ORDENE_ID%TYPE,                                                         
                                                         p_TRNFIN_ID              IN INFI_TB_207_ORDENES_OPERACION.TRNFIN_ID%TYPE,
                                                         p_STATUS_OPERACION       IN INFI_TB_207_ORDENES_OPERACION.STATUS_OPERACION%TYPE,
                                                         p_APLICA_REVERSO         IN INFI_TB_207_ORDENES_OPERACION.APLICA_REVERSO%TYPE,
                                                         p_MONTO_OPERACION        IN INFI_TB_207_ORDENES_OPERACION.MONTO_OPERACION%TYPE,
                                                         p_TASA                   IN INFI_TB_207_ORDENES_OPERACION.TASA%TYPE,
                                                         p_FECHA_APLICAR          IN INFI_TB_207_ORDENES_OPERACION.FECHA_APLICAR%TYPE,
                                                         p_FECHA_PROCESADA        IN INFI_TB_207_ORDENES_OPERACION.FECHA_PROCESADA%TYPE,
                                                         p_ORDENE_OPERACION_ERROR IN INFI_TB_207_ORDENES_OPERACION.ORDENE_OPERACION_ERROR%TYPE,
                                                         p_SERIAL                 IN INFI_TB_207_ORDENES_OPERACION.SERIAL%TYPE,
                                                         p_IN_COMISION            IN INFI_TB_207_ORDENES_OPERACION.IN_COMISION%TYPE,
                                                         p_MONEDA_ID              IN INFI_TB_207_ORDENES_OPERACION.MONEDA_ID%TYPE,
                                                         p_CTECTA_NUMERO          IN INFI_TB_207_ORDENES_OPERACION.CTECTA_NUMERO%TYPE,
                                                         p_OPERACION_NOMBRE       IN INFI_TB_207_ORDENES_OPERACION.OPERACION_NOMBRE%TYPE,
                                                         p_CTECTA_NOMBRE          IN INFI_TB_207_ORDENES_OPERACION.CTECTA_NOMBRE%TYPE,
                                                         p_CTECTA_BCOCTA_BCO      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_BCO%TYPE,                                                         
                                                         p_CTECTA_BCOCTA_DIRECCION IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_DIRECCION%TYPE,
                                                         p_CTECTA_BCOCTA_SWIFT    IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_SWIFT%TYPE,
                                                         p_CTECTA_BCOCTA_BIC      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_BIC%TYPE,
                                                         p_CTECTA_BCOCTA_TELEFONO IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_TELEFONO%TYPE,
                                                         p_CTECTA_BCOCTA_ABA      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_ABA%TYPE,
                                                         p_CTECTA_BCOCTA_PAIS     IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_PAIS%TYPE,
                                                         p_CTECTA_BCOINT_BCO      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_BCO%TYPE,
                                                         p_CTECTA_BCOINT_DIRECCION IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_DIRECCION%TYPE,
                                                         p_CTECTA_BCOINT_SWIFT    IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_SWIFT%TYPE,
                                                         p_CTECTA_BCOINT_BIC      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_BIC%TYPE,
                                                         p_CTECTA_BCOINT_TELEFONO IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_TELEFONO%TYPE,
                                                         p_CTECTA_BCOINT_ABA      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_ABA%TYPE,
                                                         p_CTECTA_BCOINT_PAIS     IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_PAIS%TYPE,
                                                         p_TRNF_TIPO              IN INFI_TB_207_ORDENES_OPERACION.TRNF_TIPO%TYPE,
                                                         p_TITULO_ID              IN INFI_TB_207_ORDENES_OPERACION.TITULO_ID%TYPE,
                                                         p_CODIGO_OPERACION       IN INFI_TB_207_ORDENES_OPERACION.CODIGO_OPERACION%TYPE,
                                                         p_NUMERO_RETENCION       IN INFI_TB_207_ORDENES_OPERACION.NUMERO_RETENCION%TYPE,
                                                         p_ORDENE_RELAC_OPERACION_ID IN INFI_TB_207_ORDENES_OPERACION.ORDENE_RELAC_OPERACION_ID%TYPE,
                                                         p_FECHA_INICIO_CP        IN INFI_TB_207_ORDENES_OPERACION.FECHA_INICIO_CP%TYPE,
                                                         p_FECHA_FIN_CP           IN INFI_TB_207_ORDENES_OPERACION.FECHA_FIN_CP%TYPE,
                                                         p_IN_COMISION_INVARIABLE IN INFI_TB_207_ORDENES_OPERACION.IN_COMISION_INVARIABLE%TYPE

) AS

BEGIN 

        
            IF p_ORDENE_ID IS NULL OR p_MONTO_OPERACION IS NULL OR p_STATUS_OPERACION IS NULL OR p_TRNFIN_ID IS NULL THEN                      
            CRUD_MSJ_EXCEPTION:='Error Validacion: SP_CREAR_OPERACION  - Campo NOT NULL sido pasado sin informacion';
            RAISE CRUD_VALIDATION_EXCEPTION;                   
            END IF;

                  v_secuencia_operacion:=GET_SEQUENCE('INFI_TB_207_ORDENES_OPERACION');--BUSQUEDA DE ID DE NUEVA ORDEN

                                                         INSERT INTO INFI_TB_207_ORDENES_OPERACION (
                                                                ORDENE_ID,
                                                                ORDENE_OPERACION_ID, 
                                                                TRNFIN_ID,STATUS_OPERACION, 
                                                                APLICA_REVERSO,
                                                                MONTO_OPERACION,
                                                                TASA,
                                                                FECHA_APLICAR,
                                                                FECHA_PROCESADA, 
                                                                ORDENE_OPERACION_ERROR,
                                                                SERIAL,
                                                                IN_COMISION,
                                                                MONEDA_ID,                     
                                                                CTECTA_NUMERO, 
                                                                OPERACION_NOMBRE, 
                                                                CTECTA_NOMBRE,
                                                                CTECTA_BCOCTA_BCO,
                                                                CTECTA_BCOCTA_DIRECCION,
                                                                CTECTA_BCOCTA_SWIFT, 
                                                                CTECTA_BCOCTA_BIC,
                                                                CTECTA_BCOCTA_TELEFONO,
                                                                CTECTA_BCOCTA_ABA,
                                                                CTECTA_BCOCTA_PAIS,
                                                                CTECTA_BCOINT_BCO, 
                                                                CTECTA_BCOINT_DIRECCION,
                                                                CTECTA_BCOINT_SWIFT,
                                                                CTECTA_BCOINT_BIC,
                                                                CTECTA_BCOINT_TELEFONO,
                                                                CTECTA_BCOINT_ABA,    
                                                                CTECTA_BCOINT_PAIS,
                                                                TRNF_TIPO,TITULO_ID,
                                                                CODIGO_OPERACION,
                                                                NUMERO_RETENCION,
                                                                ORDENE_RELAC_OPERACION_ID,
                                                                FECHA_INICIO_CP,
                                                                FECHA_FIN_CP,
                                                                IN_COMISION_INVARIABLE)                     
                                                                VALUES
                                                                 (p_ORDENE_ID,
                                                                 v_secuencia_operacion,
                                                                 p_TRNFIN_ID,
                                                                 p_STATUS_OPERACION,
                                                                 p_APLICA_REVERSO,
                                                                 p_MONTO_OPERACION,
                                                                 p_TASA,
                                                                 p_FECHA_APLICAR,
                                                                 p_FECHA_PROCESADA,
                                                                 p_ORDENE_OPERACION_ERROR,
                                                                 p_SERIAL,
                                                                 p_IN_COMISION,
                                                                 p_MONEDA_ID,
                                                                 p_CTECTA_NUMERO,
                                                                 p_OPERACION_NOMBRE,
                                                                 p_CTECTA_NOMBRE,
                                                                 p_CTECTA_BCOCTA_BCO,
                                                                 p_CTECTA_BCOCTA_DIRECCION,
                                                                 p_CTECTA_BCOCTA_SWIFT,
                                                                 p_CTECTA_BCOCTA_BIC,
                                                                 p_CTECTA_BCOCTA_TELEFONO,
                                                                 p_CTECTA_BCOCTA_ABA,
                                                                 p_CTECTA_BCOCTA_PAIS,
                                                                 p_CTECTA_BCOINT_BCO,
                                                                 p_CTECTA_BCOINT_DIRECCION,
                                                                 p_CTECTA_BCOINT_SWIFT,
                                                                 p_CTECTA_BCOINT_BIC,
                                                                 p_CTECTA_BCOINT_TELEFONO,
                                                                 p_CTECTA_BCOINT_ABA,
                                                                 p_CTECTA_BCOINT_PAIS,
                                                                 p_TRNF_TIPO,
                                                                 p_TITULO_ID,
                                                                 p_CODIGO_OPERACION,
                                                                 p_NUMERO_RETENCION,
                                                                 p_ORDENE_RELAC_OPERACION_ID,
                                                                 p_FECHA_INICIO_CP,
                                                                 p_FECHA_FIN_CP,
                                                                 p_IN_COMISION_INVARIABLE);
          EXCEPTION
          WHEN CRUD_VALIDATION_EXCEPTION THEN
          BEGIN
          CRUD_MSJ_EXCEPTION:='Error de Validacion: SP_CREAR_OPERACION '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
            RAISE CRUD_VALIDATION_EXCEPTION;
          END;
          WHEN OTHERS THEN    
          BEGIN
          ROLLBACK;  
          CRUD_MSJ_EXCEPTION:='Error Inesperado: SP_CREAR_OPERACION '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
          RAISE CRUD_UNEXPECTED_EXCEPTION;
          END;  
            
END SP_CREAR_OPERACION;

PROCEDURE SP_CREAR_CLIENTE(p_TIPPER_ID        IN INFI_TB_201_CTES.TIPPER_ID%TYPE,
                            p_CLIENT_CEDRIF   IN INFI_TB_201_CTES.CLIENT_CEDRIF%TYPE,
                            p_CLIENT_NOMBRE   IN INFI_TB_201_CTES.CLIENT_NOMBRE%TYPE,
                            p_CLIENT_TELEFONO IN INFI_TB_201_CTES.CLIENT_TELEFONO%TYPE,
                            p_CLIENT_CORREO_ELECTRONICO IN INFI_TB_201_CTES.CLIENT_CORREO_ELECTRONICO%TYPE,
                            p_CTESEG_ID      IN INFI_TB_201_CTES.CTESEG_ID%TYPE,
                            p_NUMERO_PERSONA IN INFI_TB_201_CTES.NUMERO_PERSONA%TYPE,
                            p_CLIENT_ID      OUT INFI_TB_201_CTES.CLIENT_ID%TYPE) AS
                            
                            
                            v_CLIENT_CTA_CUSTOD_ID SEQUENCE_NUMBERS.NEXT_ID%TYPE;

BEGIN 

                            IF p_TIPPER_ID IS NULL OR p_CLIENT_CEDRIF IS NULL OR p_CLIENT_NOMBRE IS NULL THEN                      
                                CRUD_MSJ_EXCEPTION:='Error Validacion: SP_CREAR_CLIENTE  - Campo NOT NULL sido pasado sin informacion';
                                RAISE CRUD_VALIDATION_EXCEPTION;                   
                            END IF;
                            
                            v_secuencia_cliente:=GET_SEQUENCE('INFI_TB_201_CTES');--BUSQUEDA DE ID DE NUEVA ORDEN
                            p_CLIENT_ID:=v_secuencia_cliente;
                            v_CLIENT_CTA_CUSTOD_ID:=GET_SEQUENCE('CTA_CUSTODIA');
                            
                            INSERT INTO INFI_TB_201_CTES (CLIENT_ID,
                                                          TIPPER_ID,
                                                          CLIENT_CEDRIF,
                                                          CLIENT_NOMBRE,
                                                          CLIENT_TELEFONO,
                                                          CLIENT_CTA_CUSTOD_ID,
                                                          CLIENT_CTA_CUSTOD_FECHA,
                                                          CLIENT_CORREO_ELECTRONICO,
                                                          CTESEG_ID,
                                                          NUMERO_PERSONA) 
                                                    values (v_secuencia_cliente,
                                                            p_TIPPER_ID,
                                                            p_CLIENT_CEDRIF,
                                                            p_CLIENT_NOMBRE,
                                                            p_CLIENT_TELEFONO,
                                                             v_CLIENT_CTA_CUSTOD_ID,
                                                             SYSDATE,
                                                            p_CLIENT_CORREO_ELECTRONICO,
                                                            p_CTESEG_ID,
                                                            p_NUMERO_PERSONA
                                                            );
                                                            
                                                              
            EXCEPTION
          WHEN CRUD_VALIDATION_EXCEPTION THEN
          BEGIN
          CRUD_MSJ_EXCEPTION:='Error de Validacion: SP_CREAR_CLIENTE '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
            RAISE CRUD_VALIDATION_EXCEPTION;
          END;
          WHEN OTHERS THEN    
          BEGIN
          ROLLBACK;  
          CRUD_MSJ_EXCEPTION:='Error Inesperado: SP_CREAR_CLIENTE '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
          RAISE CRUD_UNEXPECTED_EXCEPTION;
          END;   
--            WHEN OTHERS THEN
--            BEGIN
--            ROLLBACK;  
--            CRUD_MSJ_EXCEPTION:='Error Inesperado: SP_CREAR_CLIENTE '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
--            RAISE CRUD_UNEXPECTED_EXCEPTION;                           
--            END;
            
END SP_CREAR_CLIENTE;   

PROCEDURE SP_ACTIALIZAR_SOLICITUD_DICOM( p_NRO_SOLICITUD         IN  SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
                                         P_NRO_JORNADA          IN  SOLICITUDES_DICOM.ID_JORNADA%TYPE,
                                         P_CODIGO_RESPUESTA     IN  SOLICITUDES_DICOM.CODIGO_RESPUESTA%TYPE,
                                         p_NOMBRE_CLIENTE       IN SOLICITUDES_DICOM.NOMBRE_CLIENTE%TYPE,
                                         p_TELEFONO_CLIENTE     IN SOLICITUDES_DICOM.TELEFONO_CLIENTE%TYPE,
                                         p_CORREO_CLIENTE       IN SOLICITUDES_DICOM.CORREO_CLIENTE%TYPE,
                                         p_NRO_RET_CAPITAL      IN SOLICITUDES_DICOM.NRO_RET_CAPITAL%TYPE,
                                         p_HORA_BLOQ            IN SOLICITUDES_DICOM.HORA_BLOQ%TYPE,
                                         p_DIVISA_NACIONAL      IN SOLICITUDES_DICOM.DIVISA_NACIONAL%TYPE,
                                         p_NRO_RET_COMISION     IN SOLICITUDES_DICOM.NRO_RET_COMISION%TYPE,
                                         p_MONTO_COMISION       IN SOLICITUDES_DICOM.MONTO_COMISION%TYPE,
                                         p_PORC_COMISION        IN SOLICITUDES_DICOM.PORC_COMISION%TYPE,
                                         p_DIVISA_EXTRANJERA    IN SOLICITUDES_DICOM.DIVISA_EXTRANJERA%TYPE,
                                         p_TASA_CAMBIO          IN SOLICITUDES_DICOM.TASA_CAMBIO%TYPE,
                                         P_NRO_OPE_DEBITO       IN  SOLICITUDES_DICOM.NRO_OPE_DEBITO%TYPE,
                                         P_NRO_OPE_CREDITO      IN  SOLICITUDES_DICOM.NRO_OPE_CREDITO%TYPE,
                                         P_UNDINV_ID            IN INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%TYPE                                         
                                         ) AS           

    v_query     VARCHAR2(1000);
                                         
    BEGIN
    v_query:='UPDATE SOLICITUDES_DICOM SET ';
    
    IF P_CODIGO_RESPUESTA IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' CODIGO_RESPUESTA='||''''||P_CODIGO_RESPUESTA||''''||', ');
    END IF;
            
    IF p_NOMBRE_CLIENTE IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' NOMBRE_CLIENTE='||''''||p_NOMBRE_CLIENTE||''''||', ');
    END IF;
    
    IF p_TELEFONO_CLIENTE IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' TELEFONO_CLIENTE='||''''||p_TELEFONO_CLIENTE||''''||', ');
    END IF;
    
    IF p_CORREO_CLIENTE IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' CORREO_CLIENTE='||''''||p_CORREO_CLIENTE||''''||', ');
    END IF;
    
    IF p_NRO_RET_CAPITAL IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' NRO_RET_CAPITAL='||''''||p_NRO_RET_CAPITAL||''''||', ');
    END IF;
    
    IF p_HORA_BLOQ IS NOT NULL THEN
    flag_sent_correc:=1;    
    v_query:=CONCAT(v_query,' HORA_BLOQ='||''''||p_HORA_BLOQ||''''||', ');
    END IF;
    
    IF p_DIVISA_NACIONAL IS NOT NULL THEN
    flag_sent_correc:=1;    
    v_query:=CONCAT(v_query,' DIVISA_NACIONAL='||''''||p_DIVISA_NACIONAL||''''||', ');
    END IF;
    
    IF p_NRO_RET_COMISION IS NOT NULL THEN
    flag_sent_correc:=1;        
    v_query:=CONCAT(v_query,' NRO_RET_COMISION='||''''||p_NRO_RET_COMISION||''''||', ');
    END IF;
    
    IF p_MONTO_COMISION IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' MONTO_COMISION='||to_char(p_MONTO_COMISION,'0999999999999.99')|| ', ');--NUMERICO  
    END IF;
    
    IF p_PORC_COMISION IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' PORC_COMISION='||to_char(p_PORC_COMISION, '099.99')|| ', ');--NUMERICO 
    END IF;
    
    IF p_DIVISA_EXTRANJERA IS NOT NULL THEN
    flag_sent_correc:=1;    
    v_query:=CONCAT(v_query,' DIVISA_EXTRANJERA='||''''||p_DIVISA_EXTRANJERA||''''||', ');
    END IF;
    
    IF p_TASA_CAMBIO IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' TASA_CAMBIO='||to_char(p_TASA_CAMBIO, '099999.9999')|| ', ');--NUMERICO 
    END IF;
            
    IF P_NRO_OPE_DEBITO IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' NRO_OPE_DEBITO='||P_NRO_OPE_DEBITO|| ', ');--NUMERICO
    END IF;
    
    IF P_NRO_OPE_CREDITO IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' NRO_OPE_CREDITO='||P_NRO_OPE_CREDITO|| ', ');--NUMERICO
    END IF;

    IF P_UNDINV_ID IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' UNDINV_ID='||P_UNDINV_ID|| ', ');--NUMERICO
    END IF;                 
                 
    
       IF flag_sent_correc=0 THEN
       CRUD_MSJ_EXCEPTION:='Error Validacion: SP_ACTIALIZAR_SOLICITUD_DICOM  - No se ha ingresado ningun campo para ser modificado';
       RAISE CRUD_VALIDATION_EXCEPTION;       
       ELSE
       v_query:=CONCAT(v_query,' ESTATUS_REGISTRO=1 ');
       END IF;
       
    --v_query:=SUBSTR(v_query,0,(Length(v_query)-2));
    v_query:=CONCAT(v_query,' WHERE NRO_SOLICITUD='||''''||P_NRO_SOLICITUD||''''||' ');
    v_query:=CONCAT(v_query,' AND ID_JORNADA=' ||''''||P_NRO_JORNADA||''''||'');
       DBMS_OUTPUT.put_line('QUERY --> ' || v_query);                                                
    EXECUTE IMMEDIATE v_query;                
       EXCEPTION
          WHEN CRUD_VALIDATION_EXCEPTION THEN
          BEGIN
            RAISE CRUD_VALIDATION_EXCEPTION;
          END;
          WHEN OTHERS THEN  
          BEGIN  
          ROLLBACK;  
          CRUD_MSJ_EXCEPTION:='Error Inesperado: SP_ACTIALIZAR_SOLICITUD_DICOM '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
          RAISE CRUD_UNEXPECTED_EXCEPTION;
          END;             
                   
END SP_ACTIALIZAR_SOLICITUD_DICOM;     

  PROCEDURE SP_CREAR_UNIDAD_INVERSION (
          P_UNDINV_ID                    OUT  INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%type,            
          P_UNDINV_NOMBRE                   IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_NOMBRE%type,                   
          P_UNDINV_DESCRIPCION              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_DESCRIPCION%type,              
          P_INSFIN_ID                       IN  INFI_TB_106_UNIDAD_INVERSION.INSFIN_ID%type,                       
          P_UNDINV_EMISION                  IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_EMISION%type,                  
          P_UNDINV_SERIE                    IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_SERIE%type,                    
          P_UNDINV_TASA_CAMBIO              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_TASA_CAMBIO%type,              
          P_UNDINV_FE_EMISION               IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_EMISION%type,               
          P_UNDINV_IN_VTA_EMPLEADOS         IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_IN_VTA_EMPLEADOS%type,         
          P_TPPEVA_ID                       IN  INFI_TB_106_UNIDAD_INVERSION.TPPEVA_ID%type,                       
          P_UNDINV_PRECIO_MINIMO            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_PRECIO_MINIMO%type,            
          P_UNDINV_COMENTARIOS              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_COMENTARIOS%type,              
          P_UNDINV_DOC_BDV                  IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_DOC_BDV%type,                  
          P_UNDINV_DOC_EMISOR               IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_DOC_EMISOR%type,               
          P_UNDINV_FE_ADJUDICACION          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_ADJUDICACION%type,          
          P_UNDINV_FE_LIQUIDACION           IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_LIQUIDACION%type,           
          P_UNDINV_FE_CIERRE                IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_CIERRE%type,                
          P_UNDINV_IN_RECOMPRA_NETEO        IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_IN_RECOMPRA_NETEO%type,        
          P_MONEDA_ID                       IN  INFI_TB_106_UNIDAD_INVERSION.MONEDA_ID%type,                       
          P_UNDINV_UMI_INV_TOTAL            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_INV_TOTAL%type,            
          P_UNDINV_UMI_INV_MTO_MIN          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_INV_MTO_MIN%type,          
          P_UNDINV_UMI_INV_MTO_MAX          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_INV_MTO_MAX%type,          
          P_UNDINV_UMI_UM_CANT_MIN          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_UM_CANT_MIN%type,          
          P_UNDINV_UMI_UM_CANT_MAX          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_UM_CANT_MAX%type,          
          P_UNDINV_STATUS                   IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_STATUS%type,                   
          P_AUT_USUARIO_USERID              IN  INFI_TB_106_UNIDAD_INVERSION.AUT_USUARIO_USERID%type,              
          P_AUT_USUARIO_NOMBRE              IN  INFI_TB_106_UNIDAD_INVERSION.AUT_USUARIO_NOMBRE%type,              
          P_AUT_USUARIO_ROL_NOMBRE          IN  INFI_TB_106_UNIDAD_INVERSION.AUT_USUARIO_ROL_NOMBRE%type,          
          P_AUT_ESTACION                    IN  INFI_TB_106_UNIDAD_INVERSION.AUT_ESTACION%type,                    
          P_AUT_IP                          IN  INFI_TB_106_UNIDAD_INVERSION.AUT_IP%type,                          
          P_AUT_FECHA                       IN  INFI_TB_106_UNIDAD_INVERSION.AUT_FECHA%type,                       
          P_UPD_USUARIO_USERID              IN  INFI_TB_106_UNIDAD_INVERSION.UPD_USUARIO_USERID%type,              
          P_UPD_USUARIO_NOMBRE              IN  INFI_TB_106_UNIDAD_INVERSION.UPD_USUARIO_NOMBRE%type,              
          P_UPD_USUARIO_ROL_NOMBRE          IN  INFI_TB_106_UNIDAD_INVERSION.UPD_USUARIO_ROL_NOMBRE%type,          
          P_UPD_ESTACION                    IN  INFI_TB_106_UNIDAD_INVERSION.UPD_ESTACION%type,                    
          P_UPD_IP                          IN  INFI_TB_106_UNIDAD_INVERSION.UPD_IP%type,                          
          P_UPD_FECHA                       IN  INFI_TB_106_UNIDAD_INVERSION.UPD_FECHA%type,                       
          P_EMPRES_ID                       IN  INFI_TB_106_UNIDAD_INVERSION.EMPRES_ID%type,                       
          P_UNDINV_UMI_INV_DISPONIBLE       IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_INV_DISPONIBLE%type,       
          P_UNDINV_UMI_UNIDAD               IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_UNIDAD%type,               
          P_UNDINV_PCT_MAX_FINAN            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_PCT_MAX_FINAN%type,            
          P_UNDINV_PRECIO_MAXIMO            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_PRECIO_MAXIMO%type,            
          P_UNDINV_MULTIPLOS                IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_MULTIPLOS%type,                
          P_UNDINV_IN_PEDIDO_MONTO          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_IN_PEDIDO_MONTO%type,          
          P_UNDINV_TASA_POOL                IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_TASA_POOL%type,                
          P_UNDINV_RENDIMIENTO              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_RENDIMIENTO%type,              
          P_UNDINV_MERCADO                  IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_MERCADO%type,                  
          P_UNDINV_IN_PRECIO_SUCIO          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_IN_PRECIO_SUCIO%type,          
          P_UNDINV_FE_LIQUIDACION_HORA1     IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_LIQUIDACION_HORA1%type,     
          P_UNDINV_FE_LIQUIDACION_HORA2     IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_LIQUIDACION_HORA2%type,     
          P_PAGO_IN_BCV                     IN  INFI_TB_106_UNIDAD_INVERSION.PAGO_IN_BCV%type,                     
          P_IN_COBRO_BATCH_ADJ              IN  INFI_TB_106_UNIDAD_INVERSION.IN_COBRO_BATCH_ADJ%type,              
          P_IN_COBRO_BATCH_LIQ              IN  INFI_TB_106_UNIDAD_INVERSION.IN_COBRO_BATCH_LIQ%type,              
          P_DIAS_APERTURA_CUENTA            IN  INFI_TB_106_UNIDAD_INVERSION.DIAS_APERTURA_CUENTA%type,            
          P_INDC_PERMITE_CANCELACION        IN  INFI_TB_106_UNIDAD_INVERSION.INDC_PERMITE_CANCELACION%type,        
          P_UNDINV_ACTIVE                   IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_ACTIVE%type,                   
          --P_UNDINV_STATUS_CONCILIACION      IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_STATUS_CONCILIACION%type,                    
          P_MONTO_ACUMULADO_SOLIC           IN  INFI_TB_106_UNIDAD_INVERSION.MONTO_ACUMULADO_SOLIC%type,           
          P_TIPO_NEGOCIO                    IN  INFI_TB_106_UNIDAD_INVERSION.TIPO_NEGOCIO%type,                    
          P_NRO_JORNADA                     IN  INFI_TB_106_UNIDAD_INVERSION.NRO_JORNADA%type,                     
          P_UNDINV_PERIODO_VENTA            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_PERIODO_VENTA%type,            
          P_UNDINV_MULTIPLOS_EFECTIVO       IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_MULTIPLOS_EFECTIVO%type,       
          P_UNDINV_UMAX_UNIDAD              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMAX_UNIDAD%type,              
          P_UNDINV_TASA_CAMBIO_OFER         IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_TASA_CAMBIO_OFER%type,         
          P_COMISION_IGTF                   IN  INFI_TB_106_UNIDAD_INVERSION.COMISION_IGTF%type,                   
          P_TIPO_SOLICITUD                  IN  INFI_TB_106_UNIDAD_INVERSION.TIPO_SOLICITUD%type     
    )AS
    BEGIN
        NOMBRE_SP:='SP_CREAR_UNIDAD_INVERSION';
         
         IF P_INSFIN_ID IS NULL OR P_MONEDA_ID IS NULL OR P_UNDINV_STATUS IS NULL OR P_UPD_IP IS NULL OR P_EMPRES_ID IS NULL OR P_TIPO_SOLICITUD IS NULL THEN             
                MSJ_EXCEPTION:='Error Validacion: '|| NOMBRE_SP||'  - Campo NOT NULL ha sido pasado sin informacion';
                RAISE CRUD_VALIDATION_EXCEPTION;                   
            END IF;
            
        P_UNDINV_ID:=GET_SEQUENCE('INFI_TB_106_UNIDAD_INVERSION');

        INSERT INTO INFI_TB_106_UNIDAD_INVERSION(
            UNDINV_ID,                
            UNDINV_NOMBRE,              
            UNDINV_DESCRIPCION,         
            INSFIN_ID,                  
            UNDINV_EMISION,             
            UNDINV_SERIE,               
            UNDINV_TASA_CAMBIO,         
            UNDINV_FE_EMISION,          
            UNDINV_IN_VTA_EMPLEADOS,    
            TPPEVA_ID,                  
            UNDINV_PRECIO_MINIMO,       
            UNDINV_COMENTARIOS,         
            UNDINV_DOC_BDV,             
            UNDINV_DOC_EMISOR,          
            UNDINV_FE_ADJUDICACION,     
            UNDINV_FE_LIQUIDACION,      
            UNDINV_FE_CIERRE,           
            UNDINV_IN_RECOMPRA_NETEO,   
            MONEDA_ID,                  
            UNDINV_UMI_INV_TOTAL,       
            UNDINV_UMI_INV_MTO_MIN,     
            UNDINV_UMI_INV_MTO_MAX,     
            UNDINV_UMI_UM_CANT_MIN,     
            UNDINV_UMI_UM_CANT_MAX,     
            UNDINV_STATUS,              
            AUT_USUARIO_USERID,         
            AUT_USUARIO_NOMBRE,         
            AUT_USUARIO_ROL_NOMBRE,     
            AUT_ESTACION,               
            AUT_IP,                     
            AUT_FECHA,                  
            UPD_USUARIO_USERID,         
            UPD_USUARIO_NOMBRE,         
            UPD_USUARIO_ROL_NOMBRE,     
            UPD_ESTACION,               
            UPD_IP,                     
            UPD_FECHA,                  
            EMPRES_ID,                  
            UNDINV_UMI_INV_DISPONIBLE,  
            UNDINV_UMI_UNIDAD,          
            UNDINV_PCT_MAX_FINAN,       
            UNDINV_PRECIO_MAXIMO,       
            UNDINV_MULTIPLOS,           
            UNDINV_IN_PEDIDO_MONTO,     
            UNDINV_TASA_POOL,           
            UNDINV_RENDIMIENTO,         
            UNDINV_MERCADO,             
            UNDINV_IN_PRECIO_SUCIO,     
            UNDINV_FE_LIQUIDACION_HORA1,
            UNDINV_FE_LIQUIDACION_HORA2,
            PAGO_IN_BCV,                
            IN_COBRO_BATCH_ADJ,         
            IN_COBRO_BATCH_LIQ,         
            DIAS_APERTURA_CUENTA,       
            INDC_PERMITE_CANCELACION,   
            UNDINV_ACTIVE,              
           -- UNDINV_STATUS_CONCILIACION,            
            MONTO_ACUMULADO_SOLIC,      
            TIPO_NEGOCIO,               
            NRO_JORNADA,                
            UNDINV_PERIODO_VENTA,       
            UNDINV_MULTIPLOS_EFECTIVO,  
            UNDINV_UMAX_UNIDAD,         
            UNDINV_TASA_CAMBIO_OFER,    
            COMISION_IGTF,              
            TIPO_SOLICITUD)
    VALUES (
          P_UNDINV_ID,                              
          P_UNDINV_NOMBRE,              
          P_UNDINV_DESCRIPCION,         
          P_INSFIN_ID,                  
          P_UNDINV_EMISION,             
          P_UNDINV_SERIE,               
          P_UNDINV_TASA_CAMBIO,         
          P_UNDINV_FE_EMISION,          
          P_UNDINV_IN_VTA_EMPLEADOS,    
          P_TPPEVA_ID,                  
          P_UNDINV_PRECIO_MINIMO,       
          P_UNDINV_COMENTARIOS,         
          P_UNDINV_DOC_BDV,             
          P_UNDINV_DOC_EMISOR,          
          P_UNDINV_FE_ADJUDICACION,     
          P_UNDINV_FE_LIQUIDACION,      
          P_UNDINV_FE_CIERRE,           
          P_UNDINV_IN_RECOMPRA_NETEO,   
          P_MONEDA_ID,                  
          P_UNDINV_UMI_INV_TOTAL,       
          P_UNDINV_UMI_INV_MTO_MIN,     
          P_UNDINV_UMI_INV_MTO_MAX,     
          P_UNDINV_UMI_UM_CANT_MIN,     
          P_UNDINV_UMI_UM_CANT_MAX,     
          P_UNDINV_STATUS,              
          P_AUT_USUARIO_USERID,         
          P_AUT_USUARIO_NOMBRE,         
          P_AUT_USUARIO_ROL_NOMBRE,     
          P_AUT_ESTACION,               
          P_AUT_IP,                     
          P_AUT_FECHA,                  
          P_UPD_USUARIO_USERID,         
          P_UPD_USUARIO_NOMBRE,         
          P_UPD_USUARIO_ROL_NOMBRE,     
          P_UPD_ESTACION,               
          P_UPD_IP,                     
          P_UPD_FECHA,                  
          P_EMPRES_ID,                  
          P_UNDINV_UMI_INV_DISPONIBLE,  
          P_UNDINV_UMI_UNIDAD,          
          P_UNDINV_PCT_MAX_FINAN,       
          P_UNDINV_PRECIO_MAXIMO,       
          P_UNDINV_MULTIPLOS,           
          P_UNDINV_IN_PEDIDO_MONTO,     
          P_UNDINV_TASA_POOL,           
          P_UNDINV_RENDIMIENTO,         
          P_UNDINV_MERCADO,             
          P_UNDINV_IN_PRECIO_SUCIO,     
          P_UNDINV_FE_LIQUIDACION_HORA1,
          P_UNDINV_FE_LIQUIDACION_HORA2,
          P_PAGO_IN_BCV,                
          P_IN_COBRO_BATCH_ADJ,         
          P_IN_COBRO_BATCH_LIQ,         
          P_DIAS_APERTURA_CUENTA,       
          P_INDC_PERMITE_CANCELACION,   
          P_UNDINV_ACTIVE,              
         -- P_UNDINV_STATUS_CONCILIACION,           
          P_MONTO_ACUMULADO_SOLIC,      
          P_TIPO_NEGOCIO,               
          P_NRO_JORNADA,                
          P_UNDINV_PERIODO_VENTA,       
          P_UNDINV_MULTIPLOS_EFECTIVO,  
          P_UNDINV_UMAX_UNIDAD,         
          P_UNDINV_TASA_CAMBIO_OFER,    
          P_COMISION_IGTF,              
          P_TIPO_SOLICITUD         
          ); 
                      
     EXCEPTION 
            WHEN CRUD_VALIDATION_EXCEPTION  THEN
            BEGIN                
                raise_application_error(-20001,'Validacion: '|| NOMBRE_SP||' : '||MSJ_EXCEPTION);
            END;  
            WHEN OTHERS THEN
            BEGIN
            MSJ_EXCEPTION:='Error Inesperado: '|| NOMBRE_SP||' '||' SQLERRM ' ||SQLERRM ||' SQLCODE ' ||SQLCODE;
            RAISE CRUD_UNEXPECTED_EXCEPTION;
            END;
    
    END SP_CREAR_UNIDAD_INVERSION;
    
    PROCEDURE SP_CREAR_UI_TITULOS (
            P_UNDINV_ID            IN    INFI_TB_108_UI_TITULOS.UNDINV_ID%type,             
            P_TITULO_ID            IN    INFI_TB_108_UI_TITULOS.TITULO_ID%type,             
            P_UITITU_PORCENTAJE        IN    INFI_TB_108_UI_TITULOS.UITITU_PORCENTAJE%type,         
            P_UITITU_VALOR_EQUIVALENTE    IN    INFI_TB_108_UI_TITULOS.UITITU_VALOR_EQUIVALENTE%type,     
            P_UITITU_IN_CONIDB        IN    INFI_TB_108_UI_TITULOS.UITITU_IN_CONIDB%type,         
            P_UITITU_IN_CONTROL_DISPONIBLE    IN    INFI_TB_108_UI_TITULOS.UITITU_IN_CONTROL_DISPONIBLE%type
        )AS
        BEGIN
            NOMBRE_SP:='SP_CREAR_UI_TITULOS';
             IF P_UNDINV_ID IS NULL OR P_TITULO_ID IS NULL OR  P_UITITU_PORCENTAJE IS NULL THEN                     
                MSJ_EXCEPTION:='Error Validacion: '|| NOMBRE_SP||'  - Campo NOT NULL ha sido pasado sin informacion';
                RAISE CRUD_VALIDATION_EXCEPTION;                   
            END IF;

             INSERT INTO INFI_TB_108_UI_TITULOS (
                UNDINV_ID,                 
                TITULO_ID,                    
                UITITU_PORCENTAJE,        
                UITITU_VALOR_EQUIVALENTE,     
                UITITU_IN_CONIDB,                          
                UITITU_IN_CONTROL_DISPONIBLE    
            )VALUES(
                P_UNDINV_ID,                 
                P_TITULO_ID,                    
                P_UITITU_PORCENTAJE,        
                P_UITITU_VALOR_EQUIVALENTE,     
                P_UITITU_IN_CONIDB,                          
                P_UITITU_IN_CONTROL_DISPONIBLE              
            );
        EXCEPTION 
            WHEN CRUD_VALIDATION_EXCEPTION  THEN
            BEGIN                
                raise_application_error(-20001,'Validacion: '|| NOMBRE_SP||' : '||MSJ_EXCEPTION);
            END; 
            WHEN OTHERS THEN
            BEGIN
            ROLLBACK;  
            MSJ_EXCEPTION:='Error Inesperado: '|| NOMBRE_SP||' '||' SQLERRM ' ||SQLERRM ||' SQLCODE ' ||SQLCODE;
            RAISE CRUD_UNEXPECTED_EXCEPTION;
            END;
            
    END SP_CREAR_UI_TITULOS;
    
    PROCEDURE SP_CREAR_UI_EMPRESA (
        P_UNDINV_ID        IN    INFI_TB_109_UI_EMPRESAS.UNDINV_ID%type,            
        P_EMPRES_ID        IN    INFI_TB_109_UI_EMPRESAS.EMPRES_ID%type,        
        P_ROLES_ID        IN    INFI_TB_109_UI_EMPRESAS.ROLES_ID%type,        
        P_UIEMPR_CONTACTO_NOM    IN    INFI_TB_109_UI_EMPRESAS.UIEMPR_CONTACTO_NOM%type,     
        P_UIEMPR_CONTACTO_TLF    IN    INFI_TB_109_UI_EMPRESAS.UIEMPR_CONTACTO_TLF%type
)AS
BEGIN
    NOMBRE_SP:='SP_CREAR_UI_EMPRESA';
    IF P_UNDINV_ID IS NULL OR P_EMPRES_ID IS NULL THEN                     
        MSJ_EXCEPTION:='Error Validacion: '|| NOMBRE_SP||'  - Campo NOT NULL ha sido pasado sin informacion';
        RAISE CRUD_VALIDATION_EXCEPTION;                   
    END IF;    

    INSERT INTO INFI_TB_109_UI_EMPRESAS(
        UNDINV_ID,
        EMPRES_ID,
        ROLES_ID,
        UIEMPR_CONTACTO_NOM,
        UIEMPR_CONTACTO_TLF
        )
        VALUES (
        P_UNDINV_ID,             
        P_EMPRES_ID,
        P_ROLES_ID,
        P_UIEMPR_CONTACTO_NOM,
        P_UIEMPR_CONTACTO_TLF                
        );

EXCEPTION 
    WHEN CRUD_VALIDATION_EXCEPTION  THEN
    BEGIN                
        raise_application_error(-20001,'Validacion: '|| NOMBRE_SP||' : '||MSJ_EXCEPTION);
    END; 
    WHEN OTHERS THEN
    BEGIN
    ROLLBACK;  
    MSJ_EXCEPTION:='Error Inesperado: '|| NOMBRE_SP||' '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
    RAISE CRUD_UNEXPECTED_EXCEPTION;
    END;
    
END SP_CREAR_UI_EMPRESA;

PROCEDURE SP_CREAR_UI_BLOTTER (
    P_UNDINV_ID                     IN INFI_TB_107_UI_BLOTTER.UNDINV_ID%type,                   
    P_BLOTER_ID                     IN INFI_TB_107_UI_BLOTTER.BLOTER_ID%type,                   
    P_UIBLOT_IN_DISPONIBLE          IN INFI_TB_107_UI_BLOTTER.UIBLOT_IN_DISPONIBLE%type,        
    P_UIBLOT_HORARIO_DESDE          IN INFI_TB_107_UI_BLOTTER.UIBLOT_HORARIO_DESDE%type,        
    P_UIBLOT_HORARIO_HASTA          IN INFI_TB_107_UI_BLOTTER.UIBLOT_HORARIO_HASTA%type,        
    P_UIBLOT_PEDIDO_FE_INI          IN INFI_TB_107_UI_BLOTTER.UIBLOT_PEDIDO_FE_INI%type,        
    P_UIBLOT_PEDIDO_FE_FIN          IN INFI_TB_107_UI_BLOTTER.UIBLOT_PEDIDO_FE_FIN%type,        
    P_UIBLOT_SERIAL_COMISIONES      IN INFI_TB_107_UI_BLOTTER.UIBLOT_SERIAL_COMISIONES%type,    
    P_UIBLOT_SERIAL_CAPITAL         IN INFI_TB_107_UI_BLOTTER.UIBLOT_SERIAL_CAPITAL%type,       
    P_TPPEVA_ID                     IN INFI_TB_107_UI_BLOTTER.TPPEVA_ID%type,                   
    P_CTESEG_ID                     IN INFI_TB_107_UI_BLOTTER.CTESEG_ID%type,                   
    P_UIBLOT_IN_DEFECTO             IN INFI_TB_107_UI_BLOTTER.UIBLOT_IN_DEFECTO%type,           
    P_UIBLOT_IN_TESORERIA           IN INFI_TB_107_UI_BLOTTER.UIBLOT_IN_TESORERIA%type,         
    P_UIBLOT_HORARIO_DESDE_ULT_DIA  IN INFI_TB_107_UI_BLOTTER.UIBLOT_HORARIO_DESDE_ULT_DIA%type,
    P_UIBLOT_HORARIO_HASTA_ULT_DIA  IN INFI_TB_107_UI_BLOTTER.UIBLOT_HORARIO_HASTA_ULT_DIA%type,
    P_UIBLOT_GANANCIA_RED           IN INFI_TB_107_UI_BLOTTER.UIBLOT_GANANCIA_RED%type,         
    P_UIBLOT_IN_RECOMPRA            IN INFI_TB_107_UI_BLOTTER.UIBLOT_IN_RECOMPRA%type          
)AS
BEGIN
    NOMBRE_SP:='SP_CREAR_UI_BLOTTER';
    IF P_UNDINV_ID IS NULL OR P_BLOTER_ID IS NULL OR P_UIBLOT_HORARIO_DESDE IS NULL OR P_UIBLOT_HORARIO_HASTA IS NULL OR P_UIBLOT_PEDIDO_FE_INI IS NULL OR P_UIBLOT_PEDIDO_FE_FIN IS NULL THEN                     
        MSJ_EXCEPTION:='Error Validacion: '|| NOMBRE_SP||'  - Campo NOT NULL ha sido pasado sin informacion';
        RAISE CRUD_VALIDATION_EXCEPTION;                   
    END IF;    

    INSERT INTO INFI_TB_107_UI_BLOTTER(
        UNDINV_ID,                   
        BLOTER_ID,                   
        UIBLOT_IN_DISPONIBLE,        
        UIBLOT_HORARIO_DESDE,        
        UIBLOT_HORARIO_HASTA,        
        UIBLOT_PEDIDO_FE_INI,        
        UIBLOT_PEDIDO_FE_FIN,        
        UIBLOT_SERIAL_COMISIONES,    
        UIBLOT_SERIAL_CAPITAL,       
        TPPEVA_ID,                   
        CTESEG_ID,                   
        UIBLOT_IN_DEFECTO,           
        UIBLOT_IN_TESORERIA,         
        UIBLOT_HORARIO_DESDE_ULT_DIA,
        UIBLOT_HORARIO_HASTA_ULT_DIA,
        UIBLOT_GANANCIA_RED,         
        UIBLOT_IN_RECOMPRA   
    ) VALUES (
        P_UNDINV_ID,                   
        P_BLOTER_ID,                   
        P_UIBLOT_IN_DISPONIBLE,        
        P_UIBLOT_HORARIO_DESDE,        
        P_UIBLOT_HORARIO_HASTA,        
        P_UIBLOT_PEDIDO_FE_INI,        
        P_UIBLOT_PEDIDO_FE_FIN,        
        P_UIBLOT_SERIAL_COMISIONES,    
        P_UIBLOT_SERIAL_CAPITAL,       
        P_TPPEVA_ID,                   
        P_CTESEG_ID,                   
        P_UIBLOT_IN_DEFECTO,           
        P_UIBLOT_IN_TESORERIA,         
        P_UIBLOT_HORARIO_DESDE_ULT_DIA,
        P_UIBLOT_HORARIO_HASTA_ULT_DIA,
        P_UIBLOT_GANANCIA_RED,         
        P_UIBLOT_IN_RECOMPRA 
    );              
        
EXCEPTION
    WHEN CRUD_VALIDATION_EXCEPTION  THEN
    BEGIN                
        raise_application_error(-20001,'Validacion: '|| NOMBRE_SP||' : '||MSJ_EXCEPTION);
    END;  
    WHEN OTHERS THEN
    BEGIN
    ROLLBACK;  
    MSJ_EXCEPTION:='Error Inesperado: '|| NOMBRE_SP||' '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
    RAISE CRUD_UNEXPECTED_EXCEPTION;
    END;
        
END SP_CREAR_UI_BLOTTER;

PROCEDURE SP_CREAR_SOLICITUD_DICOM (
    P_NRO_SOLICITUD            IN SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
    P_TIPO_OPERACION           IN SOLICITUDES_DICOM.TIPO_OPERACION%TYPE,
    P_TIPO_CLIENTE             IN SOLICITUDES_DICOM.TIPO_CLIENTE%TYPE,
    P_CED_RIF                  IN SOLICITUDES_DICOM.CED_RIF%TYPE,
    P_NOMBRE_CLIENTE           IN SOLICITUDES_DICOM.NOMBRE_CLIENTE%TYPE,
    P_TELEFONO_CLIENTE         IN SOLICITUDES_DICOM.TELEFONO_CLIENTE%TYPE,
    P_CORREO_CLIENTE           IN SOLICITUDES_DICOM.CORREO_CLIENTE%TYPE,
    P_NRO_CTA_NACIONAL         IN SOLICITUDES_DICOM.NRO_CTA_NACIONAL%TYPE,
    P_NRO_RET_CAPITAL          IN SOLICITUDES_DICOM.NRO_RET_CAPITAL%TYPE,
    P_HORA_BLOQ                IN SOLICITUDES_DICOM.HORA_BLOQ%TYPE,
    P_MONTO_OP_NACIONAL        IN SOLICITUDES_DICOM.MONTO_OP_NACIONAL%TYPE,
    P_DIVISA_NACIONAL          IN SOLICITUDES_DICOM.DIVISA_NACIONAL%TYPE,
    P_NRO_RET_COMISION         IN SOLICITUDES_DICOM.NRO_RET_COMISION%TYPE,
    P_MONTO_COMISION           IN SOLICITUDES_DICOM.MONTO_COMISION%TYPE,
    P_PORC_COMISION            IN SOLICITUDES_DICOM.PORC_COMISION%TYPE,
    P_FECHA_OPERACION          IN SOLICITUDES_DICOM.FECHA_OPERACION%TYPE,
    P_NRO_CTA_EXTRANJERA       IN SOLICITUDES_DICOM.NRO_CTA_EXTRANJERA%TYPE,
    P_MONTO_OP_EXTRANJERA      IN SOLICITUDES_DICOM.MONTO_OP_EXTRANJERA%TYPE,
    P_DIVISA_EXTRANJERA        IN SOLICITUDES_DICOM.DIVISA_EXTRANJERA%TYPE,
    P_TASA_CAMBIO              IN SOLICITUDES_DICOM.TASA_CAMBIO%TYPE,
    P_FECHA_VALOR_OPERACION    IN SOLICITUDES_DICOM.FECHA_VALOR_OPERACION%TYPE,
    P_CODIGO_RESPUESTA         IN SOLICITUDES_DICOM.CODIGO_RESPUESTA%TYPE,
    P_NRO_OPE_DEBITO           IN SOLICITUDES_DICOM.NRO_OPE_DEBITO%TYPE,
    P_NRO_OPE_CREDITO          IN SOLICITUDES_DICOM.NRO_OPE_CREDITO%TYPE,
    P_ESTATUS_REGISTRO         IN SOLICITUDES_DICOM.ESTATUS_REGISTRO%TYPE,
    P_ESTATUS_NOTIFICACION_WS  IN SOLICITUDES_DICOM.ESTATUS_NOTIFICACION_WS%TYPE,
    P_ID_JORNADA               IN SOLICITUDES_DICOM.ID_JORNADA%TYPE,
    P_UNDINV_ID                IN SOLICITUDES_DICOM.UNDINV_ID%TYPE)
AS
BEGIN

    NOMBRE_SP:='SP_CREAR_SOLICITUD_DICOM';
         
    --IF  P_NRO_SOLICITUD IS NULL OR P_TIPO_OPERACION IS NULL OR P_TIPO_CLIENTE IS NULL OR P_NRO_CTA_NACIONAL IS NULL OR P_NRO_CTA_EXTRANJERA IS NULL OR P_ESTATUS_REGISTRO IS NULL THEN             
    IF  P_NRO_SOLICITUD IS NULL OR P_ESTATUS_REGISTRO IS NULL THEN             
        MSJ_EXCEPTION:='Error Validacion: '|| NOMBRE_SP||'  - Campo NOT NULL ha sido pasado sin informacion';
        RAISE CRUD_VALIDATION_EXCEPTION;                   
    END IF;

     INSERT INTO SOLICITUDES_DICOM(
         NRO_SOLICITUD,          
        TIPO_OPERACION,         
        TIPO_CLIENTE,           
        CED_RIF,                
        NOMBRE_CLIENTE,         
        TELEFONO_CLIENTE,       
        CORREO_CLIENTE,         
        NRO_CTA_NACIONAL,       
        NRO_RET_CAPITAL,        
        HORA_BLOQ,              
        MONTO_OP_NACIONAL,      
        DIVISA_NACIONAL,        
        NRO_RET_COMISION,       
        MONTO_COMISION,         
        PORC_COMISION,          
        FECHA_OPERACION,        
        NRO_CTA_EXTRANJERA,     
        MONTO_OP_EXTRANJERA,    
        DIVISA_EXTRANJERA,      
        TASA_CAMBIO,            
        FECHA_VALOR_OPERACION,  
        CODIGO_RESPUESTA,       
        NRO_OPE_DEBITO,         
        NRO_OPE_CREDITO,        
        ESTATUS_REGISTRO,       
        ESTATUS_NOTIFICACION_WS,
        ID_JORNADA,             
        UNDINV_ID )
     VALUES (
         P_NRO_SOLICITUD,          
        P_TIPO_OPERACION,         
        P_TIPO_CLIENTE,           
        P_CED_RIF,                
        P_NOMBRE_CLIENTE,         
        P_TELEFONO_CLIENTE,       
        P_CORREO_CLIENTE,         
        P_NRO_CTA_NACIONAL,       
        P_NRO_RET_CAPITAL,        
        P_HORA_BLOQ,              
        P_MONTO_OP_NACIONAL,      
        P_DIVISA_NACIONAL,        
        P_NRO_RET_COMISION,       
        P_MONTO_COMISION,         
        P_PORC_COMISION,          
        P_FECHA_OPERACION,        
        P_NRO_CTA_EXTRANJERA,     
        P_MONTO_OP_EXTRANJERA,    
        P_DIVISA_EXTRANJERA,      
        P_TASA_CAMBIO,            
        P_FECHA_VALOR_OPERACION,  
        P_CODIGO_RESPUESTA,       
        P_NRO_OPE_DEBITO,         
        P_NRO_OPE_CREDITO,        
        P_ESTATUS_REGISTRO,       
        P_ESTATUS_NOTIFICACION_WS,
        P_ID_JORNADA,             
        P_UNDINV_ID             
      );    
            
    EXCEPTION 
            WHEN CRUD_VALIDATION_EXCEPTION  THEN
            BEGIN                
                raise_application_error(-20001,'Validacion: '|| NOMBRE_SP||' : '||MSJ_EXCEPTION);
            END;  
            WHEN OTHERS THEN
            BEGIN
            MSJ_EXCEPTION:='Error Inesperado: '|| NOMBRE_SP||' '||' SQLERRM ' ||SQLERRM ||' SQLCODE ' ||SQLCODE;
            RAISE CRUD_UNEXPECTED_EXCEPTION;
            END;
END SP_CREAR_SOLICITUD_DICOM;  
        FUNCTION GET_SEQUENCE (
        P_TABLE_NAME SEQUENCE_NUMBERS.TABLE_NAME%type
    )
    RETURN SEQUENCE_NUMBERS.NEXT_ID%TYPE IS
    ID_SEQUENCE NUMBER;
    /******************************************************************************
       NAME:       GET_SEQUENCE 
       PURPOSE:    Funcion creada para obtener la secuencia (id) de tabla a insertar
                    Se realiza de esta manera para no cambiar el esquema de manejo de
                    secuencias usado en la aplicación 

       REVISIONS:
       Ver        Date        Author           Description
       ---------  ----------  ---------------  ------------------------------------
       1.0        18/05/2017          1. Created this function.

       NOTES:

       Automatically available Auto Replace Keywords:
          Object Name:     GET_SEQUENCE
          Sysdate:         18/05/2017
          Date and Time:   18/05/2017, 04:10:45 p.m., and 18/05/2017 04:10:45 p.m.
          Username:         NM25287 
          Table Name:       SEQUENCE_NUMBERS 

    ******************************************************************************/
    BEGIN
       ID_SEQUENCE := 0;
       
       UPDATE SEQUENCE_NUMBERS 
        SET NEXT_ID = NEXT_ID + 1 
        WHERE TABLE_NAME = P_TABLE_NAME;
             
       SELECT NEXT_ID 
        INTO ID_SEQUENCE
        FROM SEQUENCE_NUMBERS 
        WHERE TABLE_NAME = P_TABLE_NAME;
       
       RETURN ID_SEQUENCE;
       EXCEPTION
         WHEN NO_DATA_FOUND THEN
         BEGIN
         --DBMS_OUTPUT.PUT_LINE('ERROR GET SEQ '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE);
           RAISE;
         END;
         WHEN OTHERS THEN
          BEGIN
         --DBMS_OUTPUT.PUT_LINE('OTHERS ERROR GET SEQ '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE);
           RAISE;
         END;
    END GET_SEQUENCE;
                                                        
                                                 

END PK_INFI_CRUD_RESP_IGTF;
/


CREATE OR REPLACE PACKAGE BODY ADM_INFI.PK_INFI_CRUD_TRANSF_DICOM
IS
--
-- To modify this template, edit file PKGBODY.TXT in TEMPLATE 
-- directory of SQL Navigator
--
-- Purpose: Briefly explain the functionality of the package body
--
-- MODIFICATION HISTORY
-- Person      Date    Comments
-- ---------   ------  ------------------------------------------      
   -- Enter procedure, function bodies as shown below

   PROCEDURE SP_CREAR_ORDEN(p_UNIINV_ID               IN INFI_TB_204_ORDENES.UNIINV_ID%TYPE,
                                                      p_CLIENT_ID               IN INFI_TB_204_ORDENES.CLIENT_ID%TYPE,
                                                      p_ORDSTA_ID               IN INFI_TB_204_ORDENES.ORDSTA_ID%TYPE,
                                                      p_SISTEMA_ID              IN INFI_TB_204_ORDENES.SISTEMA_ID%TYPE,
                                                      p_EMPRES_ID               IN INFI_TB_204_ORDENES.EMPRES_ID%TYPE,
                                                      p_CONTRAPARTE             IN INFI_TB_204_ORDENES.CONTRAPARTE%TYPE,
                                                      p_TRANSA_ID               IN INFI_TB_204_ORDENES.TRANSA_ID%TYPE,
                                                      p_ENVIADO                 IN INFI_TB_204_ORDENES.ENVIADO%TYPE,
                                                      p_ORDENE_CTE_SEG_BCO      IN INFI_TB_204_ORDENES.ORDENE_CTE_SEG_BCO%TYPE,
                                                      p_ORDENE_CTE_SEG_SEG      IN INFI_TB_204_ORDENES.ORDENE_CTE_SEG_SEG%TYPE,
                                                      p_ORDENE_CTE_SEG_SUB      IN INFI_TB_204_ORDENES.ORDENE_CTE_SEG_SUB%TYPE,
                                                      p_ORDENE_CTE_SEG_INFI     IN INFI_TB_204_ORDENES.ORDENE_CTE_SEG_INFI%TYPE,
                                                      p_ORDENE_PED_FE_ORDEN     IN INFI_TB_204_ORDENES.ORDENE_PED_FE_ORDEN%TYPE,
                                                      p_ORDENE_PED_FE_VALOR     IN INFI_TB_204_ORDENES.ORDENE_PED_FE_VALOR%TYPE,
                                                      p_ORDENE_PED_MONTO        IN INFI_TB_204_ORDENES.ORDENE_PED_MONTO%TYPE,
                                                      p_ORDENE_PED_TOTAL_PEND   IN INFI_TB_204_ORDENES.ORDENE_PED_TOTAL_PEND%TYPE,
                                                      p_ORDENE_PED_TOTAL        IN INFI_TB_204_ORDENES.ORDENE_PED_TOTAL%TYPE,
                                                      p_ORDENE_PED_INT_CAIDOS   IN INFI_TB_204_ORDENES.ORDENE_PED_INT_CAIDOS%TYPE,
                                                      p_BLOTER_ID               IN INFI_TB_204_ORDENES.BLOTER_ID%TYPE,
                                                      p_ORDENE_PED_CTA_BSNRO    IN INFI_TB_204_ORDENES.ORDENE_PED_CTA_BSNRO%TYPE,
                                                      p_ORDENE_PED_CTA_BSTIP    IN INFI_TB_204_ORDENES.ORDENE_PED_CTA_BSTIP%TYPE,
                                                      p_CTECTA_NUMERO           IN INFI_TB_204_ORDENES.CTECTA_NUMERO%TYPE,
                                                      p_ORDENE_PED_PRECIO       IN INFI_TB_204_ORDENES.ORDENE_PED_PRECIO%TYPE,
                                                      p_ORDENE_PED_RENDIMIENTO  IN INFI_TB_204_ORDENES.ORDENE_PED_RENDIMIENTO%TYPE,
                                                      p_ORDENE_PED_IN_BDV       IN INFI_TB_204_ORDENES.ORDENE_PED_IN_BDV%TYPE,
                                                      p_MONEDA_ID               IN INFI_TB_204_ORDENES.MONEDA_ID%TYPE,
                                                      p_ORDENE_PED_RCP_PRECIO   IN INFI_TB_204_ORDENES.ORDENE_PED_RCP_PRECIO%TYPE,
                                                      p_ORDENE_ADJ_MONTO        IN INFI_TB_204_ORDENES.ORDENE_ADJ_MONTO%TYPE,
                                                      p_ORDENE_USR_NOMBRE       IN INFI_TB_204_ORDENES.ORDENE_USR_NOMBRE%TYPE,
                                                      p_ORDENE_USR_CEN_CONTABLE IN INFI_TB_204_ORDENES.ORDENE_USR_CEN_CONTABLE%TYPE,
                                                      p_ORDENE_USR_SUCURSAL     IN INFI_TB_204_ORDENES.ORDENE_USR_SUCURSAL%TYPE,
                                                      p_ORDENE_USR_TERMINAL     IN INFI_TB_204_ORDENES.ORDENE_USR_TERMINAL%TYPE,
                                                      p_ORDENE_VEH_TOM          IN INFI_TB_204_ORDENES.ORDENE_VEH_TOM%TYPE,
                                                      p_ORDENE_VEH_COL          IN INFI_TB_204_ORDENES.ORDENE_VEH_COL%TYPE,
                                                      p_ORDENE_VEH_REC          IN INFI_TB_204_ORDENES.ORDENE_VEH_REC%TYPE,
                                                      p_ORDENE_EJEC_ID          IN INFI_TB_204_ORDENES.ORDENE_EJEC_ID%TYPE,
                                                      p_ORDENE_FE_ULT_ACT       IN INFI_TB_204_ORDENES.ORDENE_FE_ULT_ACT%TYPE,
                                                      p_ORDENE_PED_COMISIONES   IN INFI_TB_204_ORDENES.ORDENE_PED_COMISIONES%TYPE,
                                                      p_ORDENE_FINANCIADO       IN INFI_TB_204_ORDENES.ORDENE_FINANCIADO%TYPE,
                                                      p_EJECUCION_ID            IN INFI_TB_204_ORDENES.EJECUCION_ID%TYPE,
                                                      p_ORDENE_TASA_POOL        IN INFI_TB_204_ORDENES.ORDENE_TASA_POOL%TYPE,
                                                      p_ORDENE_GANANCIA_RED     IN INFI_TB_204_ORDENES.ORDENE_GANANCIA_RED%TYPE,
                                                      p_ORDENE_COMISION_OFICINA IN INFI_TB_204_ORDENES.ORDENE_COMISION_OFICINA%TYPE,
                                                      p_ORDENE_COMISION_OPERACION  IN INFI_TB_204_ORDENES.ORDENE_COMISION_OPERACION%TYPE,
                                                      p_ORDENE_OPERAC_PEND         IN INFI_TB_204_ORDENES.ORDENE_OPERAC_PEND%TYPE,
                                                      p_ORDENE_ID_RELACION         IN INFI_TB_204_ORDENES.ORDENE_ID_RELACION%TYPE,
                                                      p_ORDENE_TASA_CAMBIO         IN INFI_TB_204_ORDENES.ORDENE_TASA_CAMBIO%TYPE,
                                                      p_CONCEPTO_ID                IN INFI_TB_204_ORDENES.CONCEPTO_ID%TYPE,
                                                      p_ORDENE_OBSERVACION         IN INFI_TB_204_ORDENES.ORDENE_OBSERVACION%TYPE,
                                                      p_TIPO_PRODUCTO_ID           IN INFI_TB_204_ORDENES.TIPO_PRODUCTO_ID%TYPE,
                                                      p_CTA_ABONO                  IN INFI_TB_204_ORDENES.CTA_ABONO%TYPE,
                                                      p_PORC_COMISION_IGTF         IN INFI_TB_204_ORDENES.ORDENE_PED_PORC_COMISION_IGTF%TYPE,
                                                      p_COMISION_IGTF              IN INFI_TB_204_ORDENES.ORDENE_PED_COMISION_IGTF%TYPE,
                                                      p_ORDENE_ID                  OUT INFI_TB_204_ORDENES.ORDENE_ID%TYPE

) AS

BEGIN 
    
            IF P_CLIENT_ID IS NULL OR P_ORDSTA_ID IS NULL OR P_TRANSA_ID IS NULL OR P_ORDENE_PED_FE_ORDEN IS NULL OR P_ORDENE_PED_FE_VALOR IS NULL OR P_ORDENE_PED_IN_BDV IS NULL THEN--OR  P_ORDENE_ESTATUS_BCV IS NULL OR P_ORDENE_IDBCV THEN                      
                CRUD_MSJ_EXCEPTION:='Error Validacion: SP_CREAR_ORDEN  - Campo NOT NULL h sido pasado sin informacion';
                RAISE CRUD_VALIDATION_EXCEPTION;                   
            END IF;
                        v_secuencia_ordenes:=GET_SEQUENCE('INFI_TB_204_ORDENES');--BUSQUEDA DE ID DE NUEVA ORDEN
                        p_ORDENE_ID:=v_secuencia_ordenes;
                                   
                        INSERT INTO INFI_TB_204_ORDENES (ORDENE_ID,
                                                         UNIINV_ID,
                                                         CLIENT_ID,
                                                         ORDSTA_ID, 
                                                         SISTEMA_ID,
                                                         EMPRES_ID,
                                                         CONTRAPARTE,
                                                         TRANSA_ID,
                                                         ENVIADO,
                                                         ORDENE_CTE_SEG_BCO,
                                                         ORDENE_CTE_SEG_SEG, 
                                                         ORDENE_CTE_SEG_SUB,
                                                         ORDENE_CTE_SEG_INFI,
                                                         ORDENE_PED_FE_ORDEN,
                                                         ORDENE_PED_FE_VALOR, 
                                                         ORDENE_PED_MONTO,
                                                         ORDENE_PED_TOTAL_PEND,
                                                         ORDENE_PED_TOTAL,
                                                         ORDENE_PED_INT_CAIDOS,
                                                         BLOTER_ID, 
                                                         ORDENE_PED_CTA_BSNRO,
                                                         ORDENE_PED_CTA_BSTIP,
                                                         CTECTA_NUMERO,
                                                         ORDENE_PED_PRECIO, 
                                                         ORDENE_PED_RENDIMIENTO,
                                                         ORDENE_PED_IN_BDV,
                                                         MONEDA_ID,
                                                         ORDENE_PED_RCP_PRECIO,
                                                         ORDENE_ADJ_MONTO, 
                                                         ORDENE_USR_NOMBRE,
                                                         ORDENE_USR_CEN_CONTABLE,
                                                         ORDENE_USR_SUCURSAL,
                                                         ORDENE_USR_TERMINAL, 
                                                         ORDENE_VEH_TOM,
                                                         ORDENE_VEH_COL,
                                                         ORDENE_VEH_REC,
                                                         ORDENE_EJEC_ID,
                                                         ORDENE_FE_ULT_ACT,
                                                         ORDENE_PED_COMISIONES,
                                                         ORDENE_FINANCIADO,
                                                         EJECUCION_ID,
                                                         ORDENE_TASA_POOL,
                                                         ORDENE_GANANCIA_RED, 
                                                         ORDENE_COMISION_OFICINA, 
                                                         ORDENE_COMISION_OPERACION, 
                                                         ORDENE_OPERAC_PEND, 
                                                         ORDENE_ID_RELACION, 
                                                         ORDENE_TASA_CAMBIO,
                                                         CONCEPTO_ID,
                                                         ORDENE_OBSERVACION,
                                                         TIPO_PRODUCTO_ID,
                                                         CTA_ABONO,
                                                         ORDENE_PED_PORC_COMISION_IGTF,
                                                         ORDENE_PED_COMISION_IGTF)                                                           
                                                         VALUES(
                                                          v_secuencia_ordenes,
                                                          p_UNIINV_ID,
                                                          p_CLIENT_ID,
                                                          p_ORDSTA_ID,
                                                          p_SISTEMA_ID,
                                                          p_EMPRES_ID,
                                                          p_CONTRAPARTE,
                                                          p_TRANSA_ID,
                                                          p_ENVIADO,
                                                          p_ORDENE_CTE_SEG_BCO,
                                                          p_ORDENE_CTE_SEG_SEG,
                                                          p_ORDENE_CTE_SEG_SUB,
                                                          p_ORDENE_CTE_SEG_INFI,
                                                          p_ORDENE_PED_FE_ORDEN,
                                                          p_ORDENE_PED_FE_VALOR,
                                                          p_ORDENE_PED_MONTO,
                                                          p_ORDENE_PED_TOTAL_PEND,
                                                          p_ORDENE_PED_TOTAL,
                                                          p_ORDENE_PED_INT_CAIDOS,
                                                          p_BLOTER_ID,
                                                          p_ORDENE_PED_CTA_BSNRO,
                                                          p_ORDENE_PED_CTA_BSTIP,
                                                          p_CTECTA_NUMERO       ,
                                                          p_ORDENE_PED_PRECIO   ,
                                                          p_ORDENE_PED_RENDIMIENTO,
                                                          p_ORDENE_PED_IN_BDV     ,
                                                          p_MONEDA_ID             ,
                                                          p_ORDENE_PED_RCP_PRECIO ,
                                                          p_ORDENE_ADJ_MONTO      ,
                                                          p_ORDENE_USR_NOMBRE     ,
                                                          p_ORDENE_USR_CEN_CONTABLE,
                                                          p_ORDENE_USR_SUCURSAL    ,
                                                          p_ORDENE_USR_TERMINAL    ,
                                                          p_ORDENE_VEH_TOM         ,
                                                          p_ORDENE_VEH_COL         ,
                                                          p_ORDENE_VEH_REC         ,
                                                          p_ORDENE_EJEC_ID         ,
                                                          p_ORDENE_FE_ULT_ACT      ,
                                                          p_ORDENE_PED_COMISIONES  ,
                                                          p_ORDENE_FINANCIADO      ,
                                                          p_EJECUCION_ID           ,
                                                          p_ORDENE_TASA_POOL       ,
                                                          p_ORDENE_GANANCIA_RED    ,
                                                          p_ORDENE_COMISION_OFICINA,
                                                          p_ORDENE_COMISION_OPERACION,
                                                          p_ORDENE_OPERAC_PEND       ,
                                                          p_ORDENE_ID_RELACION       ,
                                                          p_ORDENE_TASA_CAMBIO       ,
                                                          p_CONCEPTO_ID              ,
                                                          p_ORDENE_OBSERVACION       ,
                                                          p_TIPO_PRODUCTO_ID         ,
                                                          p_CTA_ABONO                ,
                                                          p_PORC_COMISION_IGTF       ,
                                                          p_COMISION_IGTF);
            
           EXCEPTION
          WHEN CRUD_VALIDATION_EXCEPTION THEN
          BEGIN
          CRUD_MSJ_EXCEPTION:='Error de Validacion: SP_CREAR_ORDEN '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
            RAISE CRUD_VALIDATION_EXCEPTION;
          END;
          WHEN OTHERS THEN    
          BEGIN
          ROLLBACK;  
          CRUD_MSJ_EXCEPTION:='Error Inesperado: SP_CREAR_ORDEN '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
          RAISE CRUD_UNEXPECTED_EXCEPTION;
          END;
            
                                                                          
END SP_CREAR_ORDEN;
 PROCEDURE SP_CREAR_OPERACION(p_ORDENE_ID              IN INFI_TB_207_ORDENES_OPERACION.ORDENE_ID%TYPE,                                                         
                                                         p_TRNFIN_ID              IN INFI_TB_207_ORDENES_OPERACION.TRNFIN_ID%TYPE,
                                                         p_STATUS_OPERACION       IN INFI_TB_207_ORDENES_OPERACION.STATUS_OPERACION%TYPE,
                                                         p_APLICA_REVERSO         IN INFI_TB_207_ORDENES_OPERACION.APLICA_REVERSO%TYPE,
                                                         p_MONTO_OPERACION        IN INFI_TB_207_ORDENES_OPERACION.MONTO_OPERACION%TYPE,
                                                         p_TASA                   IN INFI_TB_207_ORDENES_OPERACION.TASA%TYPE,
                                                         p_FECHA_APLICAR          IN INFI_TB_207_ORDENES_OPERACION.FECHA_APLICAR%TYPE,
                                                         p_FECHA_PROCESADA        IN INFI_TB_207_ORDENES_OPERACION.FECHA_PROCESADA%TYPE,
                                                         p_ORDENE_OPERACION_ERROR IN INFI_TB_207_ORDENES_OPERACION.ORDENE_OPERACION_ERROR%TYPE,
                                                         p_SERIAL                 IN INFI_TB_207_ORDENES_OPERACION.SERIAL%TYPE,
                                                         p_IN_COMISION            IN INFI_TB_207_ORDENES_OPERACION.IN_COMISION%TYPE,
                                                         p_MONEDA_ID              IN INFI_TB_207_ORDENES_OPERACION.MONEDA_ID%TYPE,
                                                         p_CTECTA_NUMERO          IN INFI_TB_207_ORDENES_OPERACION.CTECTA_NUMERO%TYPE,
                                                         p_OPERACION_NOMBRE       IN INFI_TB_207_ORDENES_OPERACION.OPERACION_NOMBRE%TYPE,
                                                         p_CTECTA_NOMBRE          IN INFI_TB_207_ORDENES_OPERACION.CTECTA_NOMBRE%TYPE,
                                                         p_CTECTA_BCOCTA_BCO      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_BCO%TYPE,                                                         
                                                         p_CTECTA_BCOCTA_DIRECCION IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_DIRECCION%TYPE,
                                                         p_CTECTA_BCOCTA_SWIFT    IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_SWIFT%TYPE,
                                                         p_CTECTA_BCOCTA_BIC      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_BIC%TYPE,
                                                         p_CTECTA_BCOCTA_TELEFONO IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_TELEFONO%TYPE,
                                                         p_CTECTA_BCOCTA_ABA      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_ABA%TYPE,
                                                         p_CTECTA_BCOCTA_PAIS     IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOCTA_PAIS%TYPE,
                                                         p_CTECTA_BCOINT_BCO      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_BCO%TYPE,
                                                         p_CTECTA_BCOINT_DIRECCION IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_DIRECCION%TYPE,
                                                         p_CTECTA_BCOINT_SWIFT    IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_SWIFT%TYPE,
                                                         p_CTECTA_BCOINT_BIC      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_BIC%TYPE,
                                                         p_CTECTA_BCOINT_TELEFONO IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_TELEFONO%TYPE,
                                                         p_CTECTA_BCOINT_ABA      IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_ABA%TYPE,
                                                         p_CTECTA_BCOINT_PAIS     IN INFI_TB_207_ORDENES_OPERACION.CTECTA_BCOINT_PAIS%TYPE,
                                                         p_TRNF_TIPO              IN INFI_TB_207_ORDENES_OPERACION.TRNF_TIPO%TYPE,
                                                         p_TITULO_ID              IN INFI_TB_207_ORDENES_OPERACION.TITULO_ID%TYPE,
                                                         p_CODIGO_OPERACION       IN INFI_TB_207_ORDENES_OPERACION.CODIGO_OPERACION%TYPE,
                                                         p_NUMERO_RETENCION       IN INFI_TB_207_ORDENES_OPERACION.NUMERO_RETENCION%TYPE,
                                                         p_ORDENE_RELAC_OPERACION_ID IN INFI_TB_207_ORDENES_OPERACION.ORDENE_RELAC_OPERACION_ID%TYPE,
                                                         p_FECHA_INICIO_CP        IN INFI_TB_207_ORDENES_OPERACION.FECHA_INICIO_CP%TYPE,
                                                         p_FECHA_FIN_CP           IN INFI_TB_207_ORDENES_OPERACION.FECHA_FIN_CP%TYPE,
                                                         p_IN_COMISION_INVARIABLE IN INFI_TB_207_ORDENES_OPERACION.IN_COMISION_INVARIABLE%TYPE

) AS

BEGIN 

        
            IF p_ORDENE_ID IS NULL OR p_MONTO_OPERACION IS NULL OR p_STATUS_OPERACION IS NULL OR p_TRNFIN_ID IS NULL THEN                      
            CRUD_MSJ_EXCEPTION:='Error Validacion: SP_CREAR_OPERACION  - Campo NOT NULL sido pasado sin informacion';
            RAISE CRUD_VALIDATION_EXCEPTION;                   
            END IF;

                  v_secuencia_operacion:=GET_SEQUENCE('INFI_TB_207_ORDENES_OPERACION');--BUSQUEDA DE ID DE NUEVA ORDEN

                                                         INSERT INTO INFI_TB_207_ORDENES_OPERACION (
                                                                ORDENE_ID,
                                                                ORDENE_OPERACION_ID, 
                                                                TRNFIN_ID,STATUS_OPERACION, 
                                                                APLICA_REVERSO,
                                                                MONTO_OPERACION,
                                                                TASA,
                                                                FECHA_APLICAR,
                                                                FECHA_PROCESADA, 
                                                                ORDENE_OPERACION_ERROR,
                                                                SERIAL,
                                                                IN_COMISION,
                                                                MONEDA_ID,                     
                                                                CTECTA_NUMERO, 
                                                                OPERACION_NOMBRE, 
                                                                CTECTA_NOMBRE,
                                                                CTECTA_BCOCTA_BCO,
                                                                CTECTA_BCOCTA_DIRECCION,
                                                                CTECTA_BCOCTA_SWIFT, 
                                                                CTECTA_BCOCTA_BIC,
                                                                CTECTA_BCOCTA_TELEFONO,
                                                                CTECTA_BCOCTA_ABA,
                                                                CTECTA_BCOCTA_PAIS,
                                                                CTECTA_BCOINT_BCO, 
                                                                CTECTA_BCOINT_DIRECCION,
                                                                CTECTA_BCOINT_SWIFT,
                                                                CTECTA_BCOINT_BIC,
                                                                CTECTA_BCOINT_TELEFONO,
                                                                CTECTA_BCOINT_ABA,    
                                                                CTECTA_BCOINT_PAIS,
                                                                TRNF_TIPO,TITULO_ID,
                                                                CODIGO_OPERACION,
                                                                NUMERO_RETENCION,
                                                                ORDENE_RELAC_OPERACION_ID,
                                                                FECHA_INICIO_CP,
                                                                FECHA_FIN_CP,
                                                                IN_COMISION_INVARIABLE)                     
                                                                VALUES
                                                                 (p_ORDENE_ID,
                                                                 v_secuencia_operacion,
                                                                 p_TRNFIN_ID,
                                                                 p_STATUS_OPERACION,
                                                                 p_APLICA_REVERSO,
                                                                 p_MONTO_OPERACION,
                                                                 p_TASA,
                                                                 p_FECHA_APLICAR,
                                                                 p_FECHA_PROCESADA,
                                                                 p_ORDENE_OPERACION_ERROR,
                                                                 p_SERIAL,
                                                                 p_IN_COMISION,
                                                                 p_MONEDA_ID,
                                                                 p_CTECTA_NUMERO,
                                                                 p_OPERACION_NOMBRE,
                                                                 p_CTECTA_NOMBRE,
                                                                 p_CTECTA_BCOCTA_BCO,
                                                                 p_CTECTA_BCOCTA_DIRECCION,
                                                                 p_CTECTA_BCOCTA_SWIFT,
                                                                 p_CTECTA_BCOCTA_BIC,
                                                                 p_CTECTA_BCOCTA_TELEFONO,
                                                                 p_CTECTA_BCOCTA_ABA,
                                                                 p_CTECTA_BCOCTA_PAIS,
                                                                 p_CTECTA_BCOINT_BCO,
                                                                 p_CTECTA_BCOINT_DIRECCION,
                                                                 p_CTECTA_BCOINT_SWIFT,
                                                                 p_CTECTA_BCOINT_BIC,
                                                                 p_CTECTA_BCOINT_TELEFONO,
                                                                 p_CTECTA_BCOINT_ABA,
                                                                 p_CTECTA_BCOINT_PAIS,
                                                                 p_TRNF_TIPO,
                                                                 p_TITULO_ID,
                                                                 p_CODIGO_OPERACION,
                                                                 p_NUMERO_RETENCION,
                                                                 p_ORDENE_RELAC_OPERACION_ID,
                                                                 p_FECHA_INICIO_CP,
                                                                 p_FECHA_FIN_CP,
                                                                 p_IN_COMISION_INVARIABLE);
          EXCEPTION
          WHEN CRUD_VALIDATION_EXCEPTION THEN
          BEGIN
          CRUD_MSJ_EXCEPTION:='Error de Validacion: SP_CREAR_OPERACION '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
            RAISE CRUD_VALIDATION_EXCEPTION;
          END;
          WHEN OTHERS THEN    
          BEGIN
          ROLLBACK;  
          CRUD_MSJ_EXCEPTION:='Error Inesperado: SP_CREAR_OPERACION '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
          RAISE CRUD_UNEXPECTED_EXCEPTION;
          END;  
            
END SP_CREAR_OPERACION;

PROCEDURE SP_CREAR_CLIENTE(p_TIPPER_ID        IN INFI_TB_201_CTES.TIPPER_ID%TYPE,
                            p_CLIENT_CEDRIF   IN INFI_TB_201_CTES.CLIENT_CEDRIF%TYPE,
                            p_CLIENT_NOMBRE   IN INFI_TB_201_CTES.CLIENT_NOMBRE%TYPE,
                            p_CLIENT_TELEFONO IN INFI_TB_201_CTES.CLIENT_TELEFONO%TYPE,
                            p_CLIENT_CORREO_ELECTRONICO IN INFI_TB_201_CTES.CLIENT_CORREO_ELECTRONICO%TYPE,
                            p_CTESEG_ID      IN INFI_TB_201_CTES.CTESEG_ID%TYPE,
                            p_NUMERO_PERSONA IN INFI_TB_201_CTES.NUMERO_PERSONA%TYPE,
                            p_CLIENT_ID      OUT INFI_TB_201_CTES.CLIENT_ID%TYPE) AS
                            
                            
                            v_CLIENT_CTA_CUSTOD_ID SEQUENCE_NUMBERS.NEXT_ID%TYPE;

BEGIN 

                            IF p_TIPPER_ID IS NULL OR p_CLIENT_CEDRIF IS NULL OR p_CLIENT_NOMBRE IS NULL THEN                      
                                CRUD_MSJ_EXCEPTION:='Error Validacion: SP_CREAR_CLIENTE  - Campo NOT NULL sido pasado sin informacion';
                                RAISE CRUD_VALIDATION_EXCEPTION;                   
                            END IF;
                            
                            v_secuencia_cliente:=GET_SEQUENCE('INFI_TB_201_CTES');--BUSQUEDA DE ID DE NUEVA ORDEN
                            p_CLIENT_ID:=v_secuencia_cliente;
                            v_CLIENT_CTA_CUSTOD_ID:=GET_SEQUENCE('CTA_CUSTODIA');
                            
                            INSERT INTO INFI_TB_201_CTES (CLIENT_ID,
                                                          TIPPER_ID,
                                                          CLIENT_CEDRIF,
                                                          CLIENT_NOMBRE,
                                                          CLIENT_TELEFONO,
                                                          CLIENT_CTA_CUSTOD_ID,
                                                          CLIENT_CTA_CUSTOD_FECHA,
                                                          CLIENT_CORREO_ELECTRONICO,
                                                          CTESEG_ID,
                                                          NUMERO_PERSONA) 
                                                    values (v_secuencia_cliente,
                                                            p_TIPPER_ID,
                                                            p_CLIENT_CEDRIF,
                                                            p_CLIENT_NOMBRE,
                                                            p_CLIENT_TELEFONO,
                                                             v_CLIENT_CTA_CUSTOD_ID,
                                                             SYSDATE,
                                                            p_CLIENT_CORREO_ELECTRONICO,
                                                            p_CTESEG_ID,
                                                            p_NUMERO_PERSONA
                                                            );
                                                            
                                                              
            EXCEPTION
          WHEN CRUD_VALIDATION_EXCEPTION THEN
          BEGIN
          CRUD_MSJ_EXCEPTION:='Error de Validacion: SP_CREAR_CLIENTE '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
            RAISE CRUD_VALIDATION_EXCEPTION;
          END;
          WHEN OTHERS THEN    
          BEGIN
          ROLLBACK;  
          CRUD_MSJ_EXCEPTION:='Error Inesperado: SP_CREAR_CLIENTE '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
          RAISE CRUD_UNEXPECTED_EXCEPTION;
          END;   
--            WHEN OTHERS THEN
--            BEGIN
--            ROLLBACK;  
--            CRUD_MSJ_EXCEPTION:='Error Inesperado: SP_CREAR_CLIENTE '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
--            RAISE CRUD_UNEXPECTED_EXCEPTION;                           
--            END;
            
END SP_CREAR_CLIENTE;   

PROCEDURE SP_ACTIALIZAR_SOLICITUD_DICOM( p_NRO_SOLICITUD         IN  SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
                                         P_NRO_JORNADA          IN  SOLICITUDES_DICOM.ID_JORNADA%TYPE,
                                         P_CODIGO_RESPUESTA     IN  SOLICITUDES_DICOM.CODIGO_RESPUESTA%TYPE,
                                         p_NOMBRE_CLIENTE       IN SOLICITUDES_DICOM.NOMBRE_CLIENTE%TYPE,
                                         p_TELEFONO_CLIENTE     IN SOLICITUDES_DICOM.TELEFONO_CLIENTE%TYPE,
                                         p_CORREO_CLIENTE       IN SOLICITUDES_DICOM.CORREO_CLIENTE%TYPE,
                                         p_NRO_RET_CAPITAL      IN SOLICITUDES_DICOM.NRO_RET_CAPITAL%TYPE,
                                         p_HORA_BLOQ            IN SOLICITUDES_DICOM.HORA_BLOQ%TYPE,
                                         p_DIVISA_NACIONAL      IN SOLICITUDES_DICOM.DIVISA_NACIONAL%TYPE,
                                         p_NRO_RET_COMISION     IN SOLICITUDES_DICOM.NRO_RET_COMISION%TYPE,
                                         p_MONTO_COMISION       IN SOLICITUDES_DICOM.MONTO_COMISION%TYPE,
                                         p_PORC_COMISION        IN SOLICITUDES_DICOM.PORC_COMISION%TYPE,
                                         p_DIVISA_EXTRANJERA    IN SOLICITUDES_DICOM.DIVISA_EXTRANJERA%TYPE,
                                         p_TASA_CAMBIO          IN SOLICITUDES_DICOM.TASA_CAMBIO%TYPE,
                                         P_NRO_OPE_DEBITO       IN  SOLICITUDES_DICOM.NRO_OPE_DEBITO%TYPE,
                                         P_NRO_OPE_CREDITO      IN  SOLICITUDES_DICOM.NRO_OPE_CREDITO%TYPE,
                                         P_UNDINV_ID            IN INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%TYPE                                         
                                         ) AS           

    v_query     VARCHAR2(1000);
                                         
    BEGIN
    v_query:='UPDATE SOLICITUDES_DICOM SET ';
    
    IF P_CODIGO_RESPUESTA IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' CODIGO_RESPUESTA='||''''||P_CODIGO_RESPUESTA||''''||', ');
    END IF;
            
    IF p_NOMBRE_CLIENTE IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' NOMBRE_CLIENTE='||''''||p_NOMBRE_CLIENTE||''''||', ');
    END IF;
    
    IF p_TELEFONO_CLIENTE IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' TELEFONO_CLIENTE='||''''||p_TELEFONO_CLIENTE||''''||', ');
    END IF;
    
    IF p_CORREO_CLIENTE IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' CORREO_CLIENTE='||''''||p_CORREO_CLIENTE||''''||', ');
    END IF;
    
    IF p_NRO_RET_CAPITAL IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' NRO_RET_CAPITAL='||''''||p_NRO_RET_CAPITAL||''''||', ');
    END IF;
    
    IF p_HORA_BLOQ IS NOT NULL THEN
    flag_sent_correc:=1;    
    v_query:=CONCAT(v_query,' HORA_BLOQ='||''''||p_HORA_BLOQ||''''||', ');
    END IF;
    
    IF p_DIVISA_NACIONAL IS NOT NULL THEN
    flag_sent_correc:=1;    
    v_query:=CONCAT(v_query,' DIVISA_NACIONAL='||''''||p_DIVISA_NACIONAL||''''||', ');
    END IF;
    
    IF p_NRO_RET_COMISION IS NOT NULL THEN
    flag_sent_correc:=1;        
    v_query:=CONCAT(v_query,' NRO_RET_COMISION='||''''||p_NRO_RET_COMISION||''''||', ');
    END IF;
    
    IF p_MONTO_COMISION IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' MONTO_COMISION='||to_char(p_MONTO_COMISION,'0999999999999.99')|| ', ');--NUMERICO  
    END IF;
    
    IF p_PORC_COMISION IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' PORC_COMISION='||to_char(p_PORC_COMISION, '099.99')|| ', ');--NUMERICO 
    END IF;
    
    IF p_DIVISA_EXTRANJERA IS NOT NULL THEN
    flag_sent_correc:=1;    
    v_query:=CONCAT(v_query,' DIVISA_EXTRANJERA='||''''||p_DIVISA_EXTRANJERA||''''||', ');
    END IF;
    
    IF p_TASA_CAMBIO IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' TASA_CAMBIO='||to_char(p_TASA_CAMBIO, '099999.9999')|| ', ');--NUMERICO 
    END IF;
            
    IF P_NRO_OPE_DEBITO IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' NRO_OPE_DEBITO='||P_NRO_OPE_DEBITO|| ', ');--NUMERICO
    END IF;
    
    IF P_NRO_OPE_CREDITO IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' NRO_OPE_CREDITO='||P_NRO_OPE_CREDITO|| ', ');--NUMERICO
    END IF;

    IF P_UNDINV_ID IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' UNDINV_ID='||P_UNDINV_ID|| ', ');--NUMERICO
    END IF;                 
                 
    
       IF flag_sent_correc=0 THEN
       CRUD_MSJ_EXCEPTION:='Error Validacion: SP_ACTIALIZAR_SOLICITUD_DICOM  - No se ha ingresado ningun campo para ser modificado';
       RAISE CRUD_VALIDATION_EXCEPTION;       
       ELSE
       v_query:=CONCAT(v_query,' ESTATUS_REGISTRO=1 ');
       END IF;
       
    --v_query:=SUBSTR(v_query,0,(Length(v_query)-2));
    v_query:=CONCAT(v_query,' WHERE NRO_SOLICITUD='||''''||P_NRO_SOLICITUD||''''||' ');
    v_query:=CONCAT(v_query,' AND ID_JORNADA=' ||''''||P_NRO_JORNADA||''''||'');
       DBMS_OUTPUT.put_line('QUERY --> ' || v_query);                                                
    EXECUTE IMMEDIATE v_query;                
       EXCEPTION
          WHEN CRUD_VALIDATION_EXCEPTION THEN
          BEGIN
            RAISE CRUD_VALIDATION_EXCEPTION;
          END;
          WHEN OTHERS THEN  
          BEGIN  
          ROLLBACK;  
          CRUD_MSJ_EXCEPTION:='Error Inesperado: SP_ACTIALIZAR_SOLICITUD_DICOM '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
          RAISE CRUD_UNEXPECTED_EXCEPTION;
          END;             
                   
END SP_ACTIALIZAR_SOLICITUD_DICOM;     

  PROCEDURE SP_CREAR_UNIDAD_INVERSION (
          P_UNDINV_ID                    OUT  INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%type,            
          P_UNDINV_NOMBRE                   IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_NOMBRE%type,                   
          P_UNDINV_DESCRIPCION              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_DESCRIPCION%type,              
          P_INSFIN_ID                       IN  INFI_TB_106_UNIDAD_INVERSION.INSFIN_ID%type,                       
          P_UNDINV_EMISION                  IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_EMISION%type,                  
          P_UNDINV_SERIE                    IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_SERIE%type,                    
          P_UNDINV_TASA_CAMBIO              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_TASA_CAMBIO%type,              
          P_UNDINV_FE_EMISION               IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_EMISION%type,               
          P_UNDINV_IN_VTA_EMPLEADOS         IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_IN_VTA_EMPLEADOS%type,         
          P_TPPEVA_ID                       IN  INFI_TB_106_UNIDAD_INVERSION.TPPEVA_ID%type,                       
          P_UNDINV_PRECIO_MINIMO            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_PRECIO_MINIMO%type,            
          P_UNDINV_COMENTARIOS              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_COMENTARIOS%type,              
          P_UNDINV_DOC_BDV                  IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_DOC_BDV%type,                  
          P_UNDINV_DOC_EMISOR               IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_DOC_EMISOR%type,               
          P_UNDINV_FE_ADJUDICACION          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_ADJUDICACION%type,          
          P_UNDINV_FE_LIQUIDACION           IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_LIQUIDACION%type,           
          P_UNDINV_FE_CIERRE                IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_CIERRE%type,                
          P_UNDINV_IN_RECOMPRA_NETEO        IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_IN_RECOMPRA_NETEO%type,        
          P_MONEDA_ID                       IN  INFI_TB_106_UNIDAD_INVERSION.MONEDA_ID%type,                       
          P_UNDINV_UMI_INV_TOTAL            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_INV_TOTAL%type,            
          P_UNDINV_UMI_INV_MTO_MIN          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_INV_MTO_MIN%type,          
          P_UNDINV_UMI_INV_MTO_MAX          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_INV_MTO_MAX%type,          
          P_UNDINV_UMI_UM_CANT_MIN          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_UM_CANT_MIN%type,          
          P_UNDINV_UMI_UM_CANT_MAX          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_UM_CANT_MAX%type,          
          P_UNDINV_STATUS                   IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_STATUS%type,                   
          P_AUT_USUARIO_USERID              IN  INFI_TB_106_UNIDAD_INVERSION.AUT_USUARIO_USERID%type,              
          P_AUT_USUARIO_NOMBRE              IN  INFI_TB_106_UNIDAD_INVERSION.AUT_USUARIO_NOMBRE%type,              
          P_AUT_USUARIO_ROL_NOMBRE          IN  INFI_TB_106_UNIDAD_INVERSION.AUT_USUARIO_ROL_NOMBRE%type,          
          P_AUT_ESTACION                    IN  INFI_TB_106_UNIDAD_INVERSION.AUT_ESTACION%type,                    
          P_AUT_IP                          IN  INFI_TB_106_UNIDAD_INVERSION.AUT_IP%type,                          
          P_AUT_FECHA                       IN  INFI_TB_106_UNIDAD_INVERSION.AUT_FECHA%type,                       
          P_UPD_USUARIO_USERID              IN  INFI_TB_106_UNIDAD_INVERSION.UPD_USUARIO_USERID%type,              
          P_UPD_USUARIO_NOMBRE              IN  INFI_TB_106_UNIDAD_INVERSION.UPD_USUARIO_NOMBRE%type,              
          P_UPD_USUARIO_ROL_NOMBRE          IN  INFI_TB_106_UNIDAD_INVERSION.UPD_USUARIO_ROL_NOMBRE%type,          
          P_UPD_ESTACION                    IN  INFI_TB_106_UNIDAD_INVERSION.UPD_ESTACION%type,                    
          P_UPD_IP                          IN  INFI_TB_106_UNIDAD_INVERSION.UPD_IP%type,                          
          P_UPD_FECHA                       IN  INFI_TB_106_UNIDAD_INVERSION.UPD_FECHA%type,                       
          P_EMPRES_ID                       IN  INFI_TB_106_UNIDAD_INVERSION.EMPRES_ID%type,                       
          P_UNDINV_UMI_INV_DISPONIBLE       IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_INV_DISPONIBLE%type,       
          P_UNDINV_UMI_UNIDAD               IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMI_UNIDAD%type,               
          P_UNDINV_PCT_MAX_FINAN            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_PCT_MAX_FINAN%type,            
          P_UNDINV_PRECIO_MAXIMO            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_PRECIO_MAXIMO%type,            
          P_UNDINV_MULTIPLOS                IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_MULTIPLOS%type,                
          P_UNDINV_IN_PEDIDO_MONTO          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_IN_PEDIDO_MONTO%type,          
          P_UNDINV_TASA_POOL                IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_TASA_POOL%type,                
          P_UNDINV_RENDIMIENTO              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_RENDIMIENTO%type,              
          P_UNDINV_MERCADO                  IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_MERCADO%type,                  
          P_UNDINV_IN_PRECIO_SUCIO          IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_IN_PRECIO_SUCIO%type,          
          P_UNDINV_FE_LIQUIDACION_HORA1     IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_LIQUIDACION_HORA1%type,     
          P_UNDINV_FE_LIQUIDACION_HORA2     IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_FE_LIQUIDACION_HORA2%type,     
          P_PAGO_IN_BCV                     IN  INFI_TB_106_UNIDAD_INVERSION.PAGO_IN_BCV%type,                     
          P_IN_COBRO_BATCH_ADJ              IN  INFI_TB_106_UNIDAD_INVERSION.IN_COBRO_BATCH_ADJ%type,              
          P_IN_COBRO_BATCH_LIQ              IN  INFI_TB_106_UNIDAD_INVERSION.IN_COBRO_BATCH_LIQ%type,              
          P_DIAS_APERTURA_CUENTA            IN  INFI_TB_106_UNIDAD_INVERSION.DIAS_APERTURA_CUENTA%type,            
          P_INDC_PERMITE_CANCELACION        IN  INFI_TB_106_UNIDAD_INVERSION.INDC_PERMITE_CANCELACION%type,        
          P_UNDINV_ACTIVE                   IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_ACTIVE%type,                   
          --P_UNDINV_STATUS_CONCILIACION      IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_STATUS_CONCILIACION%type,                    
          P_MONTO_ACUMULADO_SOLIC           IN  INFI_TB_106_UNIDAD_INVERSION.MONTO_ACUMULADO_SOLIC%type,           
          P_TIPO_NEGOCIO                    IN  INFI_TB_106_UNIDAD_INVERSION.TIPO_NEGOCIO%type,                    
          P_NRO_JORNADA                     IN  INFI_TB_106_UNIDAD_INVERSION.NRO_JORNADA%type,                     
          P_UNDINV_PERIODO_VENTA            IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_PERIODO_VENTA%type,            
          P_UNDINV_MULTIPLOS_EFECTIVO       IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_MULTIPLOS_EFECTIVO%type,       
          P_UNDINV_UMAX_UNIDAD              IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_UMAX_UNIDAD%type,              
          P_UNDINV_TASA_CAMBIO_OFER         IN  INFI_TB_106_UNIDAD_INVERSION.UNDINV_TASA_CAMBIO_OFER%type,         
          P_COMISION_IGTF                   IN  INFI_TB_106_UNIDAD_INVERSION.COMISION_IGTF%type,                   
          P_TIPO_SOLICITUD                  IN  INFI_TB_106_UNIDAD_INVERSION.TIPO_SOLICITUD%type     
    )AS
    BEGIN
        NOMBRE_SP:='SP_CREAR_UNIDAD_INVERSION';
         
         IF P_INSFIN_ID IS NULL OR P_MONEDA_ID IS NULL OR P_UNDINV_STATUS IS NULL OR P_UPD_IP IS NULL OR P_EMPRES_ID IS NULL OR P_TIPO_SOLICITUD IS NULL THEN             
                MSJ_EXCEPTION:='Error Validacion: '|| NOMBRE_SP||'  - Campo NOT NULL ha sido pasado sin informacion';
                RAISE CRUD_VALIDATION_EXCEPTION;                   
            END IF;
            
        P_UNDINV_ID:=GET_SEQUENCE('INFI_TB_106_UNIDAD_INVERSION');

        INSERT INTO INFI_TB_106_UNIDAD_INVERSION(
            UNDINV_ID,                
            UNDINV_NOMBRE,              
            UNDINV_DESCRIPCION,         
            INSFIN_ID,                  
            UNDINV_EMISION,             
            UNDINV_SERIE,               
            UNDINV_TASA_CAMBIO,         
            UNDINV_FE_EMISION,          
            UNDINV_IN_VTA_EMPLEADOS,    
            TPPEVA_ID,                  
            UNDINV_PRECIO_MINIMO,       
            UNDINV_COMENTARIOS,         
            UNDINV_DOC_BDV,             
            UNDINV_DOC_EMISOR,          
            UNDINV_FE_ADJUDICACION,     
            UNDINV_FE_LIQUIDACION,      
            UNDINV_FE_CIERRE,           
            UNDINV_IN_RECOMPRA_NETEO,   
            MONEDA_ID,                  
            UNDINV_UMI_INV_TOTAL,       
            UNDINV_UMI_INV_MTO_MIN,     
            UNDINV_UMI_INV_MTO_MAX,     
            UNDINV_UMI_UM_CANT_MIN,     
            UNDINV_UMI_UM_CANT_MAX,     
            UNDINV_STATUS,              
            AUT_USUARIO_USERID,         
            AUT_USUARIO_NOMBRE,         
            AUT_USUARIO_ROL_NOMBRE,     
            AUT_ESTACION,               
            AUT_IP,                     
            AUT_FECHA,                  
            UPD_USUARIO_USERID,         
            UPD_USUARIO_NOMBRE,         
            UPD_USUARIO_ROL_NOMBRE,     
            UPD_ESTACION,               
            UPD_IP,                     
            UPD_FECHA,                  
            EMPRES_ID,                  
            UNDINV_UMI_INV_DISPONIBLE,  
            UNDINV_UMI_UNIDAD,          
            UNDINV_PCT_MAX_FINAN,       
            UNDINV_PRECIO_MAXIMO,       
            UNDINV_MULTIPLOS,           
            UNDINV_IN_PEDIDO_MONTO,     
            UNDINV_TASA_POOL,           
            UNDINV_RENDIMIENTO,         
            UNDINV_MERCADO,             
            UNDINV_IN_PRECIO_SUCIO,     
            UNDINV_FE_LIQUIDACION_HORA1,
            UNDINV_FE_LIQUIDACION_HORA2,
            PAGO_IN_BCV,                
            IN_COBRO_BATCH_ADJ,         
            IN_COBRO_BATCH_LIQ,         
            DIAS_APERTURA_CUENTA,       
            INDC_PERMITE_CANCELACION,   
            UNDINV_ACTIVE,              
           -- UNDINV_STATUS_CONCILIACION,            
            MONTO_ACUMULADO_SOLIC,      
            TIPO_NEGOCIO,               
            NRO_JORNADA,                
            UNDINV_PERIODO_VENTA,       
            UNDINV_MULTIPLOS_EFECTIVO,  
            UNDINV_UMAX_UNIDAD,         
            UNDINV_TASA_CAMBIO_OFER,    
            COMISION_IGTF,              
            TIPO_SOLICITUD)
    VALUES (
          P_UNDINV_ID,                              
          P_UNDINV_NOMBRE,              
          P_UNDINV_DESCRIPCION,         
          P_INSFIN_ID,                  
          P_UNDINV_EMISION,             
          P_UNDINV_SERIE,               
          P_UNDINV_TASA_CAMBIO,         
          P_UNDINV_FE_EMISION,          
          P_UNDINV_IN_VTA_EMPLEADOS,    
          P_TPPEVA_ID,                  
          P_UNDINV_PRECIO_MINIMO,       
          P_UNDINV_COMENTARIOS,         
          P_UNDINV_DOC_BDV,             
          P_UNDINV_DOC_EMISOR,          
          P_UNDINV_FE_ADJUDICACION,     
          P_UNDINV_FE_LIQUIDACION,      
          P_UNDINV_FE_CIERRE,           
          P_UNDINV_IN_RECOMPRA_NETEO,   
          P_MONEDA_ID,                  
          P_UNDINV_UMI_INV_TOTAL,       
          P_UNDINV_UMI_INV_MTO_MIN,     
          P_UNDINV_UMI_INV_MTO_MAX,     
          P_UNDINV_UMI_UM_CANT_MIN,     
          P_UNDINV_UMI_UM_CANT_MAX,     
          P_UNDINV_STATUS,              
          P_AUT_USUARIO_USERID,         
          P_AUT_USUARIO_NOMBRE,         
          P_AUT_USUARIO_ROL_NOMBRE,     
          P_AUT_ESTACION,               
          P_AUT_IP,                     
          P_AUT_FECHA,                  
          P_UPD_USUARIO_USERID,         
          P_UPD_USUARIO_NOMBRE,         
          P_UPD_USUARIO_ROL_NOMBRE,     
          P_UPD_ESTACION,               
          P_UPD_IP,                     
          P_UPD_FECHA,                  
          P_EMPRES_ID,                  
          P_UNDINV_UMI_INV_DISPONIBLE,  
          P_UNDINV_UMI_UNIDAD,          
          P_UNDINV_PCT_MAX_FINAN,       
          P_UNDINV_PRECIO_MAXIMO,       
          P_UNDINV_MULTIPLOS,           
          P_UNDINV_IN_PEDIDO_MONTO,     
          P_UNDINV_TASA_POOL,           
          P_UNDINV_RENDIMIENTO,         
          P_UNDINV_MERCADO,             
          P_UNDINV_IN_PRECIO_SUCIO,     
          P_UNDINV_FE_LIQUIDACION_HORA1,
          P_UNDINV_FE_LIQUIDACION_HORA2,
          P_PAGO_IN_BCV,                
          P_IN_COBRO_BATCH_ADJ,         
          P_IN_COBRO_BATCH_LIQ,         
          P_DIAS_APERTURA_CUENTA,       
          P_INDC_PERMITE_CANCELACION,   
          P_UNDINV_ACTIVE,              
         -- P_UNDINV_STATUS_CONCILIACION,           
          P_MONTO_ACUMULADO_SOLIC,      
          P_TIPO_NEGOCIO,               
          P_NRO_JORNADA,                
          P_UNDINV_PERIODO_VENTA,       
          P_UNDINV_MULTIPLOS_EFECTIVO,  
          P_UNDINV_UMAX_UNIDAD,         
          P_UNDINV_TASA_CAMBIO_OFER,    
          P_COMISION_IGTF,              
          P_TIPO_SOLICITUD         
          ); 
                      
     EXCEPTION 
            WHEN CRUD_VALIDATION_EXCEPTION  THEN
            BEGIN                
                raise_application_error(-20001,'Validacion: '|| NOMBRE_SP||' : '||MSJ_EXCEPTION);
            END;  
            WHEN OTHERS THEN
            BEGIN
            MSJ_EXCEPTION:='Error Inesperado: '|| NOMBRE_SP||' '||' SQLERRM ' ||SQLERRM ||' SQLCODE ' ||SQLCODE;
            RAISE CRUD_UNEXPECTED_EXCEPTION;
            END;
    
    END SP_CREAR_UNIDAD_INVERSION;
    
    PROCEDURE SP_CREAR_UI_TITULOS (
            P_UNDINV_ID            IN    INFI_TB_108_UI_TITULOS.UNDINV_ID%type,             
            P_TITULO_ID            IN    INFI_TB_108_UI_TITULOS.TITULO_ID%type,             
            P_UITITU_PORCENTAJE        IN    INFI_TB_108_UI_TITULOS.UITITU_PORCENTAJE%type,         
            P_UITITU_VALOR_EQUIVALENTE    IN    INFI_TB_108_UI_TITULOS.UITITU_VALOR_EQUIVALENTE%type,     
            P_UITITU_IN_CONIDB        IN    INFI_TB_108_UI_TITULOS.UITITU_IN_CONIDB%type,         
            P_UITITU_IN_CONTROL_DISPONIBLE    IN    INFI_TB_108_UI_TITULOS.UITITU_IN_CONTROL_DISPONIBLE%type
        )AS
        BEGIN
            NOMBRE_SP:='SP_CREAR_UI_TITULOS';
             IF P_UNDINV_ID IS NULL OR P_TITULO_ID IS NULL OR  P_UITITU_PORCENTAJE IS NULL THEN                     
                MSJ_EXCEPTION:='Error Validacion: '|| NOMBRE_SP||'  - Campo NOT NULL ha sido pasado sin informacion';
                RAISE CRUD_VALIDATION_EXCEPTION;                   
            END IF;

             INSERT INTO INFI_TB_108_UI_TITULOS (
                UNDINV_ID,                 
                TITULO_ID,                    
                UITITU_PORCENTAJE,        
                UITITU_VALOR_EQUIVALENTE,     
                UITITU_IN_CONIDB,                          
                UITITU_IN_CONTROL_DISPONIBLE    
            )VALUES(
                P_UNDINV_ID,                 
                P_TITULO_ID,                    
                P_UITITU_PORCENTAJE,        
                P_UITITU_VALOR_EQUIVALENTE,     
                P_UITITU_IN_CONIDB,                          
                P_UITITU_IN_CONTROL_DISPONIBLE              
            );
        EXCEPTION 
            WHEN CRUD_VALIDATION_EXCEPTION  THEN
            BEGIN                
                raise_application_error(-20001,'Validacion: '|| NOMBRE_SP||' : '||MSJ_EXCEPTION);
            END; 
            WHEN OTHERS THEN
            BEGIN
            ROLLBACK;  
            MSJ_EXCEPTION:='Error Inesperado: '|| NOMBRE_SP||' '||' SQLERRM ' ||SQLERRM ||' SQLCODE ' ||SQLCODE;
            RAISE CRUD_UNEXPECTED_EXCEPTION;
            END;
            
    END SP_CREAR_UI_TITULOS;
    
    PROCEDURE SP_CREAR_UI_EMPRESA (
        P_UNDINV_ID        IN    INFI_TB_109_UI_EMPRESAS.UNDINV_ID%type,            
        P_EMPRES_ID        IN    INFI_TB_109_UI_EMPRESAS.EMPRES_ID%type,        
        P_ROLES_ID        IN    INFI_TB_109_UI_EMPRESAS.ROLES_ID%type,        
        P_UIEMPR_CONTACTO_NOM    IN    INFI_TB_109_UI_EMPRESAS.UIEMPR_CONTACTO_NOM%type,     
        P_UIEMPR_CONTACTO_TLF    IN    INFI_TB_109_UI_EMPRESAS.UIEMPR_CONTACTO_TLF%type
)AS
BEGIN
    NOMBRE_SP:='SP_CREAR_UI_EMPRESA';
    IF P_UNDINV_ID IS NULL OR P_EMPRES_ID IS NULL THEN                     
        MSJ_EXCEPTION:='Error Validacion: '|| NOMBRE_SP||'  - Campo NOT NULL ha sido pasado sin informacion';
        RAISE CRUD_VALIDATION_EXCEPTION;                   
    END IF;    

    INSERT INTO INFI_TB_109_UI_EMPRESAS(
        UNDINV_ID,
        EMPRES_ID,
        ROLES_ID,
        UIEMPR_CONTACTO_NOM,
        UIEMPR_CONTACTO_TLF
        )
        VALUES (
        P_UNDINV_ID,             
        P_EMPRES_ID,
        P_ROLES_ID,
        P_UIEMPR_CONTACTO_NOM,
        P_UIEMPR_CONTACTO_TLF                
        );

EXCEPTION 
    WHEN CRUD_VALIDATION_EXCEPTION  THEN
    BEGIN                
        raise_application_error(-20001,'Validacion: '|| NOMBRE_SP||' : '||MSJ_EXCEPTION);
    END; 
    WHEN OTHERS THEN
    BEGIN
    ROLLBACK;  
    MSJ_EXCEPTION:='Error Inesperado: '|| NOMBRE_SP||' '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
    RAISE CRUD_UNEXPECTED_EXCEPTION;
    END;
    
END SP_CREAR_UI_EMPRESA;

PROCEDURE SP_CREAR_UI_BLOTTER (
    P_UNDINV_ID                     IN INFI_TB_107_UI_BLOTTER.UNDINV_ID%type,                   
    P_BLOTER_ID                     IN INFI_TB_107_UI_BLOTTER.BLOTER_ID%type,                   
    P_UIBLOT_IN_DISPONIBLE          IN INFI_TB_107_UI_BLOTTER.UIBLOT_IN_DISPONIBLE%type,        
    P_UIBLOT_HORARIO_DESDE          IN INFI_TB_107_UI_BLOTTER.UIBLOT_HORARIO_DESDE%type,        
    P_UIBLOT_HORARIO_HASTA          IN INFI_TB_107_UI_BLOTTER.UIBLOT_HORARIO_HASTA%type,        
    P_UIBLOT_PEDIDO_FE_INI          IN INFI_TB_107_UI_BLOTTER.UIBLOT_PEDIDO_FE_INI%type,        
    P_UIBLOT_PEDIDO_FE_FIN          IN INFI_TB_107_UI_BLOTTER.UIBLOT_PEDIDO_FE_FIN%type,        
    P_UIBLOT_SERIAL_COMISIONES      IN INFI_TB_107_UI_BLOTTER.UIBLOT_SERIAL_COMISIONES%type,    
    P_UIBLOT_SERIAL_CAPITAL         IN INFI_TB_107_UI_BLOTTER.UIBLOT_SERIAL_CAPITAL%type,       
    P_TPPEVA_ID                     IN INFI_TB_107_UI_BLOTTER.TPPEVA_ID%type,                   
    P_CTESEG_ID                     IN INFI_TB_107_UI_BLOTTER.CTESEG_ID%type,                   
    P_UIBLOT_IN_DEFECTO             IN INFI_TB_107_UI_BLOTTER.UIBLOT_IN_DEFECTO%type,           
    P_UIBLOT_IN_TESORERIA           IN INFI_TB_107_UI_BLOTTER.UIBLOT_IN_TESORERIA%type,         
    P_UIBLOT_HORARIO_DESDE_ULT_DIA  IN INFI_TB_107_UI_BLOTTER.UIBLOT_HORARIO_DESDE_ULT_DIA%type,
    P_UIBLOT_HORARIO_HASTA_ULT_DIA  IN INFI_TB_107_UI_BLOTTER.UIBLOT_HORARIO_HASTA_ULT_DIA%type,
    P_UIBLOT_GANANCIA_RED           IN INFI_TB_107_UI_BLOTTER.UIBLOT_GANANCIA_RED%type,         
    P_UIBLOT_IN_RECOMPRA            IN INFI_TB_107_UI_BLOTTER.UIBLOT_IN_RECOMPRA%type          
)AS
BEGIN
    NOMBRE_SP:='SP_CREAR_UI_BLOTTER';
    IF P_UNDINV_ID IS NULL OR P_BLOTER_ID IS NULL OR P_UIBLOT_HORARIO_DESDE IS NULL OR P_UIBLOT_HORARIO_HASTA IS NULL OR P_UIBLOT_PEDIDO_FE_INI IS NULL OR P_UIBLOT_PEDIDO_FE_FIN IS NULL THEN                     
        MSJ_EXCEPTION:='Error Validacion: '|| NOMBRE_SP||'  - Campo NOT NULL ha sido pasado sin informacion';
        RAISE CRUD_VALIDATION_EXCEPTION;                   
    END IF;    

    INSERT INTO INFI_TB_107_UI_BLOTTER(
        UNDINV_ID,                   
        BLOTER_ID,                   
        UIBLOT_IN_DISPONIBLE,        
        UIBLOT_HORARIO_DESDE,        
        UIBLOT_HORARIO_HASTA,        
        UIBLOT_PEDIDO_FE_INI,        
        UIBLOT_PEDIDO_FE_FIN,        
        UIBLOT_SERIAL_COMISIONES,    
        UIBLOT_SERIAL_CAPITAL,       
        TPPEVA_ID,                   
        CTESEG_ID,                   
        UIBLOT_IN_DEFECTO,           
        UIBLOT_IN_TESORERIA,         
        UIBLOT_HORARIO_DESDE_ULT_DIA,
        UIBLOT_HORARIO_HASTA_ULT_DIA,
        UIBLOT_GANANCIA_RED,         
        UIBLOT_IN_RECOMPRA   
    ) VALUES (
        P_UNDINV_ID,                   
        P_BLOTER_ID,                   
        P_UIBLOT_IN_DISPONIBLE,        
        P_UIBLOT_HORARIO_DESDE,        
        P_UIBLOT_HORARIO_HASTA,        
        P_UIBLOT_PEDIDO_FE_INI,        
        P_UIBLOT_PEDIDO_FE_FIN,        
        P_UIBLOT_SERIAL_COMISIONES,    
        P_UIBLOT_SERIAL_CAPITAL,       
        P_TPPEVA_ID,                   
        P_CTESEG_ID,                   
        P_UIBLOT_IN_DEFECTO,           
        P_UIBLOT_IN_TESORERIA,         
        P_UIBLOT_HORARIO_DESDE_ULT_DIA,
        P_UIBLOT_HORARIO_HASTA_ULT_DIA,
        P_UIBLOT_GANANCIA_RED,         
        P_UIBLOT_IN_RECOMPRA 
    );              
        
EXCEPTION
    WHEN CRUD_VALIDATION_EXCEPTION  THEN
    BEGIN                
        raise_application_error(-20001,'Validacion: '|| NOMBRE_SP||' : '||MSJ_EXCEPTION);
    END;  
    WHEN OTHERS THEN
    BEGIN
    ROLLBACK;  
    MSJ_EXCEPTION:='Error Inesperado: '|| NOMBRE_SP||' '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
    RAISE CRUD_UNEXPECTED_EXCEPTION;
    END;
        
END SP_CREAR_UI_BLOTTER;

PROCEDURE SP_CREAR_SOLICITUD_DICOM (
    P_NRO_SOLICITUD            IN SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
    P_TIPO_OPERACION           IN SOLICITUDES_DICOM.TIPO_OPERACION%TYPE,
    P_TIPO_CLIENTE             IN SOLICITUDES_DICOM.TIPO_CLIENTE%TYPE,
    P_CED_RIF                  IN SOLICITUDES_DICOM.CED_RIF%TYPE,
    P_NOMBRE_CLIENTE           IN SOLICITUDES_DICOM.NOMBRE_CLIENTE%TYPE,
    P_TELEFONO_CLIENTE         IN SOLICITUDES_DICOM.TELEFONO_CLIENTE%TYPE,
    P_CORREO_CLIENTE           IN SOLICITUDES_DICOM.CORREO_CLIENTE%TYPE,
    P_NRO_CTA_NACIONAL         IN SOLICITUDES_DICOM.NRO_CTA_NACIONAL%TYPE,
    P_NRO_RET_CAPITAL          IN SOLICITUDES_DICOM.NRO_RET_CAPITAL%TYPE,
    P_HORA_BLOQ                IN SOLICITUDES_DICOM.HORA_BLOQ%TYPE,
    P_MONTO_OP_NACIONAL        IN SOLICITUDES_DICOM.MONTO_OP_NACIONAL%TYPE,
    P_DIVISA_NACIONAL          IN SOLICITUDES_DICOM.DIVISA_NACIONAL%TYPE,
    P_NRO_RET_COMISION         IN SOLICITUDES_DICOM.NRO_RET_COMISION%TYPE,
    P_MONTO_COMISION           IN SOLICITUDES_DICOM.MONTO_COMISION%TYPE,
    P_PORC_COMISION            IN SOLICITUDES_DICOM.PORC_COMISION%TYPE,
    P_FECHA_OPERACION          IN SOLICITUDES_DICOM.FECHA_OPERACION%TYPE,
    P_NRO_CTA_EXTRANJERA       IN SOLICITUDES_DICOM.NRO_CTA_EXTRANJERA%TYPE,
    P_MONTO_OP_EXTRANJERA      IN SOLICITUDES_DICOM.MONTO_OP_EXTRANJERA%TYPE,
    P_DIVISA_EXTRANJERA        IN SOLICITUDES_DICOM.DIVISA_EXTRANJERA%TYPE,
    P_TASA_CAMBIO              IN SOLICITUDES_DICOM.TASA_CAMBIO%TYPE,
    P_FECHA_VALOR_OPERACION    IN SOLICITUDES_DICOM.FECHA_VALOR_OPERACION%TYPE,
    P_CODIGO_RESPUESTA         IN SOLICITUDES_DICOM.CODIGO_RESPUESTA%TYPE,
    P_NRO_OPE_DEBITO           IN SOLICITUDES_DICOM.NRO_OPE_DEBITO%TYPE,
    P_NRO_OPE_CREDITO          IN SOLICITUDES_DICOM.NRO_OPE_CREDITO%TYPE,
    P_ESTATUS_REGISTRO         IN SOLICITUDES_DICOM.ESTATUS_REGISTRO%TYPE,
    P_ESTATUS_NOTIFICACION_WS  IN SOLICITUDES_DICOM.ESTATUS_NOTIFICACION_WS%TYPE,
    P_ID_JORNADA               IN SOLICITUDES_DICOM.ID_JORNADA%TYPE,
    P_UNDINV_ID                IN SOLICITUDES_DICOM.UNDINV_ID%TYPE)
AS
BEGIN

    NOMBRE_SP:='SP_CREAR_SOLICITUD_DICOM';
         
    --IF  P_NRO_SOLICITUD IS NULL OR P_TIPO_OPERACION IS NULL OR P_TIPO_CLIENTE IS NULL OR P_NRO_CTA_NACIONAL IS NULL OR P_NRO_CTA_EXTRANJERA IS NULL OR P_ESTATUS_REGISTRO IS NULL THEN             
    IF  P_NRO_SOLICITUD IS NULL OR P_ESTATUS_REGISTRO IS NULL THEN             
        MSJ_EXCEPTION:='Error Validacion: '|| NOMBRE_SP||'  - Campo NOT NULL ha sido pasado sin informacion';
        RAISE CRUD_VALIDATION_EXCEPTION;                   
    END IF;

     INSERT INTO SOLICITUDES_DICOM(
         NRO_SOLICITUD,          
        TIPO_OPERACION,         
        TIPO_CLIENTE,           
        CED_RIF,                
        NOMBRE_CLIENTE,         
        TELEFONO_CLIENTE,       
        CORREO_CLIENTE,         
        NRO_CTA_NACIONAL,       
        NRO_RET_CAPITAL,        
        HORA_BLOQ,              
        MONTO_OP_NACIONAL,      
        DIVISA_NACIONAL,        
        NRO_RET_COMISION,       
        MONTO_COMISION,         
        PORC_COMISION,          
        FECHA_OPERACION,        
        NRO_CTA_EXTRANJERA,     
        MONTO_OP_EXTRANJERA,    
        DIVISA_EXTRANJERA,      
        TASA_CAMBIO,            
        FECHA_VALOR_OPERACION,  
        CODIGO_RESPUESTA,       
        NRO_OPE_DEBITO,         
        NRO_OPE_CREDITO,        
        ESTATUS_REGISTRO,       
        ESTATUS_NOTIFICACION_WS,
        ID_JORNADA,             
        UNDINV_ID )
     VALUES (
         P_NRO_SOLICITUD,          
        P_TIPO_OPERACION,         
        P_TIPO_CLIENTE,           
        P_CED_RIF,                
        P_NOMBRE_CLIENTE,         
        P_TELEFONO_CLIENTE,       
        P_CORREO_CLIENTE,         
        P_NRO_CTA_NACIONAL,       
        P_NRO_RET_CAPITAL,        
        P_HORA_BLOQ,              
        P_MONTO_OP_NACIONAL,      
        P_DIVISA_NACIONAL,        
        P_NRO_RET_COMISION,       
        P_MONTO_COMISION,         
        P_PORC_COMISION,          
        P_FECHA_OPERACION,        
        P_NRO_CTA_EXTRANJERA,     
        P_MONTO_OP_EXTRANJERA,    
        P_DIVISA_EXTRANJERA,      
        P_TASA_CAMBIO,            
        P_FECHA_VALOR_OPERACION,  
        P_CODIGO_RESPUESTA,       
        P_NRO_OPE_DEBITO,         
        P_NRO_OPE_CREDITO,        
        P_ESTATUS_REGISTRO,       
        P_ESTATUS_NOTIFICACION_WS,
        P_ID_JORNADA,             
        P_UNDINV_ID             
      );    
            
    EXCEPTION 
            WHEN CRUD_VALIDATION_EXCEPTION  THEN
            BEGIN                
                raise_application_error(-20001,'Validacion: '|| NOMBRE_SP||' : '||MSJ_EXCEPTION);
            END;  
            WHEN OTHERS THEN
            BEGIN
            MSJ_EXCEPTION:='Error Inesperado: '|| NOMBRE_SP||' '||' SQLERRM ' ||SQLERRM ||' SQLCODE ' ||SQLCODE;
            RAISE CRUD_UNEXPECTED_EXCEPTION;
            END;
END SP_CREAR_SOLICITUD_DICOM;  
       
FUNCTION GET_SEQUENCE (
        P_TABLE_NAME SEQUENCE_NUMBERS.TABLE_NAME%type
    )
    RETURN SEQUENCE_NUMBERS.NEXT_ID%TYPE IS
    ID_SEQUENCE NUMBER;
    /******************************************************************************
       NAME:       GET_SEQUENCE 
       PURPOSE:    Funcion creada para obtener la secuencia (id) de tabla a insertar
                    Se realiza de esta manera para no cambiar el esquema de manejo de
                    secuencias usado en la aplicación 

       REVISIONS:
       Ver        Date        Author           Description
       ---------  ----------  ---------------  ------------------------------------
       1.0        18/05/2017          1. Created this function.

       NOTES:

       Automatically available Auto Replace Keywords:
          Object Name:     GET_SEQUENCE
          Sysdate:         18/05/2017
          Date and Time:   18/05/2017, 04:10:45 p.m., and 18/05/2017 04:10:45 p.m.
          Username:         NM25287 
          Table Name:       SEQUENCE_NUMBERS 

    ******************************************************************************/
    BEGIN
       ID_SEQUENCE := 0;
       
       UPDATE SEQUENCE_NUMBERS 
        SET NEXT_ID = NEXT_ID + 1 
        WHERE TABLE_NAME = P_TABLE_NAME;
             
       SELECT NEXT_ID 
        INTO ID_SEQUENCE
        FROM SEQUENCE_NUMBERS 
        WHERE TABLE_NAME = P_TABLE_NAME;
       
       RETURN ID_SEQUENCE;
       EXCEPTION
         WHEN NO_DATA_FOUND THEN
         BEGIN
         --DBMS_OUTPUT.PUT_LINE('ERROR GET SEQ '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE);
           RAISE;
         END;
         WHEN OTHERS THEN
          BEGIN
         --DBMS_OUTPUT.PUT_LINE('OTHERS ERROR GET SEQ '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE);
           RAISE;
         END;
    END GET_SEQUENCE;
                   
   PROCEDURE SP_CREAR_SOL_DICOM_TRANSF (    
    P_ID_JORNADA               IN SOLICITUDES_DICOM.ID_JORNADA%TYPE,
    P_TIPO_OPERACION           IN SOLICITUDES_DICOM.TIPO_OPERACION%TYPE,
    P_NRO_SOLICITUD            IN SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
    P_TIPO_CLIENTE             IN SOLICITUDES_DICOM.TIPO_CLIENTE%TYPE,
    P_CED_RIF                  IN SOLICITUDES_DICOM.CED_RIF%TYPE,
    P_NRO_CTA_EXTRANJERA       IN SOLICITUDES_DICOM.NRO_CTA_EXTRANJERA%TYPE,
    P_MONTO_OP_EXTRANJERA      IN SOLICITUDES_DICOM.MONTO_OP_EXTRANJERA%TYPE,
    P_FECHA_VALOR_OPERACION    IN SOLICITUDES_DICOM.FECHA_VALOR_OPERACION%TYPE
    ) 
AS
BEGIN

    NOMBRE_SP:='SP_CREAR_SOL_DICOM_TRANSF';
         
    --IF  P_NRO_SOLICITUD IS NULL OR P_TIPO_OPERACION IS NULL OR P_TIPO_CLIENTE IS NULL OR P_NRO_CTA_NACIONAL IS NULL OR P_NRO_CTA_EXTRANJERA IS NULL OR P_ESTATUS_REGISTRO IS NULL THEN             
    IF  P_NRO_SOLICITUD IS NULL THEN             
        MSJ_EXCEPTION:='Error Validacion: '|| NOMBRE_SP||'  - Campo NOT NULL ha sido pasado sin informacion';
        RAISE CRUD_VALIDATION_EXCEPTION;                   
    END IF;

--NRO_SOLICITUD,          
--        TIPO_OPERACION,         
--        TIPO_CLIENTE,           
--        CED_RIF,                
--        NOMBRE_CLIENTE,         
--        TELEFONO_CLIENTE,       
--        CORREO_CLIENTE,         
--        --NRO_CTA_NACIONAL,       
--        NRO_RET_CAPITAL,        
--        HORA_BLOQ,              
--        --MONTO_OP_NACIONAL,      
--       -- DIVISA_NACIONAL,        
--        NRO_RET_COMISION,       
--        MONTO_COMISION,         
--        PORC_COMISION,          
--        FECHA_OPERACION,        
--        NRO_CTA_EXTRANJERA,     
--        MONTO_OP_EXTRANJERA,    
--        DIVISA_EXTRANJERA,      
--       -- TASA_CAMBIO,            
--        FECHA_VALOR_OPERACION,  
--        CODIGO_RESPUESTA,       
--        NRO_OPE_DEBITO,         
--        NRO_OPE_CREDITO,        
--        ESTATUS_REGISTRO,       
--        ESTATUS_NOTIFICACION_WS,
--        ID_JORNADA,             
--        UNDINV_ID,
--        FECHA_BLOQUEO,
--        ID_RESULT_COMPROBACION_BCV)
     INSERT INTO SOLICITUDES_DICOM(
                             ID_JORNADA,
                             TIPO_OPERACION,
                             NRO_SOLICITUD,
                             TIPO_CLIENTE,
                             CED_RIF,
                             NRO_CTA_EXTRANJERA,
                             MONTO_OP_EXTRANJERA,
                             FECHA_VALOR_OPERACION)
                     VALUES (P_ID_JORNADA,
                             P_TIPO_OPERACION,
                             P_NRO_SOLICITUD,
                             P_TIPO_CLIENTE,
                             P_CED_RIF,
                             P_NRO_CTA_EXTRANJERA,
                             P_MONTO_OP_EXTRANJERA,
                             P_FECHA_VALOR_OPERACION);
     
     
--         P_NRO_SOLICITUD,          
--        P_TIPO_OPERACION,         
--        P_TIPO_CLIENTE,           
--        P_CED_RIF,                
--        P_NOMBRE_CLIENTE,         
--        P_TELEFONO_CLIENTE,       
--        P_CORREO_CLIENTE,         
--        --P_NRO_CTA_NACIONAL,       
--        P_NRO_RET_CAPITAL,        
--        P_HORA_BLOQ,              
--        --P_MONTO_OP_NACIONAL,      
--        --P_DIVISA_NACIONAL,        
--        P_NRO_RET_COMISION,       
--        P_MONTO_COMISION,         
--        P_PORC_COMISION,          
--        P_FECHA_OPERACION,        
--        P_NRO_CTA_EXTRANJERA,     
--        P_MONTO_OP_EXTRANJERA,    
--        P_DIVISA_EXTRANJERA,      
--       -- P_TASA_CAMBIO,            
--        P_FECHA_VALOR_OPERACION,  
--        P_CODIGO_RESPUESTA,       
--        P_NRO_OPE_DEBITO,         
--        P_NRO_OPE_CREDITO,        
--        P_ESTATUS_REGISTRO,       
--        P_ESTATUS_NOTIFICACION_WS,
--        P_ID_JORNADA,             
--        P_UNDINV_ID,
--        P_FECHA_BLOQUEO,
--        P_ID_RESULT_COMPROBACION_BCV             
--      );    
            
    EXCEPTION 
            WHEN CRUD_VALIDATION_EXCEPTION  THEN
            BEGIN                
                raise_application_error(-20001,'Validacion: '|| NOMBRE_SP||' : '||MSJ_EXCEPTION);
            END;  
            WHEN OTHERS THEN
            BEGIN
            MSJ_EXCEPTION:='Error Inesperado: '|| NOMBRE_SP||' '||' SQLERRM ' ||SQLERRM ||' SQLCODE ' ||SQLCODE;
            RAISE CRUD_UNEXPECTED_EXCEPTION;
            END;
END SP_CREAR_SOL_DICOM_TRANSF;   
                                                 
   PROCEDURE SP_ACTUALIZAR_SOL_DICOM_TRANSF( p_NRO_SOLICITUD         IN  SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
                                         P_NRO_JORNADA          IN  SOLICITUDES_DICOM.ID_JORNADA%TYPE,
                                         P_CODIGO_RESPUESTA     IN  SOLICITUDES_DICOM.CODIGO_RESPUESTA%TYPE,
                                         p_NOMBRE_CLIENTE       IN SOLICITUDES_DICOM.NOMBRE_CLIENTE%TYPE,
                                         p_TELEFONO_CLIENTE     IN SOLICITUDES_DICOM.TELEFONO_CLIENTE%TYPE,
                                         p_CORREO_CLIENTE       IN SOLICITUDES_DICOM.CORREO_CLIENTE%TYPE,
                                         p_NRO_RET_CAPITAL      IN SOLICITUDES_DICOM.NRO_RET_CAPITAL%TYPE,
                                         p_HORA_BLOQ            IN SOLICITUDES_DICOM.HORA_BLOQ%TYPE,
                                         --p_DIVISA_NACIONAL      IN SOLICITUDES_DICOM.DIVISA_NACIONAL%TYPE,
                                         p_NRO_RET_COMISION     IN SOLICITUDES_DICOM.NRO_RET_COMISION%TYPE,
                                         p_MONTO_COMISION       IN SOLICITUDES_DICOM.MONTO_COMISION%TYPE,
                                         p_PORC_COMISION        IN SOLICITUDES_DICOM.PORC_COMISION%TYPE,
                                         p_DIVISA_EXTRANJERA    IN SOLICITUDES_DICOM.DIVISA_EXTRANJERA%TYPE,
                                        -- p_TASA_CAMBIO          IN SOLICITUDES_DICOM.TASA_CAMBIO%TYPE,
                                         P_NRO_OPE_DEBITO       IN  SOLICITUDES_DICOM.NRO_OPE_DEBITO%TYPE,
                                         P_NRO_OPE_CREDITO      IN  SOLICITUDES_DICOM.NRO_OPE_CREDITO%TYPE,
                                         P_UNDINV_ID            IN INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%TYPE,
                                         P_FECHA_BLOQUEO     IN  SOLICITUDES_DICOM.FECHA_BLOQUEO%TYPE,
                                         P_ID_RESULT_COMPROBACION_BCV  IN  SOLICITUDES_DICOM.ID_RESULT_COMPROBACION_BCV%TYPE                                                                         
                                         ) AS           

    v_query     VARCHAR2(1000);
                                         
    BEGIN
    
    NOMBRE_SP:='SP_ACTUALIZAR_SOL_DICOM_TRANSF';
    v_query:='UPDATE SOLICITUDES_DICOM SET ';
    
    IF P_CODIGO_RESPUESTA IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' CODIGO_RESPUESTA='||''''||P_CODIGO_RESPUESTA||''''||', ');
    END IF;
            
    IF p_NOMBRE_CLIENTE IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' NOMBRE_CLIENTE='||''''||p_NOMBRE_CLIENTE||''''||', ');
    END IF;
    
    IF p_TELEFONO_CLIENTE IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' TELEFONO_CLIENTE='||''''||p_TELEFONO_CLIENTE||''''||', ');
    END IF;
    
    IF p_CORREO_CLIENTE IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' CORREO_CLIENTE='||''''||p_CORREO_CLIENTE||''''||', ');
    END IF;
    
    IF p_NRO_RET_CAPITAL IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' NRO_RET_CAPITAL='||''''||p_NRO_RET_CAPITAL||''''||', ');
    END IF;
    
    IF p_HORA_BLOQ IS NOT NULL THEN
    flag_sent_correc:=1;    
    v_query:=CONCAT(v_query,' HORA_BLOQ='||''''||p_HORA_BLOQ||''''||', ');
    END IF;
    
    /*IF p_DIVISA_NACIONAL IS NOT NULL THEN
    flag_sent_correc:=1;    
    v_query:=CONCAT(v_query,' DIVISA_NACIONAL='||''''||p_DIVISA_NACIONAL||''''||', ');
    END IF;*/
    
    IF p_NRO_RET_COMISION IS NOT NULL THEN
    flag_sent_correc:=1;        
    v_query:=CONCAT(v_query,' NRO_RET_COMISION='||''''||p_NRO_RET_COMISION||''''||', ');
    END IF;
    
    IF p_MONTO_COMISION IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' MONTO_COMISION='||to_char(p_MONTO_COMISION,'0999999999999.99')|| ', ');--NUMERICO  
    END IF;
    
    IF p_PORC_COMISION IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' PORC_COMISION='||to_char(p_PORC_COMISION, '099.99')|| ', ');--NUMERICO 
    END IF;
    
    IF p_DIVISA_EXTRANJERA IS NOT NULL THEN
    flag_sent_correc:=1;    
    v_query:=CONCAT(v_query,' DIVISA_EXTRANJERA='||''''||p_DIVISA_EXTRANJERA||''''||', ');
    END IF;
    
   /* IF p_TASA_CAMBIO IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' TASA_CAMBIO='||to_char(p_TASA_CAMBIO, '099999.9999')|| ', ');--NUMERICO 
    END IF;*/
            
    IF P_NRO_OPE_DEBITO IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' NRO_OPE_DEBITO='||P_NRO_OPE_DEBITO|| ', ');--NUMERICO
    END IF;
    
    IF P_NRO_OPE_CREDITO IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' NRO_OPE_CREDITO='||P_NRO_OPE_CREDITO|| ', ');--NUMERICO
    END IF;

    IF P_UNDINV_ID IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' UNDINV_ID='||P_UNDINV_ID|| ', ');--NUMERICO
    END IF;       
    
     IF P_FECHA_BLOQUEO IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' FECHA_BLOQUEO='||P_FECHA_BLOQUEO|| ', ');--DATE
    END IF;  
    
     IF P_UNDINV_ID IS NOT NULL THEN
    flag_sent_correc:=1;
    v_query:=CONCAT(v_query,' ID_RESULT_COMPROBACION_BCV='||P_ID_RESULT_COMPROBACION_BCV|| ', ');--VARCHAR
    END IF;            
                 
    
       IF flag_sent_correc=0 THEN
       CRUD_MSJ_EXCEPTION:='Error Validacion: '||NOMBRE_SP||'  - No se ha ingresado ningun campo para ser modificado';
       RAISE CRUD_VALIDATION_EXCEPTION;       
       ELSE
       v_query:=CONCAT(v_query,' ESTATUS_REGISTRO=1 ');
       END IF;
       
    --v_query:=SUBSTR(v_query,0,(Length(v_query)-2));
    v_query:=CONCAT(v_query,' WHERE NRO_SOLICITUD='||''''||P_NRO_SOLICITUD||''''||' ');
    v_query:=CONCAT(v_query,' AND ID_JORNADA=' ||''''||P_NRO_JORNADA||''''||'');
      DBMS_OUTPUT.put_line('QUERY --> ' || v_query);                                                
    EXECUTE IMMEDIATE v_query;                
       EXCEPTION
          WHEN CRUD_VALIDATION_EXCEPTION THEN
          BEGIN
            RAISE CRUD_VALIDATION_EXCEPTION;
          END;
          WHEN OTHERS THEN  
          BEGIN  
          ROLLBACK;  
          CRUD_MSJ_EXCEPTION:='Error Inesperado: '||NOMBRE_SP||' '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
          RAISE CRUD_UNEXPECTED_EXCEPTION;
          END;             
                   
END SP_ACTUALIZAR_SOL_DICOM_TRANSF;                                                   

END PK_INFI_CRUD_TRANSF_DICOM;
/


CREATE OR REPLACE PACKAGE BODY ADM_INFI.PK_INFI_LOGIC_DICOM
IS

PROCEDURE SP_PROCESAR_SOLICITUD_DICOM (p_undinv_id            IN INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%TYPE,
                                     p_NRO_SOLICITUD        IN SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
                                     p_TIPO_CLIENTE         IN SOLICITUDES_DICOM.TIPO_CLIENTE%TYPE,
                                     p_CED_RIF              IN SOLICITUDES_DICOM.CED_RIF%TYPE,
                                     p_NOMBRE_CLIENTE       IN SOLICITUDES_DICOM.NOMBRE_CLIENTE%TYPE,
                                     p_TELEFONO_CLIENTE     IN SOLICITUDES_DICOM.TELEFONO_CLIENTE%TYPE,
                                     p_CORREO_CLIENTE       IN SOLICITUDES_DICOM.CORREO_CLIENTE%TYPE,
                                     p_NRO_CTA_NACIONAL     IN SOLICITUDES_DICOM.NRO_CTA_NACIONAL%TYPE,
                                     p_NRO_RET_CAPITAL      IN SOLICITUDES_DICOM.NRO_RET_CAPITAL%TYPE,
                                     p_HORA_BLOQ            IN SOLICITUDES_DICOM.HORA_BLOQ%TYPE,
                                     p_MONTO_OP_NACIONAL    IN SOLICITUDES_DICOM.MONTO_OP_NACIONAL%TYPE,
                                     p_DIVISA_NACIONAL      IN SOLICITUDES_DICOM.DIVISA_NACIONAL%TYPE,
                                     p_NRO_RET_COMISION     IN SOLICITUDES_DICOM.NRO_RET_COMISION%TYPE,
                                     p_MONTO_COMISION       IN SOLICITUDES_DICOM.MONTO_COMISION%TYPE,
                                     p_PORC_COMISION        IN SOLICITUDES_DICOM.PORC_COMISION%TYPE,
                                     p_FECHA_OPERACION      IN SOLICITUDES_DICOM.FECHA_OPERACION%TYPE,
                                     p_NRO_CTA_EXTRANJERA   IN SOLICITUDES_DICOM.NRO_CTA_EXTRANJERA%TYPE,
                                     p_MONTO_OP_EXTRANJERA  IN SOLICITUDES_DICOM.MONTO_OP_EXTRANJERA%TYPE,
                                     p_DIVISA_EXTRANJERA    IN SOLICITUDES_DICOM.DIVISA_EXTRANJERA%TYPE,
                                     p_TASA_CAMBIO          IN SOLICITUDES_DICOM.TASA_CAMBIO%TYPE,
                                     p_FECHA_VALOR_OPERACION IN SOLICITUDES_DICOM.FECHA_VALOR_OPERACION%TYPE,
                                     p_CODIGO_RESPUESTA     IN SOLICITUDES_DICOM.CODIGO_RESPUESTA%TYPE,
                                     p_TIPO_OPERACION       IN SOLICITUDES_DICOM.TIPO_OPERACION%TYPE,
                                     p_PORC_COMISION_IGTF   IN INFI_TB_204_ORDENES.ORDENE_PED_PORC_COMISION_IGTF%TYPE,
                                     p_COMISION_IGTF        IN INFI_TB_204_ORDENES.ORDENE_PED_COMISION_IGTF%TYPE,
                                     p_MONTO_TOTAL_RET      IN INFI_TB_207_ORDENES_OPERACION.MONTO_OPERACION%TYPE,
                                     p_TIPO_PROCESO         IN INFI_TB_106_UNIDAD_INVERSION.CONTROL_DES%TYPE  --PARAMETRO CREADO PARA EL MANEJO DEL NUEVO PASO EN EL FLUJO DE
                                    --DICOM - 0 INDICA QUE SOLO SE CREARAN LOS REGISTROS DE BLOQUEO Y DESBLOQUEO
                                    --1 INDICA QUE SON OPERACIONES EN FIRNA, A LAS CUALES SE LES CREARAN LOS REGISTROS
                                    --DE DEBITO Y CREDITO TANTO EN DIVISAS COMOM EN BOLIVARES
                                     ) AS



         v_client_id  INFI_TB_201_CTES.CLIENT_ID%TYPE;
         --v_ordene_id  INFI_TB_204_ORDENES.ORDENE_ID%TYPE;
         v_ordene_id  NUMBER;

         v_correo_electronico_cliente  INFI_TB_201_CTES.CLIENT_CORREO_ELECTRONICO%TYPE;
         v_flag NUMBER;





         v_ord_monto_solicitado INFI_TB_204_ORDENES.ORDENE_PED_MONTO%TYPE;
         v_ord_cuenta_origen INFI_TB_204_ORDENES.CTECTA_NUMERO%TYPE;--Cuenta desde la cual saldran los fondos en Bolivares (Caso Demanda) o Moneda Extranjera (Caso Oferta)
         v_ord_cuenta_destino INFI_TB_204_ORDENES.CTECTA_NUMERO%TYPE;--Cuenta desde la cual saldran los fondos en Bolivares (Caso Demanda) o Moneda Extranjera (Caso Oferta)
         v_ord_moneda_origen INFI_TB_204_ORDENES.MONEDA_ID%TYPE;--Tipo de moneda Origen de la Operacon, Bolivares (Caso Demanda) o Moneda Extranjera (Caso Oferta)
         v_ord_moneda_destino INFI_TB_204_ORDENES.MONEDA_ID%TYPE;--Tipo de moneda Origen de la Operacon, Bolivares (Caso Demanda) o Moneda Extranjera (Caso Oferta)
         v_ord_monto_adjudicacion INFI_TB_204_ORDENES.ORDENE_ADJ_MONTO%TYPE;--Monto de Adjudicacion dependiendo de la solicitud, Moneda Extranjera (Caso Demanda) o Bolivares (Caso Oferta)

         v_ord_ped_total INFI_TB_204_ORDENES.ORDENE_PED_TOTAL%TYPE;


         v_op_monto_capital INFI_TB_207_ORDENES_OPERACION.MONTO_OPERACION%TYPE;
         v_op_moneda INFI_TB_207_ORDENES_OPERACION.MONEDA_ID%TYPE;
         v_op_monto_des_capital INFI_TB_207_ORDENES_OPERACION.MONTO_OPERACION%TYPE;
         v_op_monto_des_comision INFI_TB_207_ORDENES_OPERACION.MONTO_OPERACION%TYPE;

         v_cod_abono INFI_TB_207_ORDENES_OPERACION.CODIGO_OPERACION%TYPE;






          v_secuencia_ordenes SEQUENCE_NUMBERS.NEXT_ID%type;
          v_secuencia_operacion SEQUENCE_NUMBERS.NEXT_ID%type;

          v_cta_abono INFI_TB_204_ORDENES.CTA_ABONO%type;

          v_rif_sin_dig INFI_TB_201_CTES.CLIENT_CEDRIF%TYPE;
          v_estatus VARCHAR2(255);

    BEGIN


        v_rif_sin_dig:=SUBSTR(p_CED_RIF,0,LENGTH(p_CED_RIF)-1);

        --CAMBIOS DICOM 2018 LENIN RAMIREZ / JOSE GOMEZ
        --SOLO DEBE CREAR CLIENTE CUANDO ES LA PRIMERA EJECUCION DEL PROCESO
         IF p_TIPO_PROCESO =0 THEN
            BEGIN
                    SELECT CLIENT_ID,CLIENT_CORREO_ELECTRONICO INTO v_client_id,v_correo_electronico_cliente FROM INFI_TB_201_CTES CTES WHERE CTES.TIPPER_ID=p_TIPO_CLIENTE AND CTES.CLIENT_CEDRIF=v_rif_sin_dig;
                    IF v_correo_electronico_cliente=NULL OR v_correo_electronico_cliente<> p_CORREO_CLIENTE THEN
                        UPDATE INFI_TB_201_CTES CTES SET CTES.CLIENT_CORREO_ELECTRONICO=p_CORREO_CLIENTE WHERE CTES.CLIENT_ID=v_client_id;
                    END IF;

                    --Insercion de Ordenes
                    EXCEPTION
                    WHEN NO_DATA_FOUND THEN
                    BEGIN

                        PK_INFI_CRUD.SP_CREAR_CLIENTE(p_TIPO_CLIENTE,
                                                            v_rif_sin_dig,
                                                            p_NOMBRE_CLIENTE,
                                                            p_TELEFONO_CLIENTE,
                                                            p_CORREO_CLIENTE,
                                                            C_CODIGO_SEGMENTO,
                                                            C_NUMERO_PERSONA,
                                                            v_client_id);
                    END;

            END;

         END IF;

        IF v_tipo_solicitud=C_TIPO_SOLICITUD_DEMANDA THEN --Tipo de solicitud DEMANDA
        --CAMPOS ASOCIADOS A ORDEN
        v_ord_monto_solicitado:=p_MONTO_OP_EXTRANJERA; --Por ser una solicitud DEMANDA monto solicitado va en Moneda Extranjera
        v_ord_cuenta_origen:=p_NRO_CTA_NACIONAL;
        v_ord_cuenta_destino:=p_NRO_CTA_EXTRANJERA;
        v_ord_moneda_origen:=p_DIVISA_NACIONAL;
        v_ord_moneda_destino:=p_DIVISA_EXTRANJERA;
        v_ord_monto_adjudicacion:=p_MONTO_OP_EXTRANJERA;

        v_ord_ped_total:=p_MONTO_OP_NACIONAL+p_MONTO_COMISION;
        --CAMPOS ASOCIADOS A OPERACION
        v_op_monto_capital:=p_MONTO_OP_NACIONAL; --Por ser una solicitud DEMANDA monto solicitado va en Moneda Extranjera
        v_cta_abono:=1;
        v_cod_abono:=v_cod_op_cre_conv_20;
        v_op_monto_des_capital:=p_MONTO_OP_NACIONAL+p_MONTO_COMISION;
        ELSIF v_tipo_solicitud=C_TIPO_SOLICITUD_OFERTA THEN --Tipo de solicitud OFERTA
        --CAMPOS ASOCIADOS A ORDEN
        v_ord_monto_solicitado:=p_MONTO_OP_NACIONAL;--Por ser una solicitud OFERTA monto solicitado va en Moneda Nacional
        --v_monto_bloqueado:=p_MONTO_OP_EXTRANJERA;
        v_ord_cuenta_origen:=p_NRO_CTA_EXTRANJERA;
        v_ord_cuenta_destino:=p_NRO_CTA_NACIONAL;
        v_ord_moneda_origen:=p_DIVISA_EXTRANJERA;
        v_ord_moneda_destino:=p_DIVISA_NACIONAL;
        v_ord_monto_adjudicacion:=p_MONTO_OP_NACIONAL;
        v_ord_ped_total:=p_MONTO_OP_EXTRANJERA;
        --CAMPOS ASOCIADOS A OPERACION
        v_op_monto_capital:=p_MONTO_OP_EXTRANJERA;
        v_op_monto_des_capital:=v_op_monto_capital;
        v_cta_abono:=2;
        v_cod_abono:=v_cod_op_cre_cap;
        v_op_monto_des_comision:=p_COMISION_IGTF+p_MONTO_COMISION;
        END IF;

        --CAMBIOS DICOM 2018 LENIN RAMIREZ / JOSE GOMEZ
        --INCLUSION DE CONDICION QUE VALIDA SI EL REGISTRO ESTA EN BLOQUEO PREVIO (VALOR 0) O YA ADJUDICADO (VALOR 1)
        --SI ES VALOR 0, SE COLOCA LA ORDEN EN ESTATUS PRE_APROBADA
        --SI ES VALOR 1, SE COLOCA LA ORDEN EN ESTATUS CRUZADA

        IF p_TIPO_PROCESO=0 THEN
            v_estatus:=C_ORDSTA_REGISTRADA;
        ELSE
            v_estatus:=C_ORDSTA_CRUZADA;
        END IF;

        --CREACION DE ORDEN TOMA ORDEN
        IF p_TIPO_PROCESO=0 THEN
            PK_INFI_CRUD.SP_CREAR_ORDEN(p_undinv_id,
                                        v_client_id,
                                        v_estatus,
                                        '0',--SISTEMA_ID
                                        v_empres_id, --EMPRES_ID, --BUSCAR DESDE LA UNIDAD DE INVERSION
                                        NULL,--CONTRAPARTE,
                                        C_TRANS_TOMA_ORDEN,--TRANSA_ID,
                                        0,--ENVIADO,
                                        NULL,--ORDENE_CTE_SEG_BCO,
                                        NULL,--ORDENE_CTE_SEG_SEG,
                                        NULL,--ORDENE_CTE_SEG_SUB,
                                        NULL,--ORDENE_CTE_SEG_INFI,
                                        p_FECHA_OPERACION,--ORDENE_PED_FE_ORDEN,
                                        p_FECHA_VALOR_OPERACION,--ORDENE_PED_FE_VALOR,
                                        v_ord_monto_solicitado,--ORDENE_PED_MONTO,
                                        0,--ORDENE_PED_TOTAL_PEND,
                                        v_ord_ped_total,--MONTO CAPITAL + MONTO COMISION --En caso de Oferta se coloca el monto el Dolares
                                        0,--ORDENE_PED_INT_CAIDOS
                                        v_bloter_id,--BLOTER_ID,
                                        NULL,--ORDENE_PED_CTA_BSNRO,
                                        NULL,--ORDENE_PED_CTA_BSTIP,
                                        v_ord_cuenta_origen,--CTECTA_NUMERO,
                                        100,--ORDENE_PED_PRECIO,
                                        0,--ORDENE_PED_RENDIMIENTO,
                                        0,--ORDENE_PED_IN_BDV,
                                        v_ord_moneda_origen,--MONEDA_ID,
                                        0,--ORDENE_PED_RCP_PRECIO,
                                        v_ord_monto_adjudicacion,--ORDENE_ADJ_MONTO,
                                        v_username,--ORDENE_USR_NOMBRE,
                                        NULL,--ORDENE_USR_CEN_CONTABLE,
                                        NULL,--ORDENE_USR_SUCURSAL,
                                        NULL,--ORDENE_USR_TERMINAL,
                                        v_bdv_vehiculo_id,--ORDENE_VEH_TOM
                                        v_bdv_vehiculo_id,--ORDENE_VEH_COL
                                        v_bdv_vehiculo_id,--ORDENE_VEH_REC
                                        v_ejecucion_id,--ORDENE_EJEC_ID,
                                        NULL,--ORDENE_FE_ULT_ACT,
                                        p_MONTO_COMISION,--ORDENE_PED_COMISIONES,
                                        0,--ORDENE_FINANCIADO,
                                        v_ejecucion_id,--EJECUCION_ID
                                        p_TASA_CAMBIO,--ORDENE_TASA_POOL,
                                        0,--ORDENE_GANANCIA_RED,
                                        0,--ORDENE_COMISION_OFICINA,
                                        p_PORC_COMISION,--ORDENE_COMISION_OPERACION,
                                        0,--ORDENE_OPERAC_PEND,
                                        NULL,--ORDENE_ID_RELACION,
                                        p_TASA_CAMBIO,--ORDENE_TASA_CAMBIO,
                                        NULL,--CONCEPTO_ID, VERIFICAR QUE INFORMACION SE COLOCARA PUNTO_REV
                                        NULL,--ORDENE_OBSERVACION,
                                        C_TIPO_PRODUCTO,--TIPO_PRODUCTO_ID, VERIFICAR EL PRODUCTO QUE SE UTILIZARA EN DICOM PUNTO_REV
                                        v_cta_abono,--CTA_ABONO VERIFICAR VALOR A COLOCAR
                                        p_PORC_COMISION_IGTF,-- Porcentaje de Comision IGTF
                                        p_COMISION_IGTF,     -- Monto de la Comision IGTF
                                        v_id_toma_orden
                                         );
                                         --CAMBIOS DICOM 2018 LENIN RAMIREZ / JOSE GOMEZ
                                         PK_INFI_CRUD.SP_ACT_SOLICI_DICOM_ORDEN_ID (p_NRO_SOLICITUD,v_id_toma_orden );

                ELSE
                    PK_INFI_CRUD.SP_CON_SOLICI_DICOM_ORDEN_ID (p_NRO_SOLICITUD,v_id_toma_orden );
                    PK_INFI_CRUD.SP_ACTUALIZ_ESTATUS_ORDEN_204 (p_undinv_id ,v_id_toma_orden,v_estatus);
                END IF;
                               IF p_TIPO_PROCESO=0 THEN
                               --CREACION DE OPERACION DESBLOQUEO CAPITAL
                               PK_INFI_CRUD.SP_CREAR_OPERACION(v_id_toma_orden,--ORDENE_ID
                                                                C_TRNFINID_TOMA_ORDEN_CAP,--TRNFIN_ID, REVISAR DE DONDE PROVIENE EL CAMPO
                                                                C_ESTATUS_OPER_EN_ESPERA,--STATUS_OPERACION,
                                                                0,--APLICA_REVERSO,
                                                                p_MONTO_TOTAL_RET,--v_op_monto_capital,--MONTO_OPERACION,
                                                                100,--TASA,
                                                                SYSDATE,--FECHA_APLICAR,
                                                                NULL,--FECHA_PROCESADA,
                                                                NULL,--ORDENE_OPERACION_ERROR,
                                                                NULL,--SERIAL,
                                                                0,--IN_COMISION,
                                                                v_ord_moneda_origen,--MONEDA_ID,
                                                                v_ord_cuenta_origen,--CTECTA_NUMERO,
                                                                NULL,--OPERACION_NOMBRE,
                                                                NULL,--CTECTA_NOMBRE,
                                                                NULL,--CTECTA_BCOCTA_BCO,
                                                                NULL,--CTECTA_BCOCTA_DIRECCION,
                                                                NULL,--CTECTA_BCOCTA_SWIFT,
                                                                NULL,--CTECTA_BCOCTA_BIC,
                                                                NULL,--CTECTA_BCOCTA_TELEFONO,
                                                                NULL,--CTECTA_BCOCTA_ABA,
                                                                NULL,--CTECTA_BCOCTA_PAIS,
                                                                NULL,--CTECTA_BCOINT_BCO,
                                                                NULL,--CTECTA_BCOINT_DIRECCION,
                                                                NULL,--CTECTA_BCOINT_SWIFT,
                                                                NULL,--CTECTA_BCOINT_BIC,
                                                                NULL,--CTECTA_BCOINT_TELEFONO,
                                                                NULL,--CTECTA_BCOINT_ABA,
                                                                NULL,--CTECTA_BCOINT_PAIS,
                                                                C_TIP_TRANS_OPER_DESBLOQUEO,--TRNF_TIPO,
                                                                NULL,--TITULO_ID, REVISAR
                                                                v_cod_op_blo_cap,--CODIGO_OPERACION, REALIZAR LA BUSQUEDA DE LOS CODIGOS DE OPERACION
                                                                p_NRO_RET_CAPITAL,--NUMERO_RETENCION,
                                                                NULL,--ORDENE_RELAC_OPERACION_ID,
                                                                NULL,--FECHA_INICIO_CP,
                                                                NULL,--FECHA_FIN_CP,
                                                                0--IN_COMISION_INVARIABLE
                                                                );
                                END IF;
                                IF v_tipo_solicitud=C_TIPO_SOLICITUD_OFERTA AND (p_MONTO_COMISION IS NOT NULL AND p_MONTO_COMISION<>0) THEN--Operacion de Desbloqueo Comision solo aplica a Oferta (En el caso de la Demanda todo el monto se bloquea en una sola transaccion de Capital)
                                --CREACION DE OPERACION DESBLOQUEO COMISION
                                PK_INFI_CRUD.SP_CREAR_OPERACION(v_id_toma_orden,--ORDENE_ID
                                                                C_TRNFINID_TOMA_ORDEN_COM,--TRNFIN_ID, REVISAR DE DONDE PROVIENE EL CAMPO
                                                                C_ESTATUS_OPER_EN_ESPERA,--STATUS_OPERACION,
                                                                0,--APLICA_REVERSO,
                                                                v_op_monto_des_comision,--MONTO_OPERACION,
                                                                p_PORC_COMISION,--TASA,
                                                                SYSDATE,--FECHA_APLICAR,
                                                                NULL,--FECHA_PROCESADA,
                                                                NULL,--ORDENE_OPERACION_ERROR,
                                                                NULL,--SERIAL,
                                                                1,--IN_COMISION,
                                                                p_DIVISA_NACIONAL,--MONEDA_ID,
                                                                v_ord_cuenta_origen,--CTECTA_NUMERO,
                                                                NULL,--OPERACION_NOMBRE,
                                                                NULL,--CTECTA_NOMBRE,
                                                                NULL,--CTECTA_BCOCTA_BCO,
                                                                NULL,--CTECTA_BCOCTA_DIRECCION,
                                                                NULL,--CTECTA_BCOCTA_SWIFT,
                                                                NULL,--CTECTA_BCOCTA_BIC,
                                                                NULL,--CTECTA_BCOCTA_TELEFONO,
                                                                NULL,--CTECTA_BCOCTA_ABA,
                                                                NULL,--CTECTA_BCOCTA_PAIS,
                                                                NULL,--CTECTA_BCOINT_BCO,
                                                                NULL,--CTECTA_BCOINT_DIRECCION,
                                                                NULL,--CTECTA_BCOINT_SWIFT,
                                                                NULL,--CTECTA_BCOINT_BIC,
                                                                NULL,--CTECTA_BCOINT_TELEFONO,
                                                                NULL,--CTECTA_BCOINT_ABA,
                                                                NULL,--CTECTA_BCOINT_PAIS,
                                                                C_TIP_TRANS_OPER_DESBLOQUEO,--TRNF_TIPO,
                                                                NULL,--TITULO_ID, REVISAR
                                                                v_cod_op_blo_com,--CODIGO_OPERACION, REALIZAR LA BUSQUEDA DE LOS CODIGOS DE OPERACION
                                                                p_NRO_RET_COMISION,--NUMERO_RETENCION,
                                                                NULL,--ORDENE_RELAC_OPERACION_ID,
                                                                NULL,--FECHA_INICIO_CP,
                                                                NULL,--FECHA_FIN_CP,
                                                                0--IN_COMISION_INVARIABLE
                                                                );
                                END IF;


        --CAMBIOS DICOM 2018 LENIN RAMIREZ / JOSE GOMEZ
        --INCLUSION DE CONDICION QUE VALIDA SI EL REGISTRO ESTA EN BLOQUEO PREVIO (VALOR 0) O YA ADJUDICADO (VALOR 1)
        --LOS REGSITROS TIPO 0 NO DEBEN TENER OPERACIONES NI DE DEBITO NI DE CREDITO

                        --CREACION DE OPERACION DE DEBITO CAPITAL
                        IF p_TIPO_PROCESO =1 THEN
                                PK_INFI_CRUD.SP_CREAR_OPERACION(v_id_toma_orden,--ORDENE_ID
                                                        C_TRNFINID_TOMA_ORDEN_CAP,--TRNFIN_ID, REVISAR DE DONDE PROVIENE EL CAMPO
                                                        C_ESTATUS_OPER_EN_ESPERA,--STATUS_OPERACION,
                                                        0,--APLICA_REVERSO,
                                                        v_op_monto_capital,--MONTO_OPERACION,
                                                        100,--TASA,
                                                        SYSDATE,--FECHA_APLICAR,
                                                        NULL,--FECHA_PROCESADA,
                                                        NULL,--ORDENE_OPERACION_ERROR,
                                                        NULL,--SERIAL,
                                                        0,--IN_COMISION,
                                                        v_ord_moneda_origen,--MONEDA_ID,
                                                        v_ord_cuenta_origen,--CTECTA_NUMERO,
                                                        NULL,--OPERACION_NOMBRE,
                                                        NULL,--CTECTA_NOMBRE,
                                                        NULL,--CTECTA_BCOCTA_BCO,
                                                        NULL,--CTECTA_BCOCTA_DIRECCION,
                                                        NULL,--CTECTA_BCOCTA_SWIFT,
                                                        NULL,--CTECTA_BCOCTA_BIC,
                                                        NULL,--CTECTA_BCOCTA_TELEFONO,
                                                        NULL,--CTECTA_BCOCTA_ABA,
                                                        NULL,--CTECTA_BCOCTA_PAIS,
                                                        NULL,--CTECTA_BCOINT_BCO,
                                                        NULL,--CTECTA_BCOINT_DIRECCION,
                                                        NULL,--CTECTA_BCOINT_SWIFT,
                                                        NULL,--CTECTA_BCOINT_BIC,
                                                        NULL,--CTECTA_BCOINT_TELEFONO,
                                                        NULL,--CTECTA_BCOINT_ABA,
                                                        NULL,--CTECTA_BCOINT_PAIS,
                                                        C_TIP_TRANS_OPER_DEBITO,--TRNF_TIPO,
                                                        NULL,--TITULO_ID, REVISAR
                                                        v_cod_op_deb_cap,--CODIGO_OPERACION, REALIZAR LA BUSQUEDA DE LOS CODIGOS DE OPERACION
                                                        NULL,--NUMERO_RETENCION,
                                                        NULL,--ORDENE_RELAC_OPERACION_ID,
                                                        NULL,--FECHA_INICIO_CP,
                                                        NULL,--FECHA_FIN_CP,
                                                        0--IN_COMISION_INVARIABLE
                                                        );
                        END IF;

        --CAMBIOS DICOM 2018 LENIN RAMIREZ / JOSE GOMEZ
        --INCLUSION DE CONDICION QUE VALIDA SI EL REGISTRO ESTA EN BLOQUEO PREVIO (VALOR 0) O YA ADJUDICADO (VALOR 1)
        --LOS REGSITROS TIPO 0 NO DEBEN TENER OPERACIONES NI DE DEBITO NI DE CREDITO

                        IF p_TIPO_PROCESO =1 THEN

                           IF p_MONTO_COMISION IS NOT NULL AND p_MONTO_COMISION<>0 THEN
                        --CREACION DE OPERACION DE DEBITO COMISION
                        PK_INFI_CRUD.SP_CREAR_OPERACION(v_id_toma_orden,--ORDENE_ID
                                                                C_TRNFINID_TOMA_ORDEN_COM,--TRNFIN_ID, REVISAR DE DONDE PROVIENE EL CAMPO
                                                                C_ESTATUS_OPER_EN_ESPERA,--STATUS_OPERACION,
                                                                0,--APLICA_REVERSO,
                                                                p_MONTO_COMISION,--MONTO_OPERACION,
                                                                p_PORC_COMISION,--TASA,
                                                                SYSDATE,--FECHA_APLICAR,
                                                                NULL,--FECHA_PROCESADA,
                                                                NULL,--ORDENE_OPERACION_ERROR,
                                                                NULL,--SERIAL,
                                                                1,--IN_COMISION,
                                                                p_DIVISA_NACIONAL,--MONEDA_ID,
                                                                v_ord_cuenta_origen,--CTECTA_NUMERO,
                                                                NULL,--OPERACION_NOMBRE,
                                                                NULL,--CTECTA_NOMBRE,
                                                                NULL,--CTECTA_BCOCTA_BCO,
                                                                NULL,--CTECTA_BCOCTA_DIRECCION,
                                                                NULL,--CTECTA_BCOCTA_SWIFT,
                                                                NULL,--CTECTA_BCOCTA_BIC,
                                                                NULL,--CTECTA_BCOCTA_TELEFONO,
                                                                NULL,--CTECTA_BCOCTA_ABA,
                                                                NULL,--CTECTA_BCOCTA_PAIS,
                                                                NULL,--CTECTA_BCOINT_BCO,
                                                                NULL,--CTECTA_BCOINT_DIRECCION,
                                                                NULL,--CTECTA_BCOINT_SWIFT,
                                                                NULL,--CTECTA_BCOINT_BIC,
                                                                NULL,--CTECTA_BCOINT_TELEFONO,
                                                                NULL,--CTECTA_BCOINT_ABA,
                                                                NULL,--CTECTA_BCOINT_PAIS,
                                                                C_TIP_TRANS_OPER_DEBITO,--TRNF_TIPO,
                                                                NULL,--TITULO_ID, REVISAR
                                                                v_cod_op_deb_com,--CODIGO_OPERACION, REALIZAR LA BUSQUEDA DE LOS CODIGOS DE OPERACION
                                                                NULL,--NUMERO_RETENCION,
                                                                NULL,--ORDENE_RELAC_OPERACION_ID,
                                                                NULL,--FECHA_INICIO_CP,
                                                                NULL,--FECHA_FIN_CP,
                                                                0--IN_COMISION_INVARIABLE
                                                        );
                        END IF;
                    END IF;

        --CAMBIOS DICOM 2018 LENIN RAMIREZ / JOSE GOMEZ
        --INCLUSION DE CONDICION QUE VALIDA SI EL REGISTRO ESTA EN BLOQUEO PREVIO (VALOR 0) O YA ADJUDICADO (VALOR 1)
        --LOS REGSITROS TIPO 0 NO DEBEN TENER OPERACIONES NI DE DEBITO NI DE CREDITO

                        IF p_TIPO_PROCESO =1 THEN


            --CREACION DE ORDEN_PAGO
            PK_INFI_CRUD.SP_CREAR_ORDEN(p_undinv_id,
                                        v_client_id,
                                        C_ORDSTA_REGISTRADA,
                                        '0',--SISTEMA_ID
                                        v_empres_id, --EMPRES_ID, --BUSCAR DESDE LA UNIDAD DE INVERSION
                                        NULL,--CONTRAPARTE,
                                        C_TRANS_ORDEN_PAGO,--TRANSA_ID,
                                        0,--ENVIADO,
                                        NULL,--ORDENE_CTE_SEG_BCO,
                                        NULL,--ORDENE_CTE_SEG_SEG,
                                        NULL,--ORDENE_CTE_SEG_SUB,
                                        NULL,--ORDENE_CTE_SEG_INFI,
                                        p_FECHA_OPERACION,--ORDENE_PED_FE_ORDEN,
                                        p_FECHA_VALOR_OPERACION,--ORDENE_PED_FE_VALOR,
                                        v_ord_monto_solicitado,--ORDENE_PED_MONTO,
                                        0,--ORDENE_PED_TOTAL_PEND,
                                        v_ord_monto_adjudicacion,--MONTO CAPITAL + MONTO COMISION --VERIFICAR QUE SE DEBE COLOCAR EN LOS CASOS DE OFERTA PUNTO_REV
                                        0,--ORDENE_PED_INT_CAIDOS
                                        v_bloter_id,--BLOTER_ID,
                                        NULL,--ORDENE_PED_CTA_BSNRO,
                                        NULL,--ORDENE_PED_CTA_BSTIP,
                                        v_ord_cuenta_origen,--CTECTA_NUMERO,
                                        100,--ORDENE_PED_PRECIO,
                                        0,--ORDENE_PED_RENDIMIENTO,
                                        0,--ORDENE_PED_IN_BDV,
                                        v_ord_moneda_destino,--MONEDA_ID,
                                        0,--ORDENE_PED_RCP_PRECIO,
                                        v_ord_monto_adjudicacion,--ORDENE_ADJ_MONTO,
                                        v_username,--ORDENE_USR_NOMBRE,
                                        NULL,--ORDENE_USR_CEN_CONTABLE,
                                        NULL,--ORDENE_USR_SUCURSAL,
                                        NULL,--ORDENE_USR_TERMINAL,
                                        v_bdv_vehiculo_id,--ORDENE_VEH_TOM
                                        v_bdv_vehiculo_id,--ORDENE_VEH_COL
                                        v_bdv_vehiculo_id,--ORDENE_VEH_REC
                                        v_ejecucion_id,--ORDENE_EJEC_ID,
                                        NULL,--ORDENE_FE_ULT_ACT,
                                        p_MONTO_COMISION,--ORDENE_PED_COMISIONES,
                                        0,--ORDENE_FINANCIADO,
                                        v_ejecucion_id,--EJECUCION_ID
                                        p_TASA_CAMBIO,--ORDENE_TASA_POOL,
                                        0,--ORDENE_GANANCIA_RED,
                                        0,--ORDENE_COMISION_OFICINA,
                                        p_PORC_COMISION,--ORDENE_COMISION_OPERACION,
                                        0,--ORDENE_OPERAC_PEND,
                                        v_id_toma_orden,--ORDENE_ID_RELACION,
                                        p_TASA_CAMBIO,--ORDENE_TASA_CAMBIO,
                                        NULL,--CONCEPTO_ID, VERIFICAR QUE INFORMACION SE COLOCARA PUNTO_REV
                                        NULL,--ORDENE_OBSERVACION,
                                        C_TIPO_PRODUCTO,--TIPO_PRODUCTO_ID, VERIFICAR EL PRODUCTO QUE SE UTILIZARA EN DICOM PUNTO_REV
                                        v_cta_abono,--CTA_ABONO VERIFICAR VALOR A COLOCAR
                                        0,--p_PORC_COMISION_IGTF Porcentaje de Comision IGTF
                                        0,--p_COMISION_IGTF,     Monto de la Comision IGTF
                                        v_id_orden_pago
                                         );
                        END IF;

        --CAMBIOS DICOM 2018 LENIN RAMIREZ / JOSE GOMEZ
        --INCLUSION DE CONDICION QUE VALIDA SI EL REGISTRO ESTA EN BLOQUEO PREVIO (VALOR 0) O YA ADJUDICADO (VALOR 1)
        --LOS REGSITROS TIPO 0 NO DEBEN TENER OPERACIONES NI DE DEBITO NI DE CREDITO

                        IF p_TIPO_PROCESO =1 THEN
                        --CREACION DE OPERACION DE ABONO
                        PK_INFI_CRUD.SP_CREAR_OPERACION(v_id_orden_pago,--ORDENE_ID
                                                                C_TRNFINID_TOMA_ORDEN_CAP,--TRNFIN_ID, REVISAR DE DONDE PROVIENE EL CAMPO
                                                                C_ESTATUS_OPER_EN_ESPERA,--STATUS_OPERACION,
                                                                0,--APLICA_REVERSO,
                                                                v_ord_monto_adjudicacion,--MONTO_OPERACION,
                                                                100,--TASA,
                                                                SYSDATE,--FECHA_APLICAR,
                                                                p_FECHA_VALOR_OPERACION,--FECHA_PROCESADA,
                                                                NULL,--ORDENE_OPERACION_ERROR,
                                                                NULL,--SERIAL,
                                                                1,--IN_COMISION,
                                                                v_ord_moneda_destino,--MONEDA_ID,
                                                                v_ord_cuenta_destino,--CTECTA_NUMERO,
                                                                NULL,--OPERACION_NOMBRE,
                                                                NULL,--CTECTA_NOMBRE,
                                                                NULL,--CTECTA_BCOCTA_BCO,
                                                                NULL,--CTECTA_BCOCTA_DIRECCION,
                                                                NULL,--CTECTA_BCOCTA_SWIFT,
                                                                NULL,--CTECTA_BCOCTA_BIC,
                                                                NULL,--CTECTA_BCOCTA_TELEFONO,
                                                                NULL,--CTECTA_BCOCTA_ABA,
                                                                NULL,--CTECTA_BCOCTA_PAIS,
                                                                NULL,--CTECTA_BCOINT_BCO,
                                                                NULL,--CTECTA_BCOINT_DIRECCION,
                                                                NULL,--CTECTA_BCOINT_SWIFT,
                                                                NULL,--CTECTA_BCOINT_BIC,
                                                                NULL,--CTECTA_BCOINT_TELEFONO,
                                                                NULL,--CTECTA_BCOINT_ABA,
                                                                NULL,--CTECTA_BCOINT_PAIS,
                                                                C_TIP_TRANS_OPER_CREDITO,--TRNF_TIPO,
                                                                NULL,--TITULO_ID, REVISAR
                                                                v_cod_abono,--CODIGO_OPERACION, REALIZAR LA BUSQUEDA DE LOS CODIGOS DE OPERACION
                                                                NULL,--NUMERO_RETENCION,
                                                                NULL,--ORDENE_RELAC_OPERACION_ID,
                                                                NULL,--FECHA_INICIO_CP,
                                                                NULL,--FECHA_FIN_CP,
                                                                0--IN_COMISION_INVARIABLE
                                                        );
                 END IF;

        EXCEPTION
          WHEN PK_INFI_CRUD.CRUD_VALIDATION_EXCEPTION THEN
          BEGIN

          LOGIC_MSJ_EXCEPTION:='Error CRUD de Validacion : SP_SOLICITUD_DICOM '|| PK_INFI_CRUD.CRUD_MSJ_EXCEPTION;
          RAISE PK_INFI_CRUD.CRUD_VALIDATION_EXCEPTION;
          END;
          WHEN PK_INFI_CRUD.CRUD_UNEXPECTED_EXCEPTION THEN
          BEGIN
          ROLLBACK;
          LOGIC_MSJ_EXCEPTION:='Error CRUD Inesperado :  SP_SOLICITUD_DICOM '|| PK_INFI_CRUD.CRUD_MSJ_EXCEPTION;
          RAISE PK_INFI_CRUD.CRUD_UNEXPECTED_EXCEPTION;
          END;

          WHEN LOGIC_VALIDATION_EXCEPTION THEN
          BEGIN
          LOGIC_MSJ_EXCEPTION:='Error LOGIC de Validacion: SP_SOLICITUD_DICOM '|| LOGIC_MSJ_EXCEPTION;
            RAISE LOGIC_VALIDATION_EXCEPTION;

          END;
          WHEN OTHERS THEN
          BEGIN
          --DBMS_OUTPUT.PUT_LINE('Error LOGIC Inesperado: SP_SOLICITUD_DICOM --> SQLERRM '|| SQLERRM ||'SQLCODE ' ||SQLCODE);
          LOGIC_MSJ_EXCEPTION:='Error LOGIC Inesperado: SP_SOLICITUD_DICOM '|| LOGIC_MSJ_EXCEPTION;
            RAISE LOGIC_UNEXPECTED_EXCEPTION;

          END;

        END SP_PROCESAR_SOLICITUD_DICOM;

FUNCTION VALIDAR_SOLICITUD_DUPLICADA (p_NRO_SOLICITUD        IN SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE)
      RETURN  SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE IS
      P_SOLICITUD_EXISTE  SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE;
    BEGIN
        P_SOLICITUD_EXISTE:='1';
        SELECT NRO_SOLICITUD INTO P_SOLICITUD_EXISTE FROM SOLICITUDES_DICOM WHERE NRO_SOLICITUD=p_NRO_SOLICITUD AND ESTATUS_REGISTRO <>0;
        RETURN P_SOLICITUD_EXISTE;
        EXCEPTION
        WHEN NO_DATA_FOUND THEN
          BEGIN
                P_SOLICITUD_EXISTE:='0';
                RETURN P_SOLICITUD_EXISTE;
          END;
END;
PROCEDURE SP_ORQUESTADOR (p_undinv_id            IN INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%TYPE,
                          p_NRO_SOLICITUD        IN SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
                          p_TIPO_CLIENTE         IN SOLICITUDES_DICOM.TIPO_CLIENTE%TYPE,
                          p_CED_RIF              IN SOLICITUDES_DICOM.CED_RIF%TYPE,
                          p_NOMBRE_CLIENTE       IN SOLICITUDES_DICOM.NOMBRE_CLIENTE%TYPE,
                          p_TELEFONO_CLIENTE     IN SOLICITUDES_DICOM.TELEFONO_CLIENTE%TYPE,
                          p_CORREO_CLIENTE       IN SOLICITUDES_DICOM.CORREO_CLIENTE%TYPE,
                          p_NRO_CTA_NACIONAL     IN SOLICITUDES_DICOM.NRO_CTA_NACIONAL%TYPE,
                          p_NRO_RET_CAPITAL      IN SOLICITUDES_DICOM.NRO_RET_CAPITAL%TYPE,
                          p_HORA_BLOQ            IN SOLICITUDES_DICOM.HORA_BLOQ%TYPE,
                          p_MONTO_OP_NACIONAL    IN SOLICITUDES_DICOM.MONTO_OP_NACIONAL%TYPE,
                          p_DIVISA_NACIONAL      IN SOLICITUDES_DICOM.DIVISA_NACIONAL%TYPE,
                          p_NRO_RET_COMISION     IN SOLICITUDES_DICOM.NRO_RET_COMISION%TYPE,
                          p_MONTO_COMISION       IN SOLICITUDES_DICOM.MONTO_COMISION%TYPE,
                          p_PORC_COMISION        IN SOLICITUDES_DICOM.PORC_COMISION%TYPE,
                          p_FECHA_OPERACION      IN SOLICITUDES_DICOM.FECHA_OPERACION%TYPE,
                          p_NRO_CTA_EXTRANJERA   IN SOLICITUDES_DICOM.NRO_CTA_EXTRANJERA%TYPE,
                          p_MONTO_OP_EXTRANJERA  IN SOLICITUDES_DICOM.MONTO_OP_EXTRANJERA%TYPE,
                          p_DIVISA_EXTRANJERA    IN SOLICITUDES_DICOM.DIVISA_EXTRANJERA%TYPE,
                          p_TASA_CAMBIO          IN SOLICITUDES_DICOM.TASA_CAMBIO%TYPE,
                          p_FECHA_VALOR_OPERACION IN SOLICITUDES_DICOM.FECHA_VALOR_OPERACION%TYPE,
                          p_CODIGO_RESPUESTA     IN SOLICITUDES_DICOM.CODIGO_RESPUESTA%TYPE,
                          p_TIPO_OPERACION       IN SOLICITUDES_DICOM.TIPO_OPERACION%TYPE,
                          p_tipo_solicitud       IN INFI_TB_106_UNIDAD_INVERSION.TIPO_SOLICITUD%TYPE,-- AQUI 27
                          p_PORC_COMISION_IGTF   IN INFI_TB_204_ORDENES.ORDENE_PED_PORC_COMISION_IGTF%TYPE,
                          p_COMISION_IGTF        IN INFI_TB_204_ORDENES.ORDENE_PED_COMISION_IGTF%TYPE,
                          p_MONTO_TOTAL_RET      IN INFI_TB_207_ORDENES_OPERACION.MONTO_OPERACION%TYPE,
                          p_empres_id            IN INFI_TB_106_UNIDAD_INVERSION.EMPRES_ID%TYPE,
                          p_bdv_vehiculo_id      IN infi_tb_018_vehiculos.vehicu_id%TYPE,
                          p_bloter_id            IN INFI_TB_107_UI_BLOTTER.BLOTER_ID%TYPE,
                          p_cod_op_blo_cap         IN    INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_BLO%TYPE,
                          p_cod_op_blo_com         IN    INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_BLO%TYPE,
                          p_cod_op_deb_cap         IN    INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_DEB%TYPE,
                          p_cod_op_cre_cap         IN    INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_CRE%TYPE,
                          p_cod_op_deb_com         IN    INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_DEB%TYPE,
                          p_cod_op_cre_conv_20     IN    INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_CRE%TYPE,
                          P_NRO_JORNADA          IN  SOLICITUDES_DICOM.ID_JORNADA%TYPE,
                          p_username             IN INFI_TB_204_ORDENES.ORDENE_USR_NOMBRE%TYPE,
                          p_ejecucion_id         IN INFI_TB_204_ORDENES.EJECUCION_ID%TYPE,
                          p_TIPO_PROCESO         IN  INFI_TB_106_UNIDAD_INVERSION.CONTROL_DES%TYPE)  --PARAMETRO CREADO PARA EL MANEJO DEL NUEVO PASO EN EL FLUJO DE
                          --DICOM - 0 INDICA QUE SOLO SE CREARAN LOS REGISTROS DE BLOQUEO Y DESBLOQUEO
                          --1 INDICA QUE SON OPERACIONES EN FIRNA, A LAS CUALES SE LES CREARAN LOS REGISTROS
                          --DE DEBITO Y CREDITO TANTO EN DIVISAS COMOM EN BOLIVARES


AS


             v_estatus_registro number;


    BEGIN

                        v_tipo_solicitud         := p_tipo_solicitud  ;
                        v_empres_id              := p_empres_id       ;
                        v_bdv_vehiculo_id        := p_bdv_vehiculo_id ;
                        v_bloter_id              := p_bloter_id       ;

                        v_cod_op_blo_cap      :=p_cod_op_blo_cap;
                        v_cod_op_deb_cap      :=p_cod_op_deb_cap;
                        v_cod_op_cre_cap      :=p_cod_op_cre_cap;

                        v_cod_op_blo_com      :=p_cod_op_blo_com;
                        v_cod_op_deb_com      :=p_cod_op_deb_com;

                        v_cod_op_cre_conv_20  :=p_cod_op_cre_conv_20;



        --CAMBIOS DICOM 2018 LENIN RAMIREZ / JOSE GOMEZ
        --INCLUSION DE LLAMADO A UPDATE DE LA TABLA INFI_TB_106_UNIDAD_INVERSION SOBRE EL CAMPO CONTROL_DES  PARA COLOCARLO
        --CON VALOR 1, LO CUAL INDICA QUE YA LA ORDEN PUEDE SER PROCESADA YA SEA PARA SU ADJUDICACION O SU DESBLOQUEO SOLAMENTE
            if p_TIPO_PROCESO=0 then
                v_estatus_registro:=1;
            else
                v_estatus_registro:=2;
            end if;

            --IF  VALIDAR_SOLICITUD_DUPLICADA(p_NRO_SOLICITUD)='0' THEN



            IF p_CODIGO_RESPUESTA=0  THEN --Creacion de operaciones para Ordenes verificadas de forma satisfactoria
            PK_INFI_LOGIC_DICOM.SP_PROCESAR_SOLICITUD_DICOM(p_undinv_id,
                                                   p_NRO_SOLICITUD,
                                                   p_TIPO_CLIENTE,
                                                   p_CED_RIF,
                                                   p_NOMBRE_CLIENTE,
                                                   p_TELEFONO_CLIENTE,
                                                   p_CORREO_CLIENTE,
                                                   p_NRO_CTA_NACIONAL,
                                                   p_NRO_RET_CAPITAL,
                                                   p_HORA_BLOQ,
                                                   p_MONTO_OP_NACIONAL,
                                                   p_DIVISA_NACIONAL,
                                                   p_NRO_RET_COMISION,
                                                   p_MONTO_COMISION,
                                                   p_PORC_COMISION,
                                                   p_FECHA_OPERACION,
                                                   p_NRO_CTA_EXTRANJERA,
                                                   p_MONTO_OP_EXTRANJERA,
                                                   p_DIVISA_EXTRANJERA,
                                                   p_TASA_CAMBIO,
                                                   p_FECHA_VALOR_OPERACION,
                                                   p_CODIGO_RESPUESTA,
                                                   p_TIPO_OPERACION,
                                                   p_PORC_COMISION_IGTF,
                                                   p_COMISION_IGTF,
                                                   p_MONTO_TOTAL_RET,
                                  p_TIPO_PROCESO           );  --PARAMETRO CREADO PARA EL MANEJO DEL NUEVO PASO EN EL FLUJO DE
                                  --DICOM - 0 INDICA QUE SOLO SE CREARAN LOS REGISTROS DE BLOQUEO Y DESBLOQUEO
                                  --1 INDICA QUE SON OPERACIONES EN FIRNA, A LAS CUALES SE LES CREARAN LOS REGISTROS
                                  --DE DEBITO Y CREDITO TANTO EN DIVISAS COMOM EN BOLIVARES);



                                                PK_INFI_CRUD.SP_ACTIALIZAR_SOLICITUD_DICOM(p_NRO_SOLICITUD,
                                                                                              P_NRO_JORNADA,
                                                                                              p_CODIGO_RESPUESTA,
                                                                                              p_NOMBRE_CLIENTE,
                                                                                              p_TELEFONO_CLIENTE,
                                                                                              p_CORREO_CLIENTE,
                                                                                              p_NRO_RET_CAPITAL,
                                                                                              p_HORA_BLOQ,
                                                                                              p_DIVISA_NACIONAL,
                                                                                              p_NRO_RET_COMISION,
                                                                                              p_MONTO_COMISION,
                                                                                              p_PORC_COMISION,
                                                                                              p_DIVISA_EXTRANJERA,
                                                                                              p_TASA_CAMBIO,
                                                                                              v_id_toma_orden,
                                                                                              v_id_orden_pago,
                                                                                              p_undinv_id,
                                                                                              v_estatus_registro, --1 indica registro con bloqueo previo --2 registro ya procesdo por el bcv
                                                                                              p_COMISION_IGTF,
                                                                                              p_PORC_COMISION_IGTF
                                                                                           );


            ELSE
                PK_INFI_CRUD.SP_ACTIALIZAR_SOLICITUD_DICOM(p_NRO_SOLICITUD,
                                                              P_NRO_JORNADA,
                                                              p_CODIGO_RESPUESTA,
                                                              p_NOMBRE_CLIENTE,
                                                              p_TELEFONO_CLIENTE,
                                                              p_CORREO_CLIENTE,
                                                              p_NRO_RET_CAPITAL,
                                                              p_HORA_BLOQ,
                                                              p_DIVISA_NACIONAL,
                                                              p_NRO_RET_COMISION,
                                                              p_MONTO_COMISION,
                                                              p_PORC_COMISION,
                                                              p_DIVISA_EXTRANJERA,
                                                              p_TASA_CAMBIO,
                                                              NULL,
                                                              NULL,
                                                              p_undinv_id,
                                                              v_estatus_registro, --1 indica registro con bloqueo previo --2 registro ya procesdo por el bcv
                                                              p_COMISION_IGTF,
                                                              p_PORC_COMISION_IGTF

                                                              );

            END IF;

                --v_bdv_vehiculo_id:=GET_VEHICULO(C_RIF_BDV);
                --BUSQUEDA DE INFORMACION DE LA UNIDAD DE INVERSION
               /* SELECT TIPO_SOLICITUD,EMPRES_ID INTO v_tipo_solicitud,v_empres_id FROM INFI_TB_106_UNIDAD_INVERSION UI WHERE UI.UNDINV_ID=p_undinv_id;

                SELECT BLOTER_ID INTO v_bloter_id FROM INFI_TB_107_UI_BLOTTER UIB  WHERE UIB.UNDINV_ID=p_undinv_id;

                BEGIN
                    FOR cod_op IN (SELECT TRNFIN_ID,COD_OPERACION_CTE_DEB,COD_OPERACION_CTE_CRE,COD_OPERACION_CTE_BLO
                                FROM infi_tb_032_trnf_fijas_vehicu tfv
                                WHERE tfv.VEHICU_ID=v_bdv_vehiculo_id AND tfv.insfin_id = (SELECT ui.insfin_id
                                FROM infi_tb_106_unidad_inversion ui WHERE ui.undinv_id = p_undinv_id))
                    LOOP

                        IF    cod_op.TRNFIN_ID=C_TRNFINID_TOMA_ORDEN_CAP THEN--Busqueda codigo Operacion Debito Capital
                              v_cod_op_deb_cap:=cod_op.COD_OPERACION_CTE_DEB;
                              v_cod_op_cre_cap:=cod_op.COD_OPERACION_CTE_CRE;
                              v_cod_op_blo_cap:=cod_op.COD_OPERACION_CTE_BLO;
                        ELSIF cod_op.TRNFIN_ID=C_TRNFINID_TOMA_ORDEN_COM THEN--Busqueda codigo Operacion Debito Comision
                              v_cod_op_deb_com:=cod_op.COD_OPERACION_CTE_DEB;
                              v_cod_op_blo_com:=cod_op.COD_OPERACION_CTE_BLO;
                        ELSIF cod_op.TRNFIN_ID=C_TRNFINID_TOMA_ORDEN_CONV_20 THEN--Busqueda de codigo de operacion para Abono a cta Convenio 20
                              v_cod_op_cre_conv_20:=cod_op.COD_OPERACION_CTE_CRE;
                        END IF;

                    END LOOP;
                END;*/

            --COMENTADO PARA CONFIRMAR SI EL CAMBIO ES EN OTRA PARTE DEL PACKAGE
--                    IF p_TIPO_PROCESO=0 THEN
                        --PK_INFI_CRUD.SP_ACTUALIZ_ESTATUS_ORDEN_204(p_undinv_id,p_TIPO_PROCESO,'PRE_APROBADA');
   ---                 ELSE
      --                  PK_INFI_CRUD.SP_ACTUALIZ_ESTATUS_ORDEN_204(p_undinv_id,p_TIPO_PROCESO,'CRUZADA');
        --            END IF;

                COMMIT;

        --        EXCEPTION
        --        WHEN PK_INFI_CRUD.CRUD_VALIDATION_EXCEPTION THEN
        --        --DBMS_OUTPUT.PUT_LINE('CRUD_VALIDATION_EXCEPTION ---> '||LOGIC_MSJ_EXCEPTION);
        --
        --        WHEN PK_INFI_CRUD.CRUD_UNEXPECTED_EXCEPTION THEN
        --        --DBMS_OUTPUT.PUT_LINE('CRUD_UNEXPECTED_EXCEPTION ---> '||LOGIC_MSJ_EXCEPTION);
        --
       --END IF;
        END;


PROCEDURE SP_ORQUESTADORINTER (
                           p_ID_OPER                             IN INFI_TB_235_INTERVENCION.ID_OPER%TYPE,
                           p_STATUS_COBRO                 IN INFI_TB_235_INTERVENCION.STATUS_COBRO%TYPE,
                           p_DESCRIPCION_COBRO          IN INFI_TB_235_INTERVENCION.DESCRIPCION_COBRO%TYPE
                          )
                          
                        
AS


    BEGIN

                   UPDATE INFI_TB_235_INTERVENCION SET STATUS_COBRO=p_STATUS_COBRO, DESCRIPCION_COBRO=p_DESCRIPCION_COBRO
                   where ID_OPER=p_ID_OPER;                         
               
  
                COMMIT;

        END;
PROCEDURE CREAR_UNIDAD_INVERSION_DICOM (
      P_TIPO_ORDEN              IN  CHAR,                                                   -- O=OFERTA , D=DEMANDA , C=CERTIFICADO ORO
      P_NRO_JORNADA             IN  INFI_TB_106_UNIDAD_INVERSION.NRO_JORNADA%type,          -- NRO DE JORNADA REGISTRADO EN BCV
      P_USUARIO                 IN  INFI_TB_106_UNIDAD_INVERSION.AUT_USUARIO_USERID%type,   -- USUARIO GENERICO QUE LLAMA EL PROCESO
      P_IP                      IN  INFI_TB_106_UNIDAD_INVERSION.AUT_IP%type,               -- IP DEL SERVIDOR QUE LLAMA EL PROCESO
      P_ID_UNIDAD_INVERSION     OUT INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%type,                          -- EN CASO DE RESULTADO EXITOSO RETORNA EL ID DE UNIDAD DE INVERSIÓN
      P_MENSAJE                 OUT VARCHAR2,                                                -- MENSAJE DE RETORNO
      p_TIPO_PROCESO            IN  INFI_TB_106_UNIDAD_INVERSION.CONTROL_DES%type          --PARAMETRO CREADO PARA EL MANEJO DEL NUEVO PASO EN EL FLUJO DE
      --DICOM - 0 INDICA QUE SOLO SE CREARAN LOS REGISTROS DE BLOQUEO Y DESBLOQUEO
      --1 INDICA QUE SON OPERACIONES EN FIRNA, A LAS CUALES SE LES CREARAN LOS REGISTROS
      --DE DEBITO Y CREDITO TANTO EN DIVISAS COMOM EN BOLIVARES);

)
AS
/******************************************************************************
   NAME:       CREAR_UNIDAD_INVERSION_DICOM
   PURPOSE:    Permite crear automáticamente unidades de inversión de acuerdo
                a configuraciones de parámetros generales.
                Este proceso se realiza para el uso del producto DICOM

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        17/05/2017          1. Created this procedure.

   NOTES:

   Automatically available Auto Replace Keywords:
      Object Name:     CREAR_UNIDAD_INVERSION_DICOM
      Sysdate:         17/05/2017
      Date and Time:   17/05/2017, 02:38:09 p.m., and 17/05/2017 02:38:09 p.m.
      Username:         NM25287
      Table Name:       INFI_TB_106_UNIDAD_INVERSION, INFI_TB_108_UI_TITULOS,
                        INFI_TB_109_UI_EMPRESAS,INFI_TB_107_UI_BLOTTER

******************************************************************************/
    --CONSTANTES
    C_SIGLAS_INFI VARCHAR2(4):='INFI';
    C_TIPO_ORDEN_OFERTA CHAR :='O';
    C_TIPO_ORDEN_DEMANDA CHAR :='D';
    C_TIPO_ORDEN_ORO CHAR :='C';
    C_PARGRP_ID INFI_TB_001_PARAM_GRUPO.PARGRP_ID%type :='133';
    C_TIPO_PRODUCTO INFI_TB_019_TIPO_DE_PRODUCTO.TIPO_PRODUCTO_ID%type :='DICOM';
    C_CANAL_DICOM INFI_TB_904_CANAL.CANAL_ID%type :=4;

    --VARIABLES A LLENAR CON LA CONSULTA DE PARAMETROS
    V_NOMBRE_SUBASTA INFI_TB_106_UNIDAD_INVERSION.UNDINV_EMISION%type;
    V_DESCRIPCION_SUBASTA INFI_TB_106_UNIDAD_INVERSION.UNDINV_DESCRIPCION %type;
    V_INSTRUMENTO_FINANCIERO INFI_TB_101_INST_FINANCIEROS.INSFIN_ID%type;
    V_MONEDA INFI_TB_106_UNIDAD_INVERSION.MONEDA_ID%type;
    V_EMPRESA_ID INFI_TB_106_UNIDAD_INVERSION.EMPRES_ID%type;
    V_INSTRUMENTO_FINANCIERO_CHAR INFI_TB_101_INST_FINANCIEROS.INSFIN_DESCRIPCION%type;
    V_PARAMETRO_NOMBRE_SUBASTA INFI_TB_002_PARAM_TIPOS.PARTIP_NOMBRE_PARAMETRO%type;
    V_PARAMETRO_NOMBRE_INSTRUMENTO INFI_TB_002_PARAM_TIPOS.PARTIP_NOMBRE_PARAMETRO%type;
    V_PARAMETRO_MONEDA INFI_TB_002_PARAM_TIPOS.PARTIP_NOMBRE_PARAMETRO%type;
    V_PARAMETRO_EMISOR INFI_TB_002_PARAM_TIPOS.PARTIP_NOMBRE_PARAMETRO%type;
    V_TIPO_SOLICITUD INFI_TB_106_UNIDAD_INVERSION.TIPO_SOLICITUD%type;
    V_EMISOR_RIF VARCHAR2(15);
    V_USUARIO_ID NUMBER(22);
    V_USUARIO_NOMBRE VARCHAR2(50);
    V_USUARIO_ROL VARCHAR2(50);
    V_APLICACION_ID NUMBER(22);
    V_BLOTTER_ID INFI_TB_102_BLOTER.BLOTER_ID%type;
    V_CAMPO_VALIDAR VARCHAR2(25);
     V_ERROR_NUM NUMBER(5):=-1;

BEGIN
--DBMS_OUTPUT.put_line('0');
    BEGIN

      --IDENTIFICAR PARAMETROS DE CONFIGURACION
        IF P_TIPO_ORDEN = C_TIPO_ORDEN_OFERTA THEN
            --OFERTA
            V_PARAMETRO_NOMBRE_SUBASTA:='UNDINV_NOMBRE_SUB_OFERTA';
            V_PARAMETRO_NOMBRE_INSTRUMENTO:='UNDINV_INST_FINANC_OFERTA';
            V_PARAMETRO_MONEDA:='UNDINV_MONEDA_OFERTA';
            V_PARAMETRO_EMISOR:='UNDINV_EMISOR_OFERTA';
            V_TIPO_SOLICITUD:=1;
        ELSIF P_TIPO_ORDEN = C_TIPO_ORDEN_DEMANDA THEN
            --DEMANDA

            V_PARAMETRO_NOMBRE_SUBASTA:='UNDINV_NOMBRE_SUB_DEMANDA';
            V_PARAMETRO_NOMBRE_INSTRUMENTO:='UNDINV_INST_FINANC_DEMAND';
            V_PARAMETRO_MONEDA:='UNDINV_MONEDA_DEMANDA';
            V_PARAMETRO_EMISOR:='UNDINV_EMISOR_DEMANDA';
            V_TIPO_SOLICITUD:=0;
        ELSIF P_TIPO_ORDEN = C_TIPO_ORDEN_ORO THEN
                --Ahorro ORO Soberano
                V_PARAMETRO_NOMBRE_SUBASTA:='UNDINV_NOMBRE_SUB_DEMANDA';
                V_PARAMETRO_NOMBRE_INSTRUMENTO:='UNDINV_INST_FINANC_DEMAND';
                V_PARAMETRO_MONEDA:='UNDINV_MONEDA_DEMANDA';
                V_PARAMETRO_EMISOR:='UNDINV_EMISOR_DEMANDA';
                V_TIPO_SOLICITUD:=0;
                C_TIPO_PRODUCTO := 'ORO';
                BEGIN
                    SELECT PGRUPO.PARGRP_ID
                    INTO     C_PARGRP_ID
                    FROM     INFI_TB_001_PARAM_GRUPO pgrupo
                    WHERE  pgrupo.pargrp_nombre ='ORO' ;
                    EXCEPTION
                        WHEN NO_DATA_FOUND THEN
                                  C_PARGRP_ID := 'DICOM';
                END;
        END IF;

        --VALIDAR QUE YA NO EXISTA UNA UNIDAD DE INVERSIÓN ASOCIADO AL NUMERO DE JORNADA
        SELECT UNDINV_ID
            INTO P_ID_UNIDAD_INVERSION
            FROM INFI_TB_106_UNIDAD_INVERSION U
            WHERE U.NRO_JORNADA=P_NRO_JORNADA
            AND U.TIPO_SOLICITUD=V_TIPO_SOLICITUD
            AND U.INSFIN_ID IN (
                SELECT I.INSFIN_ID
                FROM INFI_TB_101_INST_FINANCIEROS I
                WHERE I.TIPO_PRODUCTO_ID=C_TIPO_PRODUCTO);

        IF P_ID_UNIDAD_INVERSION>0 THEN
            V_ERROR_NUM:=1;
            P_MENSAJE:='CREAR_UNIDAD_INVERSION_DICOM. Validacion: Se retorna el id de la unidad de inversión creada previamente para la Jornada: '||P_NRO_JORNADA;
            RAISE LOGIC_VALIDATION_EXCEPTION;
        END IF;

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        BEGIN


            --INICIO DE LAS VALIDACIONES Y CONSULTAS
            --VALIDAR USUARIO QUE VA A EJECUTAR EL PROCESO
            V_CAMPO_VALIDAR:='Usuario/Rol';
            SELECT MSC_USER_ID,FULLNAME
                INTO V_USUARIO_ID,V_USUARIO_NOMBRE
                FROM MSC_USER U
                WHERE TRIM(U.USERID)=TRIM(P_USUARIO);

            SELECT A.ID_APPLICATION
                INTO V_APLICACION_ID
                FROM MSC_APPLICATIONS A
                WHERE A.SIGLAS_APPLIC='INFI';

            SELECT R.DESCRIPTION
                INTO V_USUARIO_ROL
                FROM MSC_ROLE R,MSC_ROLE_USER RU
                WHERE RU.MSC_USER_ID=V_USUARIO_ID
                AND RU.MSC_ROLE_ID=R.MSC_ROLE_ID
                AND R.ID_APPLICATION=V_APLICACION_ID;

            --OBTENER BLOTTER A ASOCIAR A LA UNIDAD DE INVERSION
             V_CAMPO_VALIDAR:='Blotter';
             SELECT BLOTER_ID
                 INTO V_BLOTTER_ID
                 FROM INFI_TB_102_BLOTER B
                 WHERE B.ID_CANAL=C_CANAL_DICOM;

            --CONSULTAR PARAMETROS DE CONFIGURACION
            --NOMBRE SUBASTA
            V_CAMPO_VALIDAR:='Nombre Subasta';
            SELECT PT.PARVAL_VALOR
                INTO V_NOMBRE_SUBASTA
                FROM INFI_TB_002_PARAM_TIPOS PT
                WHERE PARGRP_ID = C_PARGRP_ID AND PARTIP_NOMBRE_PARAMETRO = V_PARAMETRO_NOMBRE_SUBASTA;

            V_NOMBRE_SUBASTA:=V_NOMBRE_SUBASTA||' JORNADA:  '||P_NRO_JORNADA;
            V_DESCRIPCION_SUBASTA:=TO_CHAR(SYSDATE,'ddMMRRRR HH24:mm:ss')||'_'||P_TIPO_ORDEN;

            --INSTRUMENTO FINANCIERO
            V_CAMPO_VALIDAR:='Instrumento Financiero';
            SELECT PT.PARVAL_VALOR
                INTO V_INSTRUMENTO_FINANCIERO_CHAR
                FROM INFI_TB_002_PARAM_TIPOS PT
                WHERE PARGRP_ID = C_PARGRP_ID AND PARTIP_NOMBRE_PARAMETRO = V_PARAMETRO_NOMBRE_INSTRUMENTO;

            SELECT INSFIN_ID
                INTO V_INSTRUMENTO_FINANCIERO
                FROM INFI_TB_101_INST_FINANCIEROS I
                WHERE I.INSFIN_DESCRIPCION=V_INSTRUMENTO_FINANCIERO_CHAR AND I.TIPO_PRODUCTO_ID=C_TIPO_PRODUCTO;

            --MONEDA
            V_CAMPO_VALIDAR:='Moneda';
            SELECT PT.PARVAL_VALOR
                INTO V_MONEDA
                FROM INFI_TB_002_PARAM_TIPOS PT
                WHERE PARGRP_ID = C_PARGRP_ID AND PARTIP_NOMBRE_PARAMETRO = V_PARAMETRO_MONEDA;

            --EMISOR
            V_CAMPO_VALIDAR:='Emisor';
            SELECT PT.PARVAL_VALOR
                INTO V_EMISOR_RIF
                FROM INFI_TB_002_PARAM_TIPOS PT
                WHERE PARGRP_ID = C_PARGRP_ID AND PARTIP_NOMBRE_PARAMETRO = V_PARAMETRO_EMISOR;

            SELECT EMPRES_ID
                INTO V_EMPRESA_ID
                FROM INFI_TB_016_EMPRESAS E
                WHERE E.EMPRES_RIF=V_EMISOR_RIF;

         EXCEPTION
                 WHEN NO_DATA_FOUND THEN
                 BEGIN
                    V_ERROR_NUM:=2;
                    P_MENSAJE:='CREAR_UNIDAD_INVERSION_DICOM. Validacion: El campo '||V_CAMPO_VALIDAR||' ingresado no es valido o no existe ';
                    RAISE LOGIC_VALIDATION_EXCEPTION;
                 END;
            END;

        --CREAR REGISTRO EN INFI_TB_106_UNIDAD_INVERSION
            --INSERCION
           PK_INFI_CRUD.SP_CREAR_UNIDAD_INVERSION(
            P_ID_UNIDAD_INVERSION,             --        UNDINV_ID,
            V_NOMBRE_SUBASTA,           --        UNDINV_NOMBRE,
            V_DESCRIPCION_SUBASTA,           --        UNDINV_DESCRIPCION,
            V_INSTRUMENTO_FINANCIERO,   --        INSFIN_ID,
            P_NRO_JORNADA,           --        UNDINV_EMISION,
            P_NRO_JORNADA,              --        UNDINV_SERIE,
            0,                          --        UNDINV_TASA_CAMBIO,
            SYSDATE,                    --        UNDINV_FE_EMISION,
            1,                          --        UNDINV_IN_VTA_EMPLEADOS,
            ' ',                          --        TPPEVA_ID,
            0,                              --UNDINV_PRECIO_MINIMO,
            V_NOMBRE_SUBASTA||'. Unidad de Inversion creada por proceso automático',--        UNDINV_COMENTARIOS,
            NULL,                       --UNDINV_DOC_BDV
            NULL,                       --UNDINV_DOC_EMISOR
            SYSDATE,                    --        UNDINV_FE_ADJUDICACION,
            SYSDATE,                    --        UNDINV_FE_LIQUIDACION,
            SYSDATE,                    --        UNDINV_FE_CIERRE,
            0,                              --        UNDINV_IN_RECOMPRA_NETEO,
            V_MONEDA,               --        MONEDA_ID,
            0,                              --        UNDINV_UMI_INV_TOTAL,
            0,                              --      UNDINV_UMI_INV_MTO_MIN
            0,                              --      UNDINV_UMI_INV_MTO_MAX
            0,                              --      UNDINV_UMI_UM_CANT_MIN
            0,                              --      UNDINV_UMI_UM_CANT_MAX
            'PUBLICADA',              --        UNDINV_STATUS,
            P_USUARIO,              --        AUT_USUARIO_USERID,
            V_USUARIO_NOMBRE,  --        AUT_USUARIO_NOMBRE,
            V_USUARIO_ROL,         --        AUT_USUARIO_ROL_NOMBRE,
            P_IP,                           --P_AUT_ESTACION
            P_IP,                       --        AUT_IP,
            SYSDATE,                    --        AUT_FECHA,
            P_USUARIO,                  --        UPD_USUARIO_USERID,
            V_USUARIO_NOMBRE,           --        UPD_USUARIO_NOMBRE,
            V_USUARIO_ROL,              --        UPD_USUARIO_ROL_NOMBRE,
            P_IP,                       --        UPD_ESTACION,
            P_IP,                       --        UPD_IP,
            SYSDATE,                    --        UPD_FECHA,
            V_EMPRESA_ID,               --        EMPRES_ID,
            0,                          --        UNDINV_UMI_INV_DISPONIBLE,
            1,                          --        UNDINV_UMI_UNIDAD,
            0,                          --      UNDINV_PCT_MAX_FINAN
            100,                        --      UNDINV_PRECIO_MAXIMO
            1,                          --        UNDINV_MULTIPLOS,
            1,                          --        UNDINV_IN_PEDIDO_MONTO,
            0,                          --        UNDINV_TASA_POOL,
            0,                          --        UNDINV_RENDIMIENTO,
            'PRIMARIO',                 --        UNDINV_MERCADO,
            1,                          --        UNDINV_IN_PRECIO_SUCIO,
            SYSDATE,                    --        UNDINV_FE_LIQUIDACION_HORA1,
            SYSDATE,                    --        UNDINV_FE_LIQUIDACION_HORA2,
            0,                           --       PAGO_IN_BCV
            1,                          --        IN_COBRO_BATCH_ADJ,
            1,                          --        IN_COBRO_BATCH_LIQ,
            0,                          --        DIAS_APERTURA_CUENTA,
            0,                          --        INDC_PERMITE_CANCELACION,
            1,                          --        UNDINV_ACTIVE,
            0,                          --        MONTO_ACUMULADO_SOLIC,
            0,                          --        TIPO_NEGOCIO,
            P_NRO_JORNADA,  --        NRO_JORNADA
            0,                          --        UNDINV_PERIODO_VENTA,
            0,                          --        UNDINV_MULTIPLOS_EFECTIVO,
            0,                          --        UNDINV_UMAX_UNIDAD,
            0,                          --        UNDINV_TASA_CAMBIO_OFER,
            0,                          --        COMISION_IGTF)
            V_TIPO_SOLICITUD,  --        TIPO_SOLICITUD
            p_TIPO_PROCESO --        TIPO_PROCESO
        );

        --CREAR REGISTRO EN INFI_TB_108_UI_TITULOS
            --INSERCION
           PK_INFI_CRUD.SP_CREAR_UI_TITULOS (
                P_ID_UNIDAD_INVERSION,                   --        UNDINV_ID,
                'Jornada Nro: '||P_NRO_JORNADA,       --        TITULO_ID
                100,                                                   --        UITITU_PORCENTAJE,
                1,                                                      --        UITITU_VALOR_EQUIVALENTE,
                0,                                                      --        UITITU_IN_CONIDB,
                0                                                       --        UITITU_IN_CONTROL_DISPONIBLE,
            );

        --CREAR REGISTRO EN INFI_TB_109_UI_EMPRESAS
            --INSERCION
            PK_INFI_CRUD.SP_CREAR_UI_EMPRESA (
                P_ID_UNIDAD_INVERSION,             --        UNDINV_ID,
                V_EMPRESA_ID,                            --        EMPRES_ID
               '',                                                  --      ROLES_ID
               '',                                                  --      UIEMPR_CONTACTO_NOM
               ''                                                   --      UIEMPR_CONTACTO_TLF
            );

        --CREAR REGISTRO EN INFI_TB_107_UI_BLOTTER
            --INSERCION
            PK_INFI_CRUD.SP_CREAR_UI_BLOTTER (
                P_ID_UNIDAD_INVERSION,                  --UNDINV_ID,
                V_BLOTTER_ID,                                   --BLOTER_ID
                1,                                                      --UIBLOT_IN_DISPONIBLE
                TO_TIMESTAMP(SYSDATE,'DD/MM/YYYY HH12:MI:SS.FF AM') ,   --UIBLOT_HORARIO_DESDE
                TO_TIMESTAMP(SYSDATE,'DD/MM/YYYY HH12:MI:SS.FF AM') ,   --UIBLOT_HORARIO_HASTA
                SYSDATE,                                                --UIBLOT_PEDIDO_FE_INI
                SYSDATE,                                                --UIBLOT_PEDIDO_FE_FIN
                '',                                                         --  P_UIBLOT_SERIAL_COMISIONES
                '',                                                         -- P_UIBLOT_SERIAL_CAPITAL
                '',                                                         --P_TPPEVA_ID
                '',                                                         --P_CTESEG_ID
                1,                                                      --UIBLOT_IN_DEFECTO
                0,                                                      --UIBLOT_IN_TESORERIA
                SYSDATE,                                                --UIBLOT_HORARIO_DESDE_ULT_DIA
                SYSDATE,                                                --UIBLOT_HORARIO_HASTA_ULT_DIA
                0,                                                      --UIBLOT_GANANCIA_RED
                0                                                       --UIBLOT_IN_RECOMPRA
            );

            COMMIT;

        P_MENSAJE:='OK';
        V_ERROR_NUM:=0;

        END;

    EXCEPTION
        WHEN LOGIC_VALIDATION_EXCEPTION THEN
        BEGIN
            IF V_ERROR_NUM<>1 THEN
            raise_application_error(-20001,'Datos no validos: CREAR_UNIDAD_INVERSION_AUTO: '||P_MENSAJE);
            ROLLBACK;
            END IF;
        END;
        WHEN OTHERS THEN
        BEGIN
            ROLLBACK;
            P_MENSAJE:='Error Inesperado: CREAR_UNIDAD_INVERSION_AUTO '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;
            raise_application_error(-20001,'Error en el proceso CREAR_UNIDAD_INVERSION_AUTO: '||P_MENSAJE);
        END;

END CREAR_UNIDAD_INVERSION_DICOM;
        FUNCTION GET_VEHICULO (
    P_RIF VARCHAR2
)
RETURN infi_tb_018_vehiculos.vehicu_id%TYPE IS
VEHICULO infi_tb_018_vehiculos.vehicu_id%TYPE;
/******************************************************************************
   NAME:       GET_SEQUENCE
   PURPOSE:    Funcion creada para obtener la secuencia (id) de tabla a insertar
                Se realiza de esta manera para no cambiar el esquema de manejo de
                secuencias usado en la aplicación

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        18/05/2017          1. Created this function.

   NOTES:

   Automatically available Auto Replace Keywords:
      Object Name:     GET_SEQUENCE
      Sysdate:         18/05/2017
      Date and Time:   18/05/2017, 04:10:45 p.m., and 18/05/2017 04:10:45 p.m.
      Username:         NM25287
      Table Name:       SEQUENCE_NUMBERS

******************************************************************************/
    BEGIN

        SELECT a.vehicu_id INTO VEHICULO
          FROM infi_tb_018_vehiculos a
         WHERE a.vehicu_rif =(SELECT a.parval_valor
                     FROM infi_tb_002_param_tipos a, infi_tb_001_param_grupo b
                    WHERE a.pargrp_id = b.pargrp_id
                      AND a.partip_nombre_parametro =  P_RIF);
    RETURN VEHICULO;
    END;


    END;
/


CREATE OR REPLACE PACKAGE BODY ADM_INFI.PK_INFI_LOGIC_DICOM_F2
IS

PROCEDURE SP_PROCESAR_SOLICITUD_DICOM (p_undinv_id            IN INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%TYPE,
                                     p_NRO_SOLICITUD        IN SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
                                     p_TIPO_CLIENTE         IN SOLICITUDES_DICOM.TIPO_CLIENTE%TYPE,
                                     p_CED_RIF              IN SOLICITUDES_DICOM.CED_RIF%TYPE,
                                     p_NOMBRE_CLIENTE       IN SOLICITUDES_DICOM.NOMBRE_CLIENTE%TYPE,
                                     p_TELEFONO_CLIENTE     IN SOLICITUDES_DICOM.TELEFONO_CLIENTE%TYPE,
                                     p_CORREO_CLIENTE       IN SOLICITUDES_DICOM.CORREO_CLIENTE%TYPE,
                                     p_NRO_CTA_NACIONAL     IN SOLICITUDES_DICOM.NRO_CTA_NACIONAL%TYPE,
                                     p_NRO_RET_CAPITAL      IN SOLICITUDES_DICOM.NRO_RET_CAPITAL%TYPE,
                                     p_HORA_BLOQ            IN SOLICITUDES_DICOM.HORA_BLOQ%TYPE,
                                     p_MONTO_OP_NACIONAL    IN SOLICITUDES_DICOM.MONTO_OP_NACIONAL%TYPE,
                                     p_DIVISA_NACIONAL      IN SOLICITUDES_DICOM.DIVISA_NACIONAL%TYPE,
                                     p_NRO_RET_COMISION     IN SOLICITUDES_DICOM.NRO_RET_COMISION%TYPE,
                                     p_MONTO_COMISION       IN SOLICITUDES_DICOM.MONTO_COMISION%TYPE,
                                     p_PORC_COMISION        IN SOLICITUDES_DICOM.PORC_COMISION%TYPE,
                                     p_FECHA_OPERACION      IN SOLICITUDES_DICOM.FECHA_OPERACION%TYPE,
                                     p_NRO_CTA_EXTRANJERA   IN SOLICITUDES_DICOM.NRO_CTA_EXTRANJERA%TYPE,
                                     p_MONTO_OP_EXTRANJERA  IN SOLICITUDES_DICOM.MONTO_OP_EXTRANJERA%TYPE,
                                     p_DIVISA_EXTRANJERA    IN SOLICITUDES_DICOM.DIVISA_EXTRANJERA%TYPE,
                                     p_TASA_CAMBIO          IN SOLICITUDES_DICOM.TASA_CAMBIO%TYPE,
                                     p_FECHA_VALOR_OPERACION IN SOLICITUDES_DICOM.FECHA_VALOR_OPERACION%TYPE,
                                     p_CODIGO_RESPUESTA     IN SOLICITUDES_DICOM.CODIGO_RESPUESTA%TYPE,
                                     p_TIPO_OPERACION       IN SOLICITUDES_DICOM.TIPO_OPERACION%TYPE,
                                     p_PORC_COMISION_IGTF   IN INFI_TB_204_ORDENES.ORDENE_PED_PORC_COMISION_IGTF%TYPE,
                                     p_COMISION_IGTF        IN INFI_TB_204_ORDENES.ORDENE_PED_COMISION_IGTF%TYPE,
                                     p_MONTO_TOTAL_RET      IN INFI_TB_207_ORDENES_OPERACION.MONTO_OPERACION%TYPE) AS 
                                            
        
         
         v_client_id  INFI_TB_201_CTES.CLIENT_ID%TYPE;
         --v_ordene_id  INFI_TB_204_ORDENES.ORDENE_ID%TYPE;
         v_ordene_id  NUMBER;
         
         v_correo_electronico_cliente  INFI_TB_201_CTES.CLIENT_CORREO_ELECTRONICO%TYPE;       
         v_flag NUMBER;
         
         
         
         
         
         v_ord_monto_solicitado INFI_TB_204_ORDENES.ORDENE_PED_MONTO%TYPE;
         v_ord_cuenta_origen INFI_TB_204_ORDENES.CTECTA_NUMERO%TYPE;--Cuenta desde la cual saldran los fondos en Bolivares (Caso Demanda) o Moneda Extranjera (Caso Oferta) 
         v_ord_cuenta_destino INFI_TB_204_ORDENES.CTECTA_NUMERO%TYPE;--Cuenta desde la cual saldran los fondos en Bolivares (Caso Demanda) o Moneda Extranjera (Caso Oferta)
         v_ord_moneda_origen INFI_TB_204_ORDENES.MONEDA_ID%TYPE;--Tipo de moneda Origen de la Operacon, Bolivares (Caso Demanda) o Moneda Extranjera (Caso Oferta)
         v_ord_moneda_destino INFI_TB_204_ORDENES.MONEDA_ID%TYPE;--Tipo de moneda Origen de la Operacon, Bolivares (Caso Demanda) o Moneda Extranjera (Caso Oferta)
         v_ord_monto_adjudicacion INFI_TB_204_ORDENES.ORDENE_ADJ_MONTO%TYPE;--Monto de Adjudicacion dependiendo de la solicitud, Moneda Extranjera (Caso Demanda) o Bolivares (Caso Oferta) 

         v_ord_ped_total INFI_TB_204_ORDENES.ORDENE_PED_TOTAL%TYPE;
         
         
         v_op_monto_capital INFI_TB_207_ORDENES_OPERACION.MONTO_OPERACION%TYPE;         
         v_op_moneda INFI_TB_207_ORDENES_OPERACION.MONEDA_ID%TYPE;
         v_op_monto_des_capital INFI_TB_207_ORDENES_OPERACION.MONTO_OPERACION%TYPE;
         v_op_monto_des_comision INFI_TB_207_ORDENES_OPERACION.MONTO_OPERACION%TYPE;
         
         v_cod_abono INFI_TB_207_ORDENES_OPERACION.CODIGO_OPERACION%TYPE;
         
         
         
            
          
          
          v_secuencia_ordenes SEQUENCE_NUMBERS.NEXT_ID%type;
          v_secuencia_operacion SEQUENCE_NUMBERS.NEXT_ID%type;
          
          v_cta_abono INFI_TB_204_ORDENES.CTA_ABONO%type;
    
          v_rif_sin_dig INFI_TB_201_CTES.CLIENT_CEDRIF%TYPE;                              
          
                  
    BEGIN  
                
        
        v_rif_sin_dig:=SUBSTR(p_CED_RIF,0,LENGTH(p_CED_RIF)-1);
        
         
        BEGIN
        
        SELECT CLIENT_ID,CLIENT_CORREO_ELECTRONICO INTO v_client_id,v_correo_electronico_cliente FROM INFI_TB_201_CTES CTES WHERE CTES.TIPPER_ID=p_TIPO_CLIENTE AND CTES.CLIENT_CEDRIF=v_rif_sin_dig;                        
        IF v_correo_electronico_cliente=NULL OR v_correo_electronico_cliente<> p_CORREO_CLIENTE THEN        
            UPDATE INFI_TB_201_CTES CTES SET CTES.CLIENT_CORREO_ELECTRONICO=p_CORREO_CLIENTE WHERE CTES.CLIENT_ID=v_client_id;        
        END IF;  
                    
        --Insercion de Ordenes                     
        EXCEPTION 
        WHEN NO_DATA_FOUND THEN
        BEGIN
            
            PK_INFI_CRUD.SP_CREAR_CLIENTE(p_TIPO_CLIENTE,
                                                v_rif_sin_dig,
                                                p_NOMBRE_CLIENTE,
                                                p_TELEFONO_CLIENTE,
                                                p_CORREO_CLIENTE,
                                                C_CODIGO_SEGMENTO,
                                                C_NUMERO_PERSONA,
                                                v_client_id);
        END;  
        END;      
                
        IF v_tipo_solicitud=C_TIPO_SOLICITUD_DEMANDA THEN --Tipo de solicitud DEMANDA  
        --CAMPOS ASOCIADOS A ORDEN 
        v_ord_monto_solicitado:=p_MONTO_OP_EXTRANJERA; --Por ser una solicitud DEMANDA monto solicitado va en Moneda Extranjera        
        v_ord_cuenta_origen:=p_NRO_CTA_NACIONAL;
        v_ord_cuenta_destino:=p_NRO_CTA_EXTRANJERA;
        v_ord_moneda_origen:=p_DIVISA_NACIONAL;
        v_ord_moneda_destino:=p_DIVISA_EXTRANJERA;
        v_ord_monto_adjudicacion:=p_MONTO_OP_EXTRANJERA;
        
        v_ord_ped_total:=p_MONTO_OP_NACIONAL+p_MONTO_COMISION;
        --CAMPOS ASOCIADOS A OPERACION        
        v_op_monto_capital:=p_MONTO_OP_NACIONAL; --Por ser una solicitud DEMANDA monto solicitado va en Moneda Extranjera
        v_cta_abono:=1;
        v_cod_abono:=v_cod_op_cre_conv_20;
        v_op_monto_des_capital:=p_MONTO_OP_NACIONAL+p_MONTO_COMISION;        
        ELSIF v_tipo_solicitud=C_TIPO_SOLICITUD_OFERTA THEN --Tipo de solicitud OFERTA 
        --CAMPOS ASOCIADOS A ORDEN 
        v_ord_monto_solicitado:=p_MONTO_OP_NACIONAL;--Por ser una solicitud OFERTA monto solicitado va en Moneda Nacional
        --v_monto_bloqueado:=p_MONTO_OP_EXTRANJERA;
        v_ord_cuenta_origen:=p_NRO_CTA_EXTRANJERA;
        v_ord_cuenta_destino:=p_NRO_CTA_NACIONAL;
        v_ord_moneda_origen:=p_DIVISA_EXTRANJERA;
        v_ord_moneda_destino:=p_DIVISA_NACIONAL;
        v_ord_monto_adjudicacion:=p_MONTO_OP_NACIONAL;
        v_ord_ped_total:=p_MONTO_OP_EXTRANJERA;
        --CAMPOS ASOCIADOS A OPERACION  
        v_op_monto_capital:=p_MONTO_OP_EXTRANJERA;
        v_op_monto_des_capital:=v_op_monto_capital;
        v_cta_abono:=2;
        v_cod_abono:=v_cod_op_cre_cap;
        v_op_monto_des_comision:=p_COMISION_IGTF+p_MONTO_COMISION;
        END IF;
        
        
        
        --CREACION DE ORDEN TOMA ORDEN 
        PK_INFI_CRUD_F2.SP_CREAR_ORDEN(p_undinv_id,
                                    v_client_id,
                                    C_ORDSTA_ENVIADA,
                                    '0',--SISTEMA_ID 
                                    v_empres_id, --EMPRES_ID, --BUSCAR DESDE LA UNIDAD DE INVERSION 
                                    NULL,--CONTRAPARTE,
                                    C_TRANS_TOMA_ORDEN,--TRANSA_ID,
                                    0,--ENVIADO,
                                    NULL,--ORDENE_CTE_SEG_BCO,
                                    NULL,--ORDENE_CTE_SEG_SEG, 
                                    NULL,--ORDENE_CTE_SEG_SUB,
                                    NULL,--ORDENE_CTE_SEG_INFI,
                                    p_FECHA_OPERACION,--ORDENE_PED_FE_ORDEN,
                                    p_FECHA_VALOR_OPERACION,--ORDENE_PED_FE_VALOR, 
                                    v_ord_monto_solicitado,--ORDENE_PED_MONTO,                                                 
                                    0,--ORDENE_PED_TOTAL_PEND,
                                    v_ord_ped_total,--MONTO CAPITAL + MONTO COMISION --En caso de Oferta se coloca el monto el Dolares   
                                    0,--ORDENE_PED_INT_CAIDOS                                             
                                    v_bloter_id,--BLOTER_ID, 
                                    NULL,--ORDENE_PED_CTA_BSNRO,
                                    NULL,--ORDENE_PED_CTA_BSTIP,
                                    v_ord_cuenta_origen,--CTECTA_NUMERO,
                                    100,--ORDENE_PED_PRECIO, 
                                    0,--ORDENE_PED_RENDIMIENTO,
                                    0,--ORDENE_PED_IN_BDV,
                                    v_ord_moneda_origen,--MONEDA_ID,
                                    0,--ORDENE_PED_RCP_PRECIO,
                                    v_ord_monto_adjudicacion,--ORDENE_ADJ_MONTO, 
                                    v_username,--ORDENE_USR_NOMBRE,
                                    NULL,--ORDENE_USR_CEN_CONTABLE,
                                    NULL,--ORDENE_USR_SUCURSAL,
                                    NULL,--ORDENE_USR_TERMINAL,                                     
                                    v_bdv_vehiculo_id,--ORDENE_VEH_TOM   
                                    v_bdv_vehiculo_id,--ORDENE_VEH_COL 
                                    v_bdv_vehiculo_id,--ORDENE_VEH_REC 
                                    v_ejecucion_id,--ORDENE_EJEC_ID,
                                    NULL,--ORDENE_FE_ULT_ACT,
                                    p_MONTO_COMISION,--ORDENE_PED_COMISIONES,
                                    0,--ORDENE_FINANCIADO,
                                    v_ejecucion_id,--EJECUCION_ID
                                    p_TASA_CAMBIO,--ORDENE_TASA_POOL,
                                    0,--ORDENE_GANANCIA_RED, 
                                    0,--ORDENE_COMISION_OFICINA, 
                                    p_PORC_COMISION,--ORDENE_COMISION_OPERACION, 
                                    0,--ORDENE_OPERAC_PEND, 
                                    NULL,--ORDENE_ID_RELACION, 
                                    p_TASA_CAMBIO,--ORDENE_TASA_CAMBIO,
                                    NULL,--CONCEPTO_ID, VERIFICAR QUE INFORMACION SE COLOCARA PUNTO_REV
                                    NULL,--ORDENE_OBSERVACION,
                                    C_TIPO_PRODUCTO,--TIPO_PRODUCTO_ID, VERIFICAR EL PRODUCTO QUE SE UTILIZARA EN DICOM PUNTO_REV
                                    v_cta_abono,--CTA_ABONO VERIFICAR VALOR A COLOCAR
                                    p_PORC_COMISION_IGTF,-- Porcentaje de Comision IGTF   
                                    p_COMISION_IGTF,     -- Monto de la Comision IGTF   
                                    v_id_toma_orden 
                                     );
                                     
                                     
                                     
                               --CREACION DE OPERACION DESBLOQUEO CAPITAL                                      
                               PK_INFI_CRUD.SP_CREAR_OPERACION(v_id_toma_orden,--ORDENE_ID                                                                 
                                                                C_TRNFINID_TOMA_ORDEN_CAP,--TRNFIN_ID, REVISAR DE DONDE PROVIENE EL CAMPO 
                                                                C_ESTATUS_OPER_EN_ESPERA,--STATUS_OPERACION, 
                                                                0,--APLICA_REVERSO,
                                                                p_MONTO_TOTAL_RET,--v_op_monto_capital,--MONTO_OPERACION,
                                                                100,--TASA,
                                                                SYSDATE,--FECHA_APLICAR,
                                                                NULL,--FECHA_PROCESADA, 
                                                                NULL,--ORDENE_OPERACION_ERROR,
                                                                NULL,--SERIAL,
                                                                0,--IN_COMISION,
                                                                v_ord_moneda_origen,--MONEDA_ID,                     
                                                                v_ord_cuenta_origen,--CTECTA_NUMERO, 
                                                                NULL,--OPERACION_NOMBRE, 
                                                                NULL,--CTECTA_NOMBRE,
                                                                NULL,--CTECTA_BCOCTA_BCO,
                                                                NULL,--CTECTA_BCOCTA_DIRECCION,
                                                                NULL,--CTECTA_BCOCTA_SWIFT, 
                                                                NULL,--CTECTA_BCOCTA_BIC,
                                                                NULL,--CTECTA_BCOCTA_TELEFONO,
                                                                NULL,--CTECTA_BCOCTA_ABA,
                                                                NULL,--CTECTA_BCOCTA_PAIS,
                                                                NULL,--CTECTA_BCOINT_BCO, 
                                                                NULL,--CTECTA_BCOINT_DIRECCION,
                                                                NULL,--CTECTA_BCOINT_SWIFT,
                                                                NULL,--CTECTA_BCOINT_BIC,
                                                                NULL,--CTECTA_BCOINT_TELEFONO,
                                                                NULL,--CTECTA_BCOINT_ABA,    
                                                                NULL,--CTECTA_BCOINT_PAIS,
                                                                C_TIP_TRANS_OPER_DESBLOQUEO,--TRNF_TIPO,
                                                                NULL,--TITULO_ID, REVISAR 
                                                                v_cod_op_blo_cap,--CODIGO_OPERACION, REALIZAR LA BUSQUEDA DE LOS CODIGOS DE OPERACION 
                                                                p_NRO_RET_CAPITAL,--NUMERO_RETENCION,
                                                                NULL,--ORDENE_RELAC_OPERACION_ID,
                                                                NULL,--FECHA_INICIO_CP,
                                                                NULL,--FECHA_FIN_CP,
                                                                0--IN_COMISION_INVARIABLE
                                                                );
                                                                         
                                IF v_tipo_solicitud=C_TIPO_SOLICITUD_OFERTA AND (p_MONTO_COMISION IS NOT NULL AND p_MONTO_COMISION<>0) THEN--Operacion de Desbloqueo Comision solo aplica a Oferta (En el caso de la Demanda todo el monto se bloquea en una sola transaccion de Capital)  
                                --CREACION DE OPERACION DESBLOQUEO COMISION  
                                PK_INFI_CRUD.SP_CREAR_OPERACION(v_id_toma_orden,--ORDENE_ID                                                                
                                                                C_TRNFINID_TOMA_ORDEN_COM,--TRNFIN_ID, REVISAR DE DONDE PROVIENE EL CAMPO 
                                                                C_ESTATUS_OPER_EN_ESPERA,--STATUS_OPERACION, 
                                                                0,--APLICA_REVERSO,
                                                                v_op_monto_des_comision,--MONTO_OPERACION,
                                                                p_PORC_COMISION,--TASA,
                                                                SYSDATE,--FECHA_APLICAR,
                                                                NULL,--FECHA_PROCESADA, 
                                                                NULL,--ORDENE_OPERACION_ERROR,
                                                                NULL,--SERIAL,
                                                                1,--IN_COMISION,
                                                                p_DIVISA_NACIONAL,--MONEDA_ID,                     
                                                                v_ord_cuenta_origen,--CTECTA_NUMERO, 
                                                                NULL,--OPERACION_NOMBRE, 
                                                                NULL,--CTECTA_NOMBRE,
                                                                NULL,--CTECTA_BCOCTA_BCO,
                                                                NULL,--CTECTA_BCOCTA_DIRECCION,
                                                                NULL,--CTECTA_BCOCTA_SWIFT, 
                                                                NULL,--CTECTA_BCOCTA_BIC,
                                                                NULL,--CTECTA_BCOCTA_TELEFONO,
                                                                NULL,--CTECTA_BCOCTA_ABA,
                                                                NULL,--CTECTA_BCOCTA_PAIS,
                                                                NULL,--CTECTA_BCOINT_BCO, 
                                                                NULL,--CTECTA_BCOINT_DIRECCION,
                                                                NULL,--CTECTA_BCOINT_SWIFT,
                                                                NULL,--CTECTA_BCOINT_BIC,
                                                                NULL,--CTECTA_BCOINT_TELEFONO,
                                                                NULL,--CTECTA_BCOINT_ABA,    
                                                                NULL,--CTECTA_BCOINT_PAIS,
                                                                C_TIP_TRANS_OPER_DESBLOQUEO,--TRNF_TIPO,
                                                                NULL,--TITULO_ID, REVISAR 
                                                                v_cod_op_blo_com,--CODIGO_OPERACION, REALIZAR LA BUSQUEDA DE LOS CODIGOS DE OPERACION 
                                                                p_NRO_RET_COMISION,--NUMERO_RETENCION,
                                                                NULL,--ORDENE_RELAC_OPERACION_ID,
                                                                NULL,--FECHA_INICIO_CP,
                                                                NULL,--FECHA_FIN_CP,
                                                                0--IN_COMISION_INVARIABLE
                                                                );  
                                END IF;      
                                                   
                        --CREACION DE OPERACION DE DEBITO CAPITAL  
                        PK_INFI_CRUD.SP_CREAR_OPERACION(v_id_toma_orden,--ORDENE_ID                                                         
                                                        C_TRNFINID_TOMA_ORDEN_CAP,--TRNFIN_ID, REVISAR DE DONDE PROVIENE EL CAMPO 
                                                        C_ESTATUS_OPER_EN_ESPERA,--STATUS_OPERACION, 
                                                        0,--APLICA_REVERSO,
                                                        v_op_monto_capital,--MONTO_OPERACION,
                                                        100,--TASA,
                                                        SYSDATE,--FECHA_APLICAR,
                                                        NULL,--FECHA_PROCESADA, 
                                                        NULL,--ORDENE_OPERACION_ERROR,
                                                        NULL,--SERIAL,
                                                        0,--IN_COMISION,
                                                        v_ord_moneda_origen,--MONEDA_ID,                     
                                                        v_ord_cuenta_origen,--CTECTA_NUMERO, 
                                                        NULL,--OPERACION_NOMBRE, 
                                                        NULL,--CTECTA_NOMBRE,
                                                        NULL,--CTECTA_BCOCTA_BCO,
                                                        NULL,--CTECTA_BCOCTA_DIRECCION,
                                                        NULL,--CTECTA_BCOCTA_SWIFT, 
                                                        NULL,--CTECTA_BCOCTA_BIC,
                                                        NULL,--CTECTA_BCOCTA_TELEFONO,
                                                        NULL,--CTECTA_BCOCTA_ABA,
                                                        NULL,--CTECTA_BCOCTA_PAIS,
                                                        NULL,--CTECTA_BCOINT_BCO, 
                                                        NULL,--CTECTA_BCOINT_DIRECCION,
                                                        NULL,--CTECTA_BCOINT_SWIFT,
                                                        NULL,--CTECTA_BCOINT_BIC,
                                                        NULL,--CTECTA_BCOINT_TELEFONO,
                                                        NULL,--CTECTA_BCOINT_ABA,    
                                                        NULL,--CTECTA_BCOINT_PAIS,
                                                        C_TIP_TRANS_OPER_DEBITO,--TRNF_TIPO,
                                                        NULL,--TITULO_ID, REVISAR 
                                                        v_cod_op_deb_cap,--CODIGO_OPERACION, REALIZAR LA BUSQUEDA DE LOS CODIGOS DE OPERACION 
                                                        NULL,--NUMERO_RETENCION,
                                                        NULL,--ORDENE_RELAC_OPERACION_ID,
                                                        NULL,--FECHA_INICIO_CP,
                                                        NULL,--FECHA_FIN_CP,
                                                        0--IN_COMISION_INVARIABLE
                                                        );
                                                       
                        IF p_MONTO_COMISION IS NOT NULL AND p_MONTO_COMISION<>0 THEN 
                        --CREACION DE OPERACION DE DEBITO COMISION 
                        PK_INFI_CRUD.SP_CREAR_OPERACION(v_id_toma_orden,--ORDENE_ID                                                                
                                                                C_TRNFINID_TOMA_ORDEN_COM,--TRNFIN_ID, REVISAR DE DONDE PROVIENE EL CAMPO 
                                                                C_ESTATUS_OPER_EN_ESPERA,--STATUS_OPERACION, 
                                                                0,--APLICA_REVERSO,
                                                                p_MONTO_COMISION,--MONTO_OPERACION,
                                                                p_PORC_COMISION,--TASA,
                                                                SYSDATE,--FECHA_APLICAR,
                                                                NULL,--FECHA_PROCESADA, 
                                                                NULL,--ORDENE_OPERACION_ERROR,
                                                                NULL,--SERIAL,
                                                                1,--IN_COMISION,
                                                                p_DIVISA_NACIONAL,--MONEDA_ID,                     
                                                                v_ord_cuenta_origen,--CTECTA_NUMERO, 
                                                                NULL,--OPERACION_NOMBRE, 
                                                                NULL,--CTECTA_NOMBRE,
                                                                NULL,--CTECTA_BCOCTA_BCO,
                                                                NULL,--CTECTA_BCOCTA_DIRECCION,
                                                                NULL,--CTECTA_BCOCTA_SWIFT, 
                                                                NULL,--CTECTA_BCOCTA_BIC,
                                                                NULL,--CTECTA_BCOCTA_TELEFONO,
                                                                NULL,--CTECTA_BCOCTA_ABA,
                                                                NULL,--CTECTA_BCOCTA_PAIS,
                                                                NULL,--CTECTA_BCOINT_BCO, 
                                                                NULL,--CTECTA_BCOINT_DIRECCION,
                                                                NULL,--CTECTA_BCOINT_SWIFT,
                                                                NULL,--CTECTA_BCOINT_BIC,
                                                                NULL,--CTECTA_BCOINT_TELEFONO,
                                                                NULL,--CTECTA_BCOINT_ABA,    
                                                                NULL,--CTECTA_BCOINT_PAIS,
                                                                C_TIP_TRANS_OPER_DEBITO,--TRNF_TIPO,
                                                                NULL,--TITULO_ID, REVISAR 
                                                                v_cod_op_deb_com,--CODIGO_OPERACION, REALIZAR LA BUSQUEDA DE LOS CODIGOS DE OPERACION 
                                                                NULL,--NUMERO_RETENCION,
                                                                NULL,--ORDENE_RELAC_OPERACION_ID,
                                                                NULL,--FECHA_INICIO_CP,
                                                                NULL,--FECHA_FIN_CP,
                                                                0--IN_COMISION_INVARIABLE
                                                        );
                        END IF;                                

            --CREACION DE ORDEN_PAGO  
            PK_INFI_CRUD.SP_CREAR_ORDEN(p_undinv_id,
                                        v_client_id,
                                        C_ORDSTA_REGISTRADA,
                                        '0',--SISTEMA_ID 
                                        v_empres_id, --EMPRES_ID, --BUSCAR DESDE LA UNIDAD DE INVERSION 
                                        NULL,--CONTRAPARTE,
                                        C_TRANS_ORDEN_PAGO,--TRANSA_ID,
                                        0,--ENVIADO,
                                        NULL,--ORDENE_CTE_SEG_BCO,
                                        NULL,--ORDENE_CTE_SEG_SEG, 
                                        NULL,--ORDENE_CTE_SEG_SUB,
                                        NULL,--ORDENE_CTE_SEG_INFI,
                                        p_FECHA_OPERACION,--ORDENE_PED_FE_ORDEN,
                                        p_FECHA_VALOR_OPERACION,--ORDENE_PED_FE_VALOR, 
                                        v_ord_monto_solicitado,--ORDENE_PED_MONTO,                                                 
                                        0,--ORDENE_PED_TOTAL_PEND,
                                        v_ord_monto_adjudicacion,--MONTO CAPITAL + MONTO COMISION --VERIFICAR QUE SE DEBE COLOCAR EN LOS CASOS DE OFERTA PUNTO_REV  
                                        0,--ORDENE_PED_INT_CAIDOS                                             
                                        v_bloter_id,--BLOTER_ID, 
                                        NULL,--ORDENE_PED_CTA_BSNRO,
                                        NULL,--ORDENE_PED_CTA_BSTIP,
                                        v_ord_cuenta_origen,--CTECTA_NUMERO,
                                        100,--ORDENE_PED_PRECIO, 
                                        0,--ORDENE_PED_RENDIMIENTO,
                                        0,--ORDENE_PED_IN_BDV,
                                        v_ord_moneda_destino,--MONEDA_ID,
                                        0,--ORDENE_PED_RCP_PRECIO,
                                        v_ord_monto_adjudicacion,--ORDENE_ADJ_MONTO, 
                                        v_username,--ORDENE_USR_NOMBRE,
                                        NULL,--ORDENE_USR_CEN_CONTABLE,
                                        NULL,--ORDENE_USR_SUCURSAL,
                                        NULL,--ORDENE_USR_TERMINAL,                                     
                                        v_bdv_vehiculo_id,--ORDENE_VEH_TOM   
                                        v_bdv_vehiculo_id,--ORDENE_VEH_COL 
                                        v_bdv_vehiculo_id,--ORDENE_VEH_REC 
                                        v_ejecucion_id,--ORDENE_EJEC_ID,
                                        NULL,--ORDENE_FE_ULT_ACT,
                                        p_MONTO_COMISION,--ORDENE_PED_COMISIONES,
                                        0,--ORDENE_FINANCIADO,
                                        v_ejecucion_id,--EJECUCION_ID
                                        p_TASA_CAMBIO,--ORDENE_TASA_POOL,
                                        0,--ORDENE_GANANCIA_RED, 
                                        0,--ORDENE_COMISION_OFICINA, 
                                        p_PORC_COMISION,--ORDENE_COMISION_OPERACION, 
                                        0,--ORDENE_OPERAC_PEND, 
                                        v_id_toma_orden,--ORDENE_ID_RELACION, 
                                        p_TASA_CAMBIO,--ORDENE_TASA_CAMBIO,
                                        NULL,--CONCEPTO_ID, VERIFICAR QUE INFORMACION SE COLOCARA PUNTO_REV
                                        NULL,--ORDENE_OBSERVACION,
                                        C_TIPO_PRODUCTO,--TIPO_PRODUCTO_ID, VERIFICAR EL PRODUCTO QUE SE UTILIZARA EN DICOM PUNTO_REV
                                        v_cta_abono,--CTA_ABONO VERIFICAR VALOR A COLOCAR
                                        v_id_orden_pago 
                                         );
                                     
                        --CREACION DE OPERACION DE ABONO 
                        PK_INFI_CRUD.SP_CREAR_OPERACION(v_id_orden_pago,--ORDENE_ID                                                                
                                                                C_TRNFINID_TOMA_ORDEN_CAP,--TRNFIN_ID, REVISAR DE DONDE PROVIENE EL CAMPO 
                                                                C_ESTATUS_OPER_EN_ESPERA,--STATUS_OPERACION, 
                                                                0,--APLICA_REVERSO,
                                                                v_ord_monto_adjudicacion,--MONTO_OPERACION,
                                                                0,--TASA,
                                                                SYSDATE,--FECHA_APLICAR,
                                                                p_FECHA_VALOR_OPERACION,--FECHA_PROCESADA, 
                                                                NULL,--ORDENE_OPERACION_ERROR,
                                                                NULL,--SERIAL,
                                                                1,--IN_COMISION,
                                                                v_ord_moneda_destino,--MONEDA_ID,                     
                                                                v_ord_cuenta_destino,--CTECTA_NUMERO, 
                                                                NULL,--OPERACION_NOMBRE, 
                                                                NULL,--CTECTA_NOMBRE,
                                                                NULL,--CTECTA_BCOCTA_BCO,
                                                                NULL,--CTECTA_BCOCTA_DIRECCION,
                                                                NULL,--CTECTA_BCOCTA_SWIFT, 
                                                                NULL,--CTECTA_BCOCTA_BIC,
                                                                NULL,--CTECTA_BCOCTA_TELEFONO,
                                                                NULL,--CTECTA_BCOCTA_ABA,
                                                                NULL,--CTECTA_BCOCTA_PAIS,
                                                                NULL,--CTECTA_BCOINT_BCO, 
                                                                NULL,--CTECTA_BCOINT_DIRECCION,
                                                                NULL,--CTECTA_BCOINT_SWIFT,
                                                                NULL,--CTECTA_BCOINT_BIC,
                                                                NULL,--CTECTA_BCOINT_TELEFONO,
                                                                NULL,--CTECTA_BCOINT_ABA,    
                                                                NULL,--CTECTA_BCOINT_PAIS,
                                                                C_TIP_TRANS_OPER_CREDITO,--TRNF_TIPO,
                                                                NULL,--TITULO_ID, REVISAR 
                                                                v_cod_abono,--CODIGO_OPERACION, REALIZAR LA BUSQUEDA DE LOS CODIGOS DE OPERACION 
                                                                NULL,--NUMERO_RETENCION,
                                                                NULL,--ORDENE_RELAC_OPERACION_ID,
                                                                NULL,--FECHA_INICIO_CP,
                                                                NULL,--FECHA_FIN_CP,
                                                                0--IN_COMISION_INVARIABLE
                                                        );
                                                        
        EXCEPTION          
          WHEN PK_INFI_CRUD.CRUD_VALIDATION_EXCEPTION THEN
          BEGIN
          
          LOGIC_MSJ_EXCEPTION:='Error CRUD de Validacion : SP_SOLICITUD_DICOM '|| PK_INFI_CRUD.CRUD_MSJ_EXCEPTION;
          RAISE PK_INFI_CRUD.CRUD_VALIDATION_EXCEPTION;
          END;         
          WHEN PK_INFI_CRUD.CRUD_UNEXPECTED_EXCEPTION THEN                        
          BEGIN
          ROLLBACK;  
          LOGIC_MSJ_EXCEPTION:='Error CRUD Inesperado :  SP_SOLICITUD_DICOM '|| PK_INFI_CRUD.CRUD_MSJ_EXCEPTION;
          RAISE PK_INFI_CRUD.CRUD_UNEXPECTED_EXCEPTION;
          END;
          
          WHEN LOGIC_VALIDATION_EXCEPTION THEN          
          BEGIN
          LOGIC_MSJ_EXCEPTION:='Error LOGIC de Validacion: SP_SOLICITUD_DICOM '|| LOGIC_MSJ_EXCEPTION;
            RAISE LOGIC_VALIDATION_EXCEPTION;
          
          END;
          WHEN OTHERS THEN
          BEGIN          
          --DBMS_OUTPUT.PUT_LINE('Error LOGIC Inesperado: SP_SOLICITUD_DICOM --> SQLERRM '|| SQLERRM ||'SQLCODE ' ||SQLCODE);
          LOGIC_MSJ_EXCEPTION:='Error LOGIC Inesperado: SP_SOLICITUD_DICOM '|| LOGIC_MSJ_EXCEPTION;
            RAISE LOGIC_UNEXPECTED_EXCEPTION;
            
          END;
                
        END SP_PROCESAR_SOLICITUD_DICOM;
        
        
PROCEDURE SP_ORQUESTADOR (p_undinv_id            IN INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%TYPE,
                          p_NRO_SOLICITUD        IN SOLICITUDES_DICOM.NRO_SOLICITUD%TYPE,
                          p_TIPO_CLIENTE         IN SOLICITUDES_DICOM.TIPO_CLIENTE%TYPE,
                          p_CED_RIF              IN SOLICITUDES_DICOM.CED_RIF%TYPE,
                          p_NOMBRE_CLIENTE       IN SOLICITUDES_DICOM.NOMBRE_CLIENTE%TYPE,
                          p_TELEFONO_CLIENTE     IN SOLICITUDES_DICOM.TELEFONO_CLIENTE%TYPE,
                          p_CORREO_CLIENTE       IN SOLICITUDES_DICOM.CORREO_CLIENTE%TYPE,
                          p_NRO_CTA_NACIONAL     IN SOLICITUDES_DICOM.NRO_CTA_NACIONAL%TYPE,
                          p_NRO_RET_CAPITAL      IN SOLICITUDES_DICOM.NRO_RET_CAPITAL%TYPE,
                          p_HORA_BLOQ            IN SOLICITUDES_DICOM.HORA_BLOQ%TYPE,
                          p_MONTO_OP_NACIONAL    IN SOLICITUDES_DICOM.MONTO_OP_NACIONAL%TYPE,
                          p_DIVISA_NACIONAL      IN SOLICITUDES_DICOM.DIVISA_NACIONAL%TYPE,
                          p_NRO_RET_COMISION     IN SOLICITUDES_DICOM.NRO_RET_COMISION%TYPE,
                          p_MONTO_COMISION       IN SOLICITUDES_DICOM.MONTO_COMISION%TYPE,
                          p_PORC_COMISION        IN SOLICITUDES_DICOM.PORC_COMISION%TYPE,
                          p_FECHA_OPERACION      IN SOLICITUDES_DICOM.FECHA_OPERACION%TYPE,
                          p_NRO_CTA_EXTRANJERA   IN SOLICITUDES_DICOM.NRO_CTA_EXTRANJERA%TYPE,
                          p_MONTO_OP_EXTRANJERA  IN SOLICITUDES_DICOM.MONTO_OP_EXTRANJERA%TYPE,
                          p_DIVISA_EXTRANJERA    IN SOLICITUDES_DICOM.DIVISA_EXTRANJERA%TYPE,
                          p_TASA_CAMBIO          IN SOLICITUDES_DICOM.TASA_CAMBIO%TYPE,
                          p_FECHA_VALOR_OPERACION IN SOLICITUDES_DICOM.FECHA_VALOR_OPERACION%TYPE,
                          p_CODIGO_RESPUESTA     IN SOLICITUDES_DICOM.CODIGO_RESPUESTA%TYPE,
                          p_TIPO_OPERACION       IN SOLICITUDES_DICOM.TIPO_OPERACION%TYPE,
                          p_tipo_solicitud       IN INFI_TB_106_UNIDAD_INVERSION.TIPO_SOLICITUD%TYPE,-- AQUI 27                          
                          p_PORC_COMISION_IGTF   IN INFI_TB_204_ORDENES.ORDENE_PED_PORC_COMISION_IGTF%TYPE,
                          p_COMISION_IGTF        IN INFI_TB_204_ORDENES.ORDENE_PED_COMISION_IGTF%TYPE,
                          p_MONTO_TOTAL_RET      IN INFI_TB_207_ORDENES_OPERACION.MONTO_OPERACION%TYPE,                                                                                                                                    
                          p_empres_id            IN INFI_TB_106_UNIDAD_INVERSION.EMPRES_ID%TYPE,
                          p_bdv_vehiculo_id      IN infi_tb_018_vehiculos.vehicu_id%TYPE,                          
                          p_bloter_id            IN INFI_TB_107_UI_BLOTTER.BLOTER_ID%TYPE,                           
                          p_cod_op_blo_cap		 IN	INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_BLO%TYPE, 
                          p_cod_op_blo_com		 IN	INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_BLO%TYPE, 
                          p_cod_op_deb_cap		 IN	INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_DEB%TYPE, 
                          p_cod_op_cre_cap		 IN	INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_CRE%TYPE, 
                          p_cod_op_deb_com		 IN	INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_DEB%TYPE, 
                          p_cod_op_cre_conv_20	 IN	INFI_TB_032_TRNF_FIJAS_VEHICU.COD_OPERACION_CTE_CRE%TYPE, 
                          P_NRO_JORNADA          IN  SOLICITUDES_DICOM.ID_JORNADA%TYPE,
                          p_username             IN INFI_TB_204_ORDENES.ORDENE_USR_NOMBRE%TYPE,
                          p_ejecucion_id         IN INFI_TB_204_ORDENES.EJECUCION_ID%TYPE) 


AS

                           
             
                             
    
    BEGIN
    
                        v_tipo_solicitud 		:= p_tipo_solicitud  ; 
                        v_empres_id      		:= p_empres_id       ; 
                        v_bdv_vehiculo_id		:= p_bdv_vehiculo_id ; 
                        v_bloter_id      		:= p_bloter_id       ; 
                      
                        v_cod_op_blo_cap	  :=p_cod_op_blo_cap; 
                        v_cod_op_deb_cap      :=p_cod_op_deb_cap;
                        v_cod_op_cre_cap      :=p_cod_op_cre_cap;
                                           
                        v_cod_op_blo_com	  :=p_cod_op_blo_com;
                        v_cod_op_deb_com	  :=p_cod_op_deb_com;
                                                                    
                        v_cod_op_cre_conv_20  :=p_cod_op_cre_conv_20;
            
                        
    IF p_CODIGO_RESPUESTA=0 THEN --Creacion de operaciones para Ordenes verificadas de forma satisfactoria 
    PK_INFI_LOGIC_DICOM_F2.SP_PROCESAR_SOLICITUD_DICOM(p_undinv_id,
                                           p_NRO_SOLICITUD,                                                                                                                                                                         
                                           p_TIPO_CLIENTE,                                                                                                               
                                           p_CED_RIF,
                                           p_NOMBRE_CLIENTE,                                                                                                               
                                           p_TELEFONO_CLIENTE,
                                           p_CORREO_CLIENTE,                                                                                                               
                                           p_NRO_CTA_NACIONAL,
                                           p_NRO_RET_CAPITAL,                                                                                                               
                                           p_HORA_BLOQ,                                                          
                                           p_MONTO_OP_NACIONAL,
                                           p_DIVISA_NACIONAL,                                                                                                               
                                           p_NRO_RET_COMISION,
                                           p_MONTO_COMISION,       
                                           p_PORC_COMISION,        
                                           p_FECHA_OPERACION,      
                                           p_NRO_CTA_EXTRANJERA,   
                                           p_MONTO_OP_EXTRANJERA,    
                                           p_DIVISA_EXTRANJERA,    
                                           p_TASA_CAMBIO,          
                                           p_FECHA_VALOR_OPERACION,
                                           p_CODIGO_RESPUESTA,     
                                           p_TIPO_OPERACION,
                                           p_PORC_COMISION_IGTF,
                                           p_COMISION_IGTF,     
                                           p_MONTO_TOTAL_RET);
                                           
                                           
                                                                  
                                        PK_INFI_CRUD_F2.SP_ACTIALIZAR_SOLICITUD_DICOM(p_NRO_SOLICITUD,
                                                                                      P_NRO_JORNADA,
                                                                                      p_CODIGO_RESPUESTA,
                                                                                      p_NOMBRE_CLIENTE,
                                                                                      p_TELEFONO_CLIENTE,
                                                                                      p_CORREO_CLIENTE,
                                                                                      p_NRO_RET_CAPITAL,
                                                                                      p_HORA_BLOQ,
                                                                                      p_DIVISA_NACIONAL,
                                                                                      p_NRO_RET_COMISION,
                                                                                      p_MONTO_COMISION,
                                                                                      p_PORC_COMISION,
                                                                                      p_DIVISA_EXTRANJERA, 
                                                                                      p_TASA_CAMBIO,  
                                                                                      v_id_toma_orden,
                                                                                      v_id_orden_pago,
                                                                                      p_undinv_id
                                                                                   );             
                                                                                                                          
                                          
                                                            --DBMS_OUTPUT.put_line('SP_ACTIALIZAR_SOLICITUD_DICOM --> ');               
                                                            --                                                                          
                                                            --DBMS_OUTPUT.put_line('p_NRO_SOLICITUD --> '    ||p_NRO_SOLICITUD);        
                                                            --DBMS_OUTPUT.put_line('P_NRO_JORNADA --> '      ||P_NRO_JORNADA);          
                                                            --DBMS_OUTPUT.put_line('p_CODIGO_RESPUESTA --> ' ||p_CODIGO_RESPUESTA);     
                                                            --DBMS_OUTPUT.put_line('p_NOMBRE_CLIENTE -->   ' ||p_NOMBRE_CLIENTE);       
                                                            --DBMS_OUTPUT.put_line('p_TELEFONO_CLIENTE --> ' ||p_TELEFONO_CLIENTE);     
                                                            --DBMS_OUTPUT.put_line('p_CORREO_CLIENTE --> '   ||p_CORREO_CLIENTE);       
                                                            --DBMS_OUTPUT.put_line('p_NRO_RET_CAPITAL --> '  ||p_NRO_RET_CAPITAL);      
                                                            --DBMS_OUTPUT.put_line('p_HORA_BLOQ --> '        ||p_HORA_BLOQ);            
                                                            --DBMS_OUTPUT.put_line('p_DIVISA_NACIONAL --> '  ||p_DIVISA_NACIONAL);      
                                                            --DBMS_OUTPUT.put_line('p_NRO_RET_COMISION --> ' ||p_NRO_RET_COMISION);     
                                                            --                                                                          
                                                            --DBMS_OUTPUT.put_line('p_MONTO_COMISION --> '        ||p_MONTO_COMISION);  
                                                            --DBMS_OUTPUT.put_line('p_PORC_COMISION --> '    ||p_PORC_COMISION);        
                                                            --DBMS_OUTPUT.put_line('p_DIVISA_EXTRANJERA --> ' ||p_DIVISA_EXTRANJERA);   
                                                            --                                                                          
                                                            --DBMS_OUTPUT.put_line('p_TASA_CAMBIO --> '   ||p_TASA_CAMBIO);             
                                                            --DBMS_OUTPUT.put_line('v_id_toma_orden --> '    ||v_id_toma_orden);        
                                                            --DBMS_OUTPUT.put_line('v_id_orden_pago --> '||v_id_orden_pago);            
                                                            --                                                                          
                                                            --DBMS_OUTPUT.put_line('p_undinv_id --> '||p_undinv_id);                    
                                                                                                                      
    ELSE
    PK_INFI_CRUD_F2.SP_ACTIALIZAR_SOLICITUD_DICOM(p_NRO_SOLICITUD,
                                                  P_NRO_JORNADA,
                                                  p_CODIGO_RESPUESTA,
                                                  p_NOMBRE_CLIENTE,
                                                  p_TELEFONO_CLIENTE,
                                                  p_CORREO_CLIENTE,
                                                  p_NRO_RET_CAPITAL,
                                                  p_HORA_BLOQ,
                                                  p_DIVISA_NACIONAL,
                                                  p_NRO_RET_COMISION,
                                                  p_MONTO_COMISION,
                                                  p_PORC_COMISION,
                                                  p_DIVISA_EXTRANJERA, 
                                                  p_TASA_CAMBIO,  
                                                  NULL,
                                                  NULL,
                                                  p_undinv_id
                                                  );                                                                                                                                  
    END IF; 
        
        --v_bdv_vehiculo_id:=GET_VEHICULO(C_RIF_BDV);
        --BUSQUEDA DE INFORMACION DE LA UNIDAD DE INVERSION 
       /* SELECT TIPO_SOLICITUD,EMPRES_ID INTO v_tipo_solicitud,v_empres_id FROM INFI_TB_106_UNIDAD_INVERSION UI WHERE UI.UNDINV_ID=p_undinv_id;
                    
        SELECT BLOTER_ID INTO v_bloter_id FROM INFI_TB_107_UI_BLOTTER UIB  WHERE UIB.UNDINV_ID=p_undinv_id;
        
        BEGIN
            FOR cod_op IN (SELECT TRNFIN_ID,COD_OPERACION_CTE_DEB,COD_OPERACION_CTE_CRE,COD_OPERACION_CTE_BLO
                        FROM infi_tb_032_trnf_fijas_vehicu tfv
                        WHERE tfv.VEHICU_ID=v_bdv_vehiculo_id AND tfv.insfin_id = (SELECT ui.insfin_id
                        FROM infi_tb_106_unidad_inversion ui WHERE ui.undinv_id = p_undinv_id))
            LOOP
            
                IF    cod_op.TRNFIN_ID=C_TRNFINID_TOMA_ORDEN_CAP THEN--Busqueda codigo Operacion Debito Capital 
                      v_cod_op_deb_cap:=cod_op.COD_OPERACION_CTE_DEB;
                      v_cod_op_cre_cap:=cod_op.COD_OPERACION_CTE_CRE;
                      v_cod_op_blo_cap:=cod_op.COD_OPERACION_CTE_BLO;
                ELSIF cod_op.TRNFIN_ID=C_TRNFINID_TOMA_ORDEN_COM THEN--Busqueda codigo Operacion Debito Comision 
                      v_cod_op_deb_com:=cod_op.COD_OPERACION_CTE_DEB;
                      v_cod_op_blo_com:=cod_op.COD_OPERACION_CTE_BLO;                
                ELSIF cod_op.TRNFIN_ID=C_TRNFINID_TOMA_ORDEN_CONV_20 THEN--Busqueda de codigo de operacion para Abono a cta Convenio 20
                      v_cod_op_cre_conv_20:=cod_op.COD_OPERACION_CTE_CRE;      
                END IF;
                
            END LOOP;
        END;*/
            
        
        
        COMMIT;
    
--        EXCEPTION
--        WHEN PK_INFI_CRUD.CRUD_VALIDATION_EXCEPTION THEN
--        --DBMS_OUTPUT.PUT_LINE('CRUD_VALIDATION_EXCEPTION ---> '||LOGIC_MSJ_EXCEPTION);        
--        
--        WHEN PK_INFI_CRUD.CRUD_UNEXPECTED_EXCEPTION THEN
--        --DBMS_OUTPUT.PUT_LINE('CRUD_UNEXPECTED_EXCEPTION ---> '||LOGIC_MSJ_EXCEPTION);
--        
        END; 
        
PROCEDURE CREAR_UNIDAD_INVERSION_DICOM (
      P_TIPO_ORDEN              IN  CHAR,                                                   -- O=OFERTA , D=DEMANDA 
      P_NRO_JORNADA             IN  INFI_TB_106_UNIDAD_INVERSION.NRO_JORNADA%type,          -- NRO DE JORNADA REGISTRADO EN BCV 
      P_USUARIO                 IN  INFI_TB_106_UNIDAD_INVERSION.AUT_USUARIO_USERID%type,   -- USUARIO GENERICO QUE LLAMA EL PROCESO 
      P_IP                      IN  INFI_TB_106_UNIDAD_INVERSION.AUT_IP%type,               -- IP DEL SERVIDOR QUE LLAMA EL PROCESO 
      P_ID_UNIDAD_INVERSION     OUT INFI_TB_106_UNIDAD_INVERSION.UNDINV_ID%type,                          -- EN CASO DE RESULTADO EXITOSO RETORNA EL ID DE UNIDAD DE INVERSIÓN 
      P_MENSAJE                 OUT VARCHAR2                                                -- MENSAJE DE RETORNO 
)
AS
/******************************************************************************
   NAME:       CREAR_UNIDAD_INVERSION_DICOM
   PURPOSE:    Permite crear automáticamente unidades de inversión de acuerdo
                a configuraciones de parámetros generales.
                Este proceso se realiza para el uso del producto DICOM 

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        17/05/2017          1. Created this procedure.

   NOTES:

   Automatically available Auto Replace Keywords:
      Object Name:     CREAR_UNIDAD_INVERSION_DICOM
      Sysdate:         17/05/2017
      Date and Time:   17/05/2017, 02:38:09 p.m., and 17/05/2017 02:38:09 p.m.
      Username:         NM25287 
      Table Name:       INFI_TB_106_UNIDAD_INVERSION, INFI_TB_108_UI_TITULOS,
                        INFI_TB_109_UI_EMPRESAS,INFI_TB_107_UI_BLOTTER

******************************************************************************/
    --CONSTANTES 
    C_SIGLAS_INFI VARCHAR2(4):='INFI';
    C_TIPO_ORDEN_OFERTA CHAR :='O';
    C_TIPO_ORDEN_DEMANDA CHAR :='D';
    C_PARGRP_ID INFI_TB_001_PARAM_GRUPO.PARGRP_ID%type :='133';
    C_TIPO_PRODUCTO INFI_TB_019_TIPO_DE_PRODUCTO.TIPO_PRODUCTO_ID%type :='DICOM';
    C_CANAL_DICOM INFI_TB_904_CANAL.CANAL_ID%type :=4;    
    
    --VARIABLES A LLENAR CON LA CONSULTA DE PARAMETROS   
    V_NOMBRE_SUBASTA INFI_TB_106_UNIDAD_INVERSION.UNDINV_EMISION%type;    
    V_DESCRIPCION_SUBASTA INFI_TB_106_UNIDAD_INVERSION.UNDINV_DESCRIPCION %type;    
    V_INSTRUMENTO_FINANCIERO INFI_TB_101_INST_FINANCIEROS.INSFIN_ID%type;
    V_MONEDA INFI_TB_106_UNIDAD_INVERSION.MONEDA_ID%type; 
    V_EMPRESA_ID INFI_TB_106_UNIDAD_INVERSION.EMPRES_ID%type;
    V_INSTRUMENTO_FINANCIERO_CHAR INFI_TB_101_INST_FINANCIEROS.INSFIN_DESCRIPCION%type;
    V_PARAMETRO_NOMBRE_SUBASTA INFI_TB_002_PARAM_TIPOS.PARTIP_NOMBRE_PARAMETRO%type;
    V_PARAMETRO_NOMBRE_INSTRUMENTO INFI_TB_002_PARAM_TIPOS.PARTIP_NOMBRE_PARAMETRO%type;
    V_PARAMETRO_MONEDA INFI_TB_002_PARAM_TIPOS.PARTIP_NOMBRE_PARAMETRO%type;
    V_PARAMETRO_EMISOR INFI_TB_002_PARAM_TIPOS.PARTIP_NOMBRE_PARAMETRO%type;
    V_TIPO_SOLICITUD INFI_TB_106_UNIDAD_INVERSION.TIPO_SOLICITUD%type;
    V_EMISOR_RIF VARCHAR2(15);  
    V_USUARIO_ID NUMBER(22);
    V_USUARIO_NOMBRE VARCHAR2(50);
    V_USUARIO_ROL VARCHAR2(50);
    V_APLICACION_ID NUMBER(22);
    V_BLOTTER_ID INFI_TB_102_BLOTER.BLOTER_ID%type;    
    V_CAMPO_VALIDAR VARCHAR2(25);
     V_ERROR_NUM NUMBER(5):=-1;

BEGIN
--DBMS_OUTPUT.put_line('0');
    BEGIN
    
      --IDENTIFICAR PARAMETROS DE CONFIGURACION   
        IF P_TIPO_ORDEN = C_TIPO_ORDEN_OFERTA THEN
            --OFERTA 
            V_PARAMETRO_NOMBRE_SUBASTA:='UNDINV_NOMBRE_SUB_OFERTA';
            V_PARAMETRO_NOMBRE_INSTRUMENTO:='UNDINV_INST_FINANC_OFERTA';
            V_PARAMETRO_MONEDA:='UNDINV_MONEDA_OFERTA';
            V_PARAMETRO_EMISOR:='UNDINV_EMISOR_OFERTA';
            V_TIPO_SOLICITUD:=1;
        ELSE
            --DEMANDA 
            V_PARAMETRO_NOMBRE_SUBASTA:='UNDINV_NOMBRE_SUB_DEMANDA';
            V_PARAMETRO_NOMBRE_INSTRUMENTO:='UNDINV_INST_FINANC_DEMAND';
            V_PARAMETRO_MONEDA:='UNDINV_MONEDA_DEMANDA';
            V_PARAMETRO_EMISOR:='UNDINV_EMISOR_DEMANDA';
            V_TIPO_SOLICITUD:=0;
        END IF;
     
        --VALIDAR QUE YA NO EXISTA UNA UNIDAD DE INVERSIÓN ASOCIADO AL NUMERO DE JORNADA
        SELECT UNDINV_ID
            INTO P_ID_UNIDAD_INVERSION
            FROM INFI_TB_106_UNIDAD_INVERSION U
            WHERE U.NRO_JORNADA=P_NRO_JORNADA
            AND U.TIPO_SOLICITUD=V_TIPO_SOLICITUD
            AND U.INSFIN_ID IN (    
                SELECT I.INSFIN_ID 
                FROM INFI_TB_101_INST_FINANCIEROS I 
                WHERE I.TIPO_PRODUCTO_ID=C_TIPO_PRODUCTO);
        
        IF P_ID_UNIDAD_INVERSION>0 THEN
            V_ERROR_NUM:=1;
            P_MENSAJE:='CREAR_UNIDAD_INVERSION_DICOM. Validacion: Se retorna el id de la unidad de inversión creada previamente para la Jornada: '||P_NRO_JORNADA;
            RAISE LOGIC_VALIDATION_EXCEPTION;  
        END IF;
    
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
        BEGIN            
           
            
            --INICIO DE LAS VALIDACIONES Y CONSULTAS             
            --VALIDAR USUARIO QUE VA A EJECUTAR EL PROCESO 
            V_CAMPO_VALIDAR:='Usuario/Rol';
            SELECT MSC_USER_ID,FULLNAME
                INTO V_USUARIO_ID,V_USUARIO_NOMBRE
                FROM MSC_USER U
                WHERE TRIM(U.USERID)=TRIM(P_USUARIO);
        
            SELECT A.ID_APPLICATION 
                INTO V_APLICACION_ID
                FROM MSC_APPLICATIONS A 
                WHERE A.SIGLAS_APPLIC='INFI';

            SELECT R.DESCRIPTION 
                INTO V_USUARIO_ROL
                FROM MSC_ROLE R,MSC_ROLE_USER RU 
                WHERE RU.MSC_USER_ID=V_USUARIO_ID 
                AND RU.MSC_ROLE_ID=R.MSC_ROLE_ID
                AND R.ID_APPLICATION=V_APLICACION_ID;                       
                        
            --OBTENER BLOTTER A ASOCIAR A LA UNIDAD DE INVERSION
             V_CAMPO_VALIDAR:='Blotter';
             SELECT BLOTER_ID 
                 INTO V_BLOTTER_ID
                 FROM INFI_TB_102_BLOTER B 
                 WHERE B.ID_CANAL=C_CANAL_DICOM;         
              
            --CONSULTAR PARAMETROS DE CONFIGURACION 
            --NOMBRE SUBASTA 
            V_CAMPO_VALIDAR:='Nombre Subasta';
            SELECT PT.PARVAL_VALOR 
                INTO V_NOMBRE_SUBASTA 
                FROM INFI_TB_002_PARAM_TIPOS PT 
                WHERE PARGRP_ID = C_PARGRP_ID AND PARTIP_NOMBRE_PARAMETRO = V_PARAMETRO_NOMBRE_SUBASTA;
            
            V_NOMBRE_SUBASTA:=V_NOMBRE_SUBASTA||' JORNADA:  '||P_NRO_JORNADA;
            V_DESCRIPCION_SUBASTA:=TO_CHAR(SYSDATE,'ddMMRRRR HH24:mm:ss')||'_'||P_TIPO_ORDEN;
            
            --INSTRUMENTO FINANCIERO 
            V_CAMPO_VALIDAR:='Instrumento Financiero';
            SELECT PT.PARVAL_VALOR 
                INTO V_INSTRUMENTO_FINANCIERO_CHAR 
                FROM INFI_TB_002_PARAM_TIPOS PT 
                WHERE PARGRP_ID = C_PARGRP_ID AND PARTIP_NOMBRE_PARAMETRO = V_PARAMETRO_NOMBRE_INSTRUMENTO;      
                
            SELECT INSFIN_ID 
                INTO V_INSTRUMENTO_FINANCIERO
                FROM INFI_TB_101_INST_FINANCIEROS I 
                WHERE I.INSFIN_DESCRIPCION=V_INSTRUMENTO_FINANCIERO_CHAR AND I.TIPO_PRODUCTO_ID=C_TIPO_PRODUCTO;    
                 
            --MONEDA 
            V_CAMPO_VALIDAR:='Moneda';
            SELECT PT.PARVAL_VALOR 
                INTO V_MONEDA 
                FROM INFI_TB_002_PARAM_TIPOS PT 
                WHERE PARGRP_ID = C_PARGRP_ID AND PARTIP_NOMBRE_PARAMETRO = V_PARAMETRO_MONEDA; 
            
            --EMISOR    
            V_CAMPO_VALIDAR:='Emisor';
            SELECT PT.PARVAL_VALOR 
                INTO V_EMISOR_RIF 
                FROM INFI_TB_002_PARAM_TIPOS PT 
                WHERE PARGRP_ID = C_PARGRP_ID AND PARTIP_NOMBRE_PARAMETRO = V_PARAMETRO_EMISOR;  
                 
            SELECT EMPRES_ID 
                INTO V_EMPRESA_ID
                FROM INFI_TB_016_EMPRESAS E
                WHERE E.EMPRES_RIF=V_EMISOR_RIF;
 
         EXCEPTION
                 WHEN NO_DATA_FOUND THEN
                 BEGIN                 
                    V_ERROR_NUM:=2;
                    P_MENSAJE:='CREAR_UNIDAD_INVERSION_DICOM. Validacion: El campo '||V_CAMPO_VALIDAR||' ingresado no es valido o no existe ';
                    RAISE LOGIC_VALIDATION_EXCEPTION;  
                 END;
            END; 
            
        --CREAR REGISTRO EN INFI_TB_106_UNIDAD_INVERSION                         
            --INSERCION  
           PK_INFI_CRUD.SP_CREAR_UNIDAD_INVERSION(        
            P_ID_UNIDAD_INVERSION,             --        UNDINV_ID, 
            V_NOMBRE_SUBASTA,           --        UNDINV_NOMBRE, 
            V_DESCRIPCION_SUBASTA,           --        UNDINV_DESCRIPCION, 
            V_INSTRUMENTO_FINANCIERO,   --        INSFIN_ID, 
            P_NRO_JORNADA,           --        UNDINV_EMISION, 
            P_NRO_JORNADA,              --        UNDINV_SERIE, 
            0,                          --        UNDINV_TASA_CAMBIO, 
            SYSDATE,                    --        UNDINV_FE_EMISION, 
            1,                          --        UNDINV_IN_VTA_EMPLEADOS, 
            ' ',                          --        TPPEVA_ID, 
            0,                              --UNDINV_PRECIO_MINIMO,
            V_NOMBRE_SUBASTA||'. Unidad de Inversion creada por proceso automático',--        UNDINV_COMENTARIOS, 
            NULL,                       --UNDINV_DOC_BDV
            NULL,                       --UNDINV_DOC_EMISOR            
            SYSDATE,                    --        UNDINV_FE_ADJUDICACION, 
            SYSDATE,                    --        UNDINV_FE_LIQUIDACION, 
            SYSDATE,                    --        UNDINV_FE_CIERRE, 
            0,                              --        UNDINV_IN_RECOMPRA_NETEO, 
            V_MONEDA,               --        MONEDA_ID, 
            0,                              --        UNDINV_UMI_INV_TOTAL, 
            0,                              --      UNDINV_UMI_INV_MTO_MIN
            0,                              --      UNDINV_UMI_INV_MTO_MAX
            0,                              --      UNDINV_UMI_UM_CANT_MIN
            0,                              --      UNDINV_UMI_UM_CANT_MAX
            'PUBLICADA',              --        UNDINV_STATUS, 
            P_USUARIO,              --        AUT_USUARIO_USERID, 
            V_USUARIO_NOMBRE,  --        AUT_USUARIO_NOMBRE, 
            V_USUARIO_ROL,         --        AUT_USUARIO_ROL_NOMBRE, 
            P_IP,                           --P_AUT_ESTACION
            P_IP,                       --        AUT_IP, 
            SYSDATE,                    --        AUT_FECHA, 
            P_USUARIO,                  --        UPD_USUARIO_USERID, 
            V_USUARIO_NOMBRE,           --        UPD_USUARIO_NOMBRE, 
            V_USUARIO_ROL,              --        UPD_USUARIO_ROL_NOMBRE, 
            P_IP,                       --        UPD_ESTACION, 
            P_IP,                       --        UPD_IP, 
            SYSDATE,                    --        UPD_FECHA, 
            V_EMPRESA_ID,               --        EMPRES_ID, 
            0,                          --        UNDINV_UMI_INV_DISPONIBLE, 
            1,                          --        UNDINV_UMI_UNIDAD, 
            0,                          --      UNDINV_PCT_MAX_FINAN
            100,                        --      UNDINV_PRECIO_MAXIMO
            1,                          --        UNDINV_MULTIPLOS, 
            1,                          --        UNDINV_IN_PEDIDO_MONTO, 
            0,                          --        UNDINV_TASA_POOL, 
            0,                          --        UNDINV_RENDIMIENTO, 
            'PRIMARIO',                 --        UNDINV_MERCADO, 
            1,                          --        UNDINV_IN_PRECIO_SUCIO, 
            SYSDATE,                    --        UNDINV_FE_LIQUIDACION_HORA1, 
            SYSDATE,                    --        UNDINV_FE_LIQUIDACION_HORA2, 
            0,                           --       PAGO_IN_BCV
            1,                          --        IN_COBRO_BATCH_ADJ, 
            1,                          --        IN_COBRO_BATCH_LIQ, 
            0,                          --        DIAS_APERTURA_CUENTA, 
            0,                          --        INDC_PERMITE_CANCELACION, 
            1,                          --        UNDINV_ACTIVE,       
            0,                          --        MONTO_ACUMULADO_SOLIC, 
            0,                          --        TIPO_NEGOCIO, 
            P_NRO_JORNADA,  --        NRO_JORNADA
            0,                          --        UNDINV_PERIODO_VENTA, 
            0,                          --        UNDINV_MULTIPLOS_EFECTIVO, 
            0,                          --        UNDINV_UMAX_UNIDAD, 
            0,                          --        UNDINV_TASA_CAMBIO_OFER, 
            0,                          --        COMISION_IGTF)
            V_TIPO_SOLICITUD  --        TIPO_SOLICITUD
        );
  
        --CREAR REGISTRO EN INFI_TB_108_UI_TITULOS      
            --INSERCION 
           PK_INFI_CRUD.SP_CREAR_UI_TITULOS (
                P_ID_UNIDAD_INVERSION,                   --        UNDINV_ID,
                'Jornada Nro: '||P_NRO_JORNADA,       --        TITULO_ID 
                100,                                                   --        UITITU_PORCENTAJE,
                1,                                                      --        UITITU_VALOR_EQUIVALENTE,
                0,                                                      --        UITITU_IN_CONIDB,
                0                                                       --        UITITU_IN_CONTROL_DISPONIBLE,
            );
            
        --CREAR REGISTRO EN INFI_TB_109_UI_EMPRESAS 
            --INSERCION 
            PK_INFI_CRUD.SP_CREAR_UI_EMPRESA (
                P_ID_UNIDAD_INVERSION,             --        UNDINV_ID,
                V_EMPRESA_ID,                            --        EMPRES_ID 
               '',                                                  --      ROLES_ID
               '',                                                  --      UIEMPR_CONTACTO_NOM
               ''                                                   --      UIEMPR_CONTACTO_TLF
            );
            
        --CREAR REGISTRO EN INFI_TB_107_UI_BLOTTER 
            --INSERCION 
            PK_INFI_CRUD.SP_CREAR_UI_BLOTTER ( 
                P_ID_UNIDAD_INVERSION,                  --UNDINV_ID,
                V_BLOTTER_ID,                                   --BLOTER_ID
                1,                                                      --UIBLOT_IN_DISPONIBLE 
                TO_TIMESTAMP(SYSDATE,'DD/MM/YYYY HH12:MI:SS.FF AM') ,   --UIBLOT_HORARIO_DESDE 
                TO_TIMESTAMP(SYSDATE,'DD/MM/YYYY HH12:MI:SS.FF AM') ,   --UIBLOT_HORARIO_HASTA 
                SYSDATE,                                                --UIBLOT_PEDIDO_FE_INI 
                SYSDATE,                                                --UIBLOT_PEDIDO_FE_FIN 
                '',                                                         --  P_UIBLOT_SERIAL_COMISIONES
                '',                                                         -- P_UIBLOT_SERIAL_CAPITAL
                '',                                                         --P_TPPEVA_ID
                '',                                                         --P_CTESEG_ID
                1,                                                      --UIBLOT_IN_DEFECTO 
                0,                                                      --UIBLOT_IN_TESORERIA
                SYSDATE,                                                --UIBLOT_HORARIO_DESDE_ULT_DIA
                SYSDATE,                                                --UIBLOT_HORARIO_HASTA_ULT_DIA
                0,                                                      --UIBLOT_GANANCIA_RED 
                0                                                       --UIBLOT_IN_RECOMPRA         
            );
            
            COMMIT;  
                
        P_MENSAJE:='OK';     
        V_ERROR_NUM:=0;
                        
        END;
    
    EXCEPTION
        WHEN LOGIC_VALIDATION_EXCEPTION THEN
        BEGIN  
            IF V_ERROR_NUM<>1 THEN
            raise_application_error(-20001,'Datos no validos: CREAR_UNIDAD_INVERSION_AUTO: '||P_MENSAJE);  
            ROLLBACK;             
            END IF;
        END;
        WHEN OTHERS THEN
		BEGIN                   
			ROLLBACK;   
			P_MENSAJE:='Error Inesperado: CREAR_UNIDAD_INVERSION_AUTO '||' SQLERRM ' ||SQLERRM ||'SQLCODE ' ||SQLCODE;     
			raise_application_error(-20001,'Error en el proceso CREAR_UNIDAD_INVERSION_AUTO: '||P_MENSAJE);                                                
		END;   

END CREAR_UNIDAD_INVERSION_DICOM;        
        FUNCTION GET_VEHICULO (
    P_RIF VARCHAR2
)
RETURN infi_tb_018_vehiculos.vehicu_id%TYPE IS
VEHICULO infi_tb_018_vehiculos.vehicu_id%TYPE;
/******************************************************************************
   NAME:       GET_SEQUENCE 
   PURPOSE:    Funcion creada para obtener la secuencia (id) de tabla a insertar
                Se realiza de esta manera para no cambiar el esquema de manejo de
                secuencias usado en la aplicación 

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        18/05/2017          1. Created this function.

   NOTES:

   Automatically available Auto Replace Keywords:
      Object Name:     GET_SEQUENCE
      Sysdate:         18/05/2017
      Date and Time:   18/05/2017, 04:10:45 p.m., and 18/05/2017 04:10:45 p.m.
      Username:         NM25287 
      Table Name:       SEQUENCE_NUMBERS 

******************************************************************************/
    BEGIN
             
        SELECT a.vehicu_id INTO VEHICULO       
          FROM infi_tb_018_vehiculos a
         WHERE a.vehicu_rif =(SELECT a.parval_valor
                     FROM infi_tb_002_param_tipos a, infi_tb_001_param_grupo b
                    WHERE a.pargrp_id = b.pargrp_id
                      AND a.partip_nombre_parametro =  P_RIF);   
    RETURN VEHICULO; 
    END;
            
    
    END;
/


CREATE OR REPLACE PACKAGE BODY ADM_INFI.PROCESO_CIERRE AS
/******************************************************************************
   NAME:       PROCESO_CIERRE
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        16/04/2013             1. Created this package.
******************************************************************************/
  
 PROCEDURE COMISIONES_BUEN_VALOR(p_fecha_precierre IN VARCHAR2         
   ) IS    
 
   op_bv_comision_monto INFI_TB_207_ORDENES_OPERACION.MONTO_OPERACION%TYPE;
   op_bv_comision_id INFI_TB_207_ORDENES_OPERACION.ORDENE_OPERACION_ID%TYPE;
   op_bv_fecha_aplicar INFI_TB_207_ORDENES_OPERACION.FECHA_APLICAR%TYPE;
   monto_operacion_bv INFI_TB_207_ORDENES_OPERACION.MONTO_OPERACION%TYPE;
   
   c_veh INFI_TB_204_ORDENES.ORDENE_VEH_TOM%TYPE;
   c_transf INFI_TB_106_UNIDAD_INVERSION.INSFIN_ID%TYPE;
       
   tasa_convertida number;      
   dias_transcurridos NUMBER;
   
     
    CURSOR veh_inst IS
          SELECT distinct ord.ordene_veh_tom, ui.insfin_id
           FROM infi_tb_207_ordenes_operacion oo,
               infi_tb_204_ordenes ord,
               infi_tb_106_unidad_inversion ui
           WHERE oo.ordene_id = ord.ordene_id
           AND ord.UNIINV_ID = ui.undinv_id
           AND oo.status_operacion IN (EN_ESPERA,RECHAZADA)
           AND oo.trnf_tipo = OPERACION_DEBITO
           AND oo.trnfin_id = 1           
           AND ord.tipo_producto_id =PRODUCTO_SUBASTA_DIVISAS           
           ORDER BY ord.ordene_veh_tom, ui.insfin_id ASC;
   
      --Cursor con las operaciones que no se han podido cobrar
      CURSOR op_pendientes_cobro IS
          SELECT ord.ordene_veh_tom, ui.insfin_id, ord.ORDENE_FECHA_ADJUDICACION,oo.ordene_id, oo.cta_origen,
           oo.cta_destino, oo.aplica_reverso, oo.fecha_aplicar,
           oo.fecha_procesada, oo.in_comision, oo.moneda_id, oo.ctecta_numero,
           oo.numero_retencion, oo.operacion_nombre, oo.monto_operacion,ord.ordene_ped_total, 
           ord.ordene_ped_comisiones
           FROM infi_tb_207_ordenes_operacion oo,
               infi_tb_204_ordenes ord,
               infi_tb_106_unidad_inversion ui
           WHERE oo.ordene_id = ord.ordene_id
           AND ord.uniinv_id = ui.undinv_id
           AND oo.status_operacion IN (EN_ESPERA,RECHAZADA)
           AND oo.trnf_tipo=OPERACION_DEBITO
           AND oo.trnfin_id=1           
           AND ord.tipo_producto_id=PRODUCTO_SUBASTA_DIVISAS           
           AND ui.INSFIN_ID=c_transf
           AND ORD.ORDENE_VEH_TOM=c_veh   
           AND ORD.ORDENE_FECHA_ADJUDICACION<(SELECT C.FECHA_SISTEMA FROM INFI_TB_906_CIERRE C)        
           ORDER BY ord.ordene_veh_tom, ui.insfin_id ASC;
                                                              
  BEGIN                     
                                                        
            BEGIN
            
             SELECT TASA into v_tasa_buen_valor 
             FROM INFI_TB_816_CONFIG_TASA t
    		 WHERE TO_DATE(t.FECHA,'dd-MM-rrrr') = (SELECT TO_DATE(FECHA_SISTEMA,'dd-MM-rrrr') FROM INFI_TB_906_CIERRE)
    		 AND TRANSA_ID=TRANSA_COMISION_BUEN_VALOR
             AND TIPO_PRODUCTO_ID=PRODUCTO_SUBASTA_DIVISAS
             AND t.APROBADO = 1;
             
            EXCEPTION
            WHEN NO_DATA_FOUND THEN
            utl_file.put_line(newfile,'No se puede iniciar el proceso de Calculo Comision BUEN VALOR por que no ha sido configurada y aprobada la tasa para la FECHA SISTEMA');
            RAISE_APPLICATION_ERROR(-20002,'Error en el proceso de Calculo Comision Buen Valor.  No se puede iniciar el proceso de Calculo Comision BUEN VALOR por que no ha sido configurada y aprobada la tasa para la FECHA SISTEMA');
                              
            END;
            
            --Recalculo del monto de la operacion Comision BUEN VALOR
            tasa_convertida:=v_tasa_buen_valor/100;
            
            utl_file.put_line(newfile,to_char(sysdate,'dd/mm/yyyy'||' hh:mi:ss')||' ---Incio  proceso comision Buen Valor--- ');
           --Busqueda del ID de la transaccion fija COMISION_BUEN_VALOR
           SELECT trnfin_id
           INTO v_id_comision_buenvalor
           FROM infi_tb_032_trnf_fijas
           WHERE transa_id = transa_comision_buen_valor;            
        
           FOR c_veh_inst IN veh_inst LOOP
                  
            BEGIN
              
                SELECT cod_operacion_cte_deb
                INTO v_cod_op_buenvalor
                FROM infi_tb_032_trnf_fijas_vehicu
                WHERE vehicu_id =c_veh_inst.ordene_veh_tom 
                AND insfin_id =c_veh_inst.insfin_id
                AND TRNFIN_ID=v_id_comision_buenvalor;
                                       
                IF(v_cod_op_buenvalor IS NULL OR v_cod_op_buenvalor='')THEN
                utl_file.put_line(newfile,to_char(sysdate,'dd/mm/yyyy'||'  hh:mi:ss')||' No existe codigo de operacion asociado a la transaccion COMISION_BUEN_VALOR');                
                --DBMS_OUTPUTput_line (' NO EXISTE CODIGO DE OPERACIONES ASOCIADO A LA TRANSACCION COMISION BUEN VALOR');
                RAISE_APPLICATION_ERROR(-20003,'Error en el proceso de Calculo Comision Buen Valor.  NO EXISTE CODIGO DE OPERACIONES ASOCIADO A LA TRANSACCION COMISION BUEN VALOR');                   
                END IF;
                                                      
            EXCEPTION
            WHEN NO_DATA_FOUND THEN
                
            utl_file.put_line(newfile,to_char(sysdate,'dd/mm/yyyy'||'  hh:mi:ss')||' Transaccion COMISION_BUEN_VALOR no ha sido asociada al instrumento financiero a procesar');
            --DBMS_OUTPUTput_line ('LA TRANSACCION COMISION_BUEN_VALOR NO HA SIDO ASOCIADA AL INSTRUMENTO FINANCIERO A PROCESAR');
            RAISE_APPLICATION_ERROR(-20004,'Error en el proceso de Calculo Comision Buen Valor.  LA TRANSACCION COMISION_BUEN_VALOR NO HA SIDO ASOCIADA AL INSTRUMENTO FINANCIERO A PROCESAR');
                                
            END;     
            
             
                 c_veh:=c_veh_inst.ordene_veh_tom; 
                 c_transf:=c_veh_inst.insfin_id;
                                                   
               FOR operacion_capital IN op_pendientes_cobro LOOP 
                                                                               
                   --monto_operacion_bv:=(operacion_capital.monto_operacion*tasa_convertida)/360*dias_transcurridos;     
                                        
                   BEGIN
                       --Busqueda de operacion BUEN VALOR asociada a la orden a procesar
                       SELECT OP.MONTO_OPERACION,OP.ORDENE_OPERACION_ID,OP.FECHA_APLICAR
                       INTO op_bv_comision_monto,op_bv_comision_id,op_bv_fecha_aplicar
                       FROM INFI_TB_207_ORDENES_OPERACION OP
                       WHERE OP.ORDENE_ID=operacion_capital.ORDENE_ID
                       AND OP.TRNFIN_ID=v_id_comision_buenvalor;
                            
                    ----DBMS_OUTPUTput_line ('SECCION UPDATE tipo op-->'||v_id_comision_buenvalor||' orden_id --> '||operacion_capital.ORDENE_ID);
                                
                       dias_transcurridos:=TO_DATE(p_fecha_precierre,'dd-MM-rrrr')-op_bv_fecha_aplicar;
                        ----DBMS_OUTPUTput_line ('Fecha pre cierre parametro --> '||TO_DATE(p_fecha_precierre,'dd-MM-yyyy'));
                        ----DBMS_OUTPUTput_line ('Fecha pre cierre registro --> '||op_bv_fecha_aplicar);
                       
                       monto_operacion_bv:=((operacion_capital.monto_operacion*tasa_convertida)/360)*dias_transcurridos;
                       
                       --Actualiza la operacion solo si la fecha aplicar es diferente a la fecha pre-cierre (Lo que indica que aun no se ha actualizado la operacion)
                            IF(p_fecha_precierre!=TO_CHAR(op_bv_fecha_aplicar,'dd-MM-rrrr'))THEN
                            op_bv_comision_monto:=op_bv_comision_monto+monto_operacion_bv; 
                            --Actualizacion de operacion de comision Buen Valor                                        
                            UPDATE INFI_TB_207_ORDENES_OPERACION OO SET OO.MONTO_OPERACION=op_bv_comision_monto,OO.FECHA_APLICAR=TO_DATE(p_fecha_precierre,'dd-MM-yyyy'),TASA=v_tasa_buen_valor WHERE OO.ORDENE_OPERACION_ID=op_bv_comision_id;
                            --Actualizacion de los campos de monto total y monto comision en la operacion                                                                                     
                            UPDATE INFI_TB_204_ORDENES ORD SET ORD.ORDENE_PED_TOTAL=ORDENE_PED_TOTAL+monto_operacion_bv,ORD.ORDENE_PED_COMISIONES=ORD.ORDENE_PED_COMISIONES+monto_operacion_bv WHERE ORD.ORDENE_ID=operacion_capital.ORDENE_ID;                          
                            END IF;
                                                        
                   EXCEPTION
                   WHEN NO_DATA_FOUND THEN
                                                                                                  
                        dias_transcurridos:=TO_DATE(p_fecha_precierre,'dd-MM-yyyy')-operacion_capital.ORDENE_FECHA_ADJUDICACION;
                        monto_operacion_bv:=((operacion_capital.monto_operacion*tasa_convertida)/360)*dias_transcurridos;   
                                                
                       --Configuracion de la operacion de debito por buen valor
                       reg_operacion.ORDENE_ID:= operacion_capital.ORDENE_ID;
                       reg_operacion.CTA_ORIGEN:=operacion_capital.CTA_ORIGEN;
                       reg_operacion.CTA_DESTINO:=operacion_capital.CTA_DESTINO;
                       reg_operacion.APLICA_REVERSO:=operacion_capital.APLICA_REVERSO;
                       reg_operacion.TASA:=v_tasa_buen_valor;                  
                       reg_operacion.FECHA_APLICAR:=to_date(p_fecha_precierre,'dd-MM-rrrr');
                            
                       reg_operacion.status_operacion := EN_ESPERA;                   
                       reg_operacion.fecha_procesada  :=operacion_capital.fecha_procesada;
                       reg_operacion.in_comision  :=1;
                       reg_operacion.moneda_id  :=operacion_capital.moneda_id;
                       reg_operacion.ctecta_numero  :=operacion_capital.ctecta_numero;
                       reg_operacion.numero_retencion  :=operacion_capital.numero_retencion;
                       reg_operacion.operacion_nombre  :='comision buen valor';
                       reg_operacion.monto_operacion :=  monto_operacion_bv;
                       reg_operacion.TRNFIN_ID:=v_id_comision_buenvalor;
                       reg_operacion.TRNF_TIPO:=OPERACION_DEBITO;  
                       reg_operacion.CODIGO_OPERACION:=v_cod_op_buenvalor;
                                                                                 
                       --insercion de la operacion 
                      insertar.infi_tb_207(reg_operacion);
                      --Actualizacion de los campos de monto total y monto comision en la operacion
                      UPDATE INFI_TB_204_ORDENES ORD SET ORD.ORDENE_PED_TOTAL=ORDENE_PED_TOTAL+monto_operacion_bv,ORD.ORDENE_PED_COMISIONES=ORD.ORDENE_PED_COMISIONES+monto_operacion_bv WHERE ORD.ORDENE_ID=operacion_capital.ORDENE_ID;
                   WHEN OTHERS THEN
                   --DBMS_OUTPUTput_line ('Se ha producido un error inesperado en el proceso de COMISION BUEN VALOR - Error: '||SQLERRM);                   utl_file.put_line(newfile,'Se ha producido un error inesperado en el proceso de COMISION BUEN VALOR  - Error: '||SQLERRM);                                              
                   utl_file.fclose(newfile);
                   RAISE_APPLICATION_ERROR(-20005,' Error Inesperado en el proceso de Calculo Comision Buen Valor. Detalle del Error: '||SQLERRM );
                                          
                   END;    
                   --Se reinicia la variable con el monto de la comision BUEN VALOR
                   monto_operacion_bv:=0;                              
               END LOOP;
              --Se recorre el cursor de las operaciones de capital que no han sido cobradas para la generacion de sus respectivas operaciones de comisiones BUEN VALOR                       
           END LOOP;

              
           utl_file.put_line(newfile,to_char(sysdate,'dd/mm/yyyy'||'  hh:mi:ss')||' --- Finalizado el proceso de Calculo COMISION BUEN VALOR --- ');
        COMMIT;               
  END COMISIONES_BUEN_VALOR;

PROCEDURE CIERRE_SISTEMA(p_fecha_precierre IN VARCHAR2,p_estatus_cierre IN NUMBER,p_usuario IN VARCHAR2,p_ip IN VARCHAR2,p_tipo_cierre VARCHAR2) IS 

    p_estatus_bv  INFI_TB_002_PARAM_TIPOS.PARVAL_VALOR%type;
    paso_en_ejecucion INFI_TB_906_CIERRE.PASO_EN_EJECUCION%type;
    p_indicador_falla INFI_TB_906_CIERRE.INDICADOR_FALLA%type;
    mensaje_error_sql varchar2(1000);
    --nombre_archivo varchar2:=;
    BEGIN                
    
        SELECT PASO_EN_EJECUCION,INDICADOR_FALLA,FECHA_SISTEMA INTO paso_en_ejecucion,p_indicador_falla,v_fecha_sistema FROM INFI_TB_906_CIERRE;  
             
        --Valida si el proceso de cierre se encuentra activo (Verificar si el proceso se debe validar en el PL/SQL o desde el JAVA)
        IF(p_estatus_cierre=PROCESO_INACTIVO)THEN  
          INDICADOR_EJECUCION:=0;      
          newfile := utl_file.fopen('RUTA_ARCHIVO_CIERRE','Cierre'||to_char(sysdate,'ddmmyyyy')||'.log','A');
          IF  utl_file.is_open(newfile) then
              utl_file.put_line(newfile,to_char(sysdate,'dd/mm/yyyy'||'  hh:mi:ss')||' - ***Proceso De Cierre No Se Encuentra Activo***, Maquina: '||p_ip);
              --DBMS_OUTPUTput_line ('***Proceso De Cierre No Se Encuentra Activo***');
              utl_file.fclose(newfile);
          END IF;          
        END IF;  
                  
        SELECT COUNT(EJECUCION_ID) AS PROCESO_ACTIVO INTO INDICADOR_PROCESO_ACTIVO FROM INFI_TB_807_PROCESOS WHERE FECHA_FIN IS NULL AND TRANSA_ID=PROC_CIERRE_SISTEMA;
        
        --Verifica si existe un proceso de Cierre en ejecucion
         IF(INDICADOR_PROCESO_ACTIVO>=1)THEN
            INDICADOR_EJECUCION:=0;
            newfile := utl_file.fopen('RUTA_ARCHIVO_CIERRE','Cierre'||to_char(sysdate,'ddmmyyyy')||'.log','A');
            IF utl_file.is_open(newfile) then                             
               utl_file.put_line(newfile,to_char(sysdate,'dd/mm/yyyy'||'  hh:mi:ss')||' - *** Existe un PROCESO DE CIERRE SISTEMA en Ejecucion Actualmente ***, Maquina: '||p_ip);             
               utl_file.fclose(newfile);
            END IF;                    
         END IF;        
                                   
        --Verifica si el existe un proceso de cierre previo con fallas
        IF(p_indicador_falla>0)THEN   
            IF(p_tipo_cierre=TIPO_CIERRE_AUTOMATICO)THEN
                        
                INDICADOR_EJECUCION:=0;
                v_user_id:=0;
                newfile := utl_file.fopen('RUTA_ARCHIVO_CIERRE','Cierre'||to_char(sysdate,'ddmmyyyy')||'.log','A');
                 
                IF utl_file.is_open(newfile) then              
                   utl_file.put_line(newfile,to_char(sysdate,'dd/mm/yyyy'||'  hh:mi:ss')||' - *** Existe un PROCESO DE CIERRE SISTEMA activo con fallas por lo cual no es posible iniciar un nuevo cierre de sistema de forma AUTOMATICA debe realizar el reprocesamiento manual del cierre de sistema***, Maquina: '||p_ip);                                
                   utl_file.fclose(newfile);
                              
                END IF;

            ELSIF(p_tipo_cierre=TIPO_CIERRE_MANUAL)THEN

                INDICADOR_EJECUCION:=1;
                
                newfile := utl_file.fopen('RUTA_ARCHIVO_CIERRE','Cierre'||to_char(sysdate,'ddmmyyyy')||'.log','A');
                IF utl_file.is_open(newfile) then              
                   utl_file.put_line(newfile,to_char(sysdate,'dd/mm/yyyy'||'  hh:mi:ss')||' - *** Reprocesamiento CIERRE SISTEMA MANUAL, Se encontro un proceso de cierre con fallas. Se realizara el reprocesamiento MANUAL del CIERRE SISTEMA.  Maquina: '||p_ip);
                                                                      
                   utl_file.fclose(newfile);                               
                END IF;                
                
            END IF;
        END IF;            
        
        IF(INDICADOR_EJECUCION=1) THEN
         
            
            
              IF(p_tipo_cierre=TIPO_CIERRE_MANUAL)THEN
                   BEGIN 
                   
                    SELECT MSC_USER_ID INTO v_user_id FROM MSC_USER WHERE UPPER(userid)=UPPER(p_usuario);
                   EXCEPTION
                   WHEN NO_DATA_FOUND THEN
                       newfile := utl_file.fopen('RUTA_ARCHIVO_CIERRE','Cierre'||to_char(sysdate,'ddmmyyyy')||'.log','A');
                       IF utl_file.is_open(newfile) then              
                           utl_file.put_line(newfile,to_char(sysdate,'dd/mm/yyyy'||'  hh:mi:ss')||'ERROR -20009 - *** Error en la busqueda de el ID de usuario'||p_usuario||'  Maquina: '||p_ip);                                                                              
                           utl_file.fclose(newfile);                                                          
                       END IF;            
                   RAISE_APPLICATION_ERROR(-20009,'Error en la busqueda de el ID de usuario '||p_usuario);               
                   END;        
               END IF;         
               --REGISTRO DEL PROCESO DE CIERRE SISTEMA       
               reg_proceso.TRANSA_ID:=PROC_CIERRE_SISTEMA;                      
               reg_proceso.USUARIO_ID:=v_user_id;               
               reg_proceso.FECHA_INICIO:=sysdate;               
               reg_proceso.FECHA_VALOR:=sysdate;
               insertar.infi_tb_807(reg_proceso,v_id_proceso);
               COMMIT;               

              newfile := utl_file.fopen('RUTA_ARCHIVO_CIERRE','Cierre'||to_char(sysdate,'ddmmyyyy')||'.log','A');
              IF utl_file.is_open(newfile) then
              utl_file.put_line(newfile,'   ****************** INICIO DE PROCESO CIERRE SISTEMA ******************    ');
              utl_file.put_line(newfile,'Inicio de Proceso Cierre Sistema.  Usuario: '||p_usuario||' Equipo: '||p_ip ||' Fecha de CIERRE SISTEMA: ' ||v_fecha_sistema||' - Fecha Calendario: ' ||to_char(sysdate,'dd/mm/yyyy'||'  hh:mi:ss'));
              END IF;    
              
              
                      
               --PROCESO CALCULO COMISION BUEN VALOR 
                IF(paso_en_ejecucion <= PROCESO_COMISION_BUEN_VALOR)  THEN             
                
                SELECT PARVAL_VALOR INTO p_estatus_bv FROM INFI_TB_002_PARAM_TIPOS WHERE PARTIP_NOMBRE_PARAMETRO =TRANSA_COMISION_BUEN_VALOR; 
                  
                 IF(p_estatus_bv=PROCESO_ACTIVO)THEN             
                 
                 UPDATE INFI_TB_906_CIERRE SET PASO_EN_EJECUCION=PROCESO_COMISION_BUEN_VALOR;    
                 COMMIT;                                                                          
                 COMISIONES_BUEN_VALOR(p_fecha_precierre);                                                       
                     --Actualizacion del paso en ejecucion, pasar al siguiente paso                                 
                     --paso_en_ejecucion:=2; SE COLOCA EL VALOR DE LA CONSTANTE DEL SIGUIENTE PASO A EJECUTAR                                                                     
                 ELSE                 
                 utl_file.put_line(newfile,to_char(sysdate,'dd/mm/yyyy'||'  hh:mi:ss')||' El proceso de Calculo comision Buen Valor NO se encuentra Activo');                                   
                 END IF;             
                
                END IF;                 
                --ACTUALIZACION DE FECHA SISTEMA, ESTATUS_PROCESO Y PASO EN EJECUCION (EN CASO DE FINALIZAR CORRECTAMENTE EL CIERRE)
                UPDATE INFI_TB_906_CIERRE SET FECHA_SISTEMA=(SELECT FECHA_PRE_CIERRE FROM INFI_TB_906_CIERRE),CIERRE_ACTIVO=PROCESO_INACTIVO,PASO_EN_EJECUCION=INICIO_PROCESO,DIAS_TRANSCURRIDOS=0;                                                         
                COMMIT;
                utl_file.put_line(newfile,' Fecha de CIERRE SISTEMA: ' ||v_fecha_sistema||' ****************** FIN PROCESO CIERRE SISTEMA ****************** '||' Fecha Calendario'||to_char(sysdate,'dd/mm/yyyy'||'  hh:mi:ss'));               
                utl_file.fclose(newfile);                        
                UPDATE INFI_TB_807_PROCESOS SET FECHA_FIN=SYSDATE WHERE EJECUCION_ID=v_id_proceso;
                    
        END IF;
        
                    
    EXCEPTION 
    WHEN OTHERS THEN
    mensaje_error_sql:=SQLERRM;
    UPDATE INFI_TB_906_CIERRE SET INDICADOR_FALLA=1;
    UPDATE INFI_TB_807_PROCESOS SET FECHA_FIN=SYSDATE,DESC_ERROR='ERROR EN PROCESO CIERRE SISTEMA - '||mensaje_error_sql WHERE EJECUCION_ID=v_id_proceso;
    COMMIT;
     newfile := utl_file.fopen('RUTA_ARCHIVO_CIERRE','Cierre'||to_char(sysdate,'ddmmyyyy')||'.log','A');
             
      IF utl_file.is_open(newfile) then
          utl_file.put_line(newfile,to_char(sysdate,'dd/mm/yyyy'||'  hh:mi:ss')||' ERROR EN EL PROCESO DE CIERRE DE SISTEMA. '||SQLERRM);
          utl_file.fclose(newfile);                        
      END IF;    
    
    END CIERRE_SISTEMA;

        
    PROCEDURE OBTENER_ARCHIVO_CIERRE
     (p_nombre_archivo IN VARCHAR2, 
      p_archivo        OUT BLOB,
      p_ruta_archivo IN VARCHAR2         -- Archivo Log de Cierre de Sistema --        
     ) IS  
     
          v_bfile    BFILE;  -- Ruta del archivo a ser cargado
          v_size binary_integer := 0; 
          book_file_exists   BOOLEAN := FALSE;
      
      
       BEGIN      
     
          DBMS_LOB.CreateTemporary(p_archivo,TRUE);
          v_bfile := BFILENAME(p_ruta_archivo, p_nombre_archivo);
                 
           book_file_exists := DBMS_LOB.FILEEXISTS( v_bfile ) = 1;
           IF book_file_exists THEN
               v_size := dbms_lob.getlength(v_bfile); 
               IF(v_size > 0) THEN
                 Dbms_Lob.Fileopen(v_bfile,Dbms_Lob.File_Readonly);
                 dbms_lob.open (p_archivo, dbms_lob.lob_readwrite);
                 Dbms_Lob.Loadfromfile(p_archivo, v_bfile, v_size);
                Dbms_Lob.Fileclose(v_bfile);
                Dbms_Lob.close(p_archivo);                
               END IF;  
           ELSE
                p_archivo := NULL;  --No existe el archivo 
           END IF;    
           
     END OBTENER_ARCHIVO_CIERRE;      
    

END PROCESO_CIERRE;
/


CREATE OR REPLACE PACKAGE BODY ADM_INFI.ReglaCanalesDigitales IS
/******************************************************************************
   NAME:       ReglaCanalesDigitales
   PURPOSE:    Conjunto de Funciones y Procedimientos que apoyan a los Canales
               Electronicos para conocer las condiciones o caracteristicas de
               la operativa del Producto mediante la U nidad de Inversion y el
               Bloter asociado.     
               
   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        06/07/2021             1. Created por Inng. Alexander Rincón
******************************************************************************/

/* Validar si la solicitud esta dentro del horario 
   Planificado mediate el Bloter de la Unidad de Inversión  
 */
  FUNCTION ValidacionHorario(fbloter_id in infi_tb_102_bloter.BLOTER_ID%TYPE,fundinv_id IN infi_tb_106_unidad_inversion.UNDINV_ID%type) RETURN NUMBER IS
    Horario number(1);
  BEGIN
    SELECT 1 
    INTO   Horario
    FROM  infi_tb_107_ui_blotter uib
    WHERE           --VALIDACION DE HORARIO DE TOMA DE ORDENES - ULTIMO DIA
    ((uiblot_pedido_fe_fin =TO_DATE (TO_CHAR(SYSDATE,'DD/MM/RRRR'), 'DD/MM/RRRR')
        AND TO_DATE(SUBSTR(TO_CHAR(uib.uiblot_horario_desde_ult_dia, 'DD/MM/RRRR hh24:mi:ss'),12,19),'hh24:mi:ss')<=TO_DATE(to_char(sysdate,'hh24:mi:ss'),'hh24:mi:ss')
        AND TO_DATE(SUBSTR(TO_CHAR(uib.uiblot_horario_hasta_ult_dia, 'DD/MM/RRRR hh24:mi:ss'),12,19),'hh24:mi:ss') >=TO_DATE(to_char(sysdate,'hh24:mi:ss'),'hh24:mi:ss'))
           --VALIDACION DE HORARIO DE TOMA DE ORDENES - PRIMEROS DIAS
    OR (TRUNC(UIBLOT_PEDIDO_FE_INI)<=TO_DATE (TO_CHAR(SYSDATE,'DD/MM/RRRR'), 'DD/MM/RRRR') AND (TRUNC(uiblot_pedido_fe_fin) >TO_DATE (TO_CHAR(SYSDATE,'DD/MM/RRRR'), 'DD/MM/RRRR'))
           --OR (uiblot_pedido_fe_fin >TO_DATE (TO_CHAR(SYSDATE,'DD/MM/RRRR'), 'DD/MM/RRRR')
        AND TO_DATE(SUBSTR(TO_CHAR(uiblot_horario_desde, 'DD/MM/RRRR hh24:mi:ss'),12,19),'hh24:mi:ss') <= TO_DATE(to_char(sysdate,'hh24:mi:ss'),'hh24:mi:ss'))
    AND TO_DATE(SUBSTR(TO_CHAR(uiblot_horario_hasta, 'DD/MM/RRRR hh24:mi:ss'),12,19),'hh24:mi:ss') >= TO_DATE(to_char(sysdate,'hh24:mi:ss'),'hh24:mi:ss'))
    AND uib.bloter_id = 42
    AND uib.undinv_id = fundinv_id;
    
    RETURN Horario;
  END ValidacionHorario;


END ReglaCanalesDigitales;
/


CREATE OR REPLACE PACKAGE BODY ADM_INFI.test_parameter
IS


PROCEDURE MyProcedure(obj IN  ADM_INFI.OBJ_PRUEBA)
IS

BEGIN

    DBMS_OUTPUT.put_line ('NOMBRE '||obj.NOMBRE);
    DBMS_OUTPUT.put_line ('CED '||obj.CED);
--  for i in lista.first .. lista.last loop
--    --DBMS_OUTPUT.put_line (lineasProcesos(i));
--    DBMS_OUTPUT.put_line ('NOMBRE '||lista(i).NOMBRE);
--    DBMS_OUTPUT.put_line ('CED '||lista(i).CED);
--        BEGIN
--        INSERT INTO SOLICITUDES_DICOM (NRO_SOLICITUD,NRO_CTA_NACIONAL) VALUES (lista(i).NOMBRE,lista(i).CED);
--        COMMIT;
--    END;
--    --DBMS_OUTPUT.put_line ('lineasProcesos(v_index).USUARIO_ID '||lineasProcesos(i).USUARIO_ID);
--    --DBMS_OUTPUT.put_line ('lineasProcesos(v_index).FECHA_INICIO '||lineasProcesos(i).FECHA_INICIO);
--    --DBMS_OUTPUT.put_line ('lineasProcesos(v_index).FECHA_FIN '||lineasProcesos(i).FECHA_FIN);
--    --DBMS_OUTPUT.put_line ('lineasProcesos(v_index).DESC_ERROR '||lineasProcesos(i).DESC_ERROR);
--    --DBMS_OUTPUT.put_line ('lineasProcesos(v_index).FECHA_VALOR '||lineasProcesos(i).FECHA_VALOR);
--    --DBMS_OUTPUT.put_line ('lineasProcesos(v_index).CICLO_EJECUCION_ID '||lineasProcesos(i).CICLO_EJECUCION_ID);
--  end loop;

  
END;  
END;
/


CREATE OR REPLACE PACKAGE BODY ADM_INFI.VALIDACION
IS
-- 
-- PAQUETE PARA CALIDACIONES DE LOS CANALES DE CLAVENET
-- Person               Date        Comments
-- ---------            ------      ------------------------------------------      
-- ALEXANDER RINCON     21/07/2013  Funciones y Procedimientos para calidaciones 
--                                  en el canal de Clavenet
   PROCEDURE SOLICITUD_CANAL 
    ( fced_rif  IN varchar2,
      fcanal    IN varchar2,
      ffecha_inicio  IN varchar2,
      ffecha_fin     IN varchar2,
      ffecha_registro OUT date,
      fnum_solicitud  OUT varchar2,
      fexiste         OUT varchar2,
      ferror          OUT varchar2)   IS 
-- Variables Locales
      f_cedula_rif     solicitudes_sitme.ced_rif_cliente%TYPE;

   BEGIN
     fexiste := '0';
     IF UPPER(fcanal) = 'I' THEN
        f_cedula_rif := to_number(substr(fced_rif,2));
        SELECT MAX(O.ordene_ped_fe_orden),MAX(O.ordene_id)
        INTO   ffecha_registro,fnum_solicitud
        FROM   INFI_TB_204_ORDENES O
        WHERE  O.transa_id = 'TOMA_ORDEN'
        AND    O.client_id = (SELECT C.client_id
                              FROM   INFI_TB_201_CTES C
                              WHERE  C.tipper_id = substr(fced_rif,1,1)
                              AND    C.client_cedrif = f_cedula_rif)
        AND    O.ordsta_id IN ('REGISTRADA','ENVIADA')
        AND    O.ordene_ped_fe_orden between to_date(ffecha_inicio,'YYYY-MM-DD') and to_date(ffecha_fin,'YYYY-MM-DD')
        AND    O.tipo_producto_id IN ('SUB_DIV_P','SUB_DIVISA');
        fexiste := '1';
      ELSIF UPPER(fcanal) = 'C' THEN
            f_cedula_rif := substr(fced_rif,1,1)
                            ||substr(fced_rif,3)
                            ||infi_getdigvrf(substr(fced_rif,1,1)||substr(fced_rif,8));--Digito verificador
            SELECT max(decode(S.estatus,'ESPERA RECAUDOS',S.fecha_recepcion_rec,S.fecha_registro)),max(S.id_orden)
            INTO   ffecha_registro,fnum_solicitud
            FROM   SOLICITUDES_SITME S 
            WHERE  S.ced_rif_cliente = f_cedula_rif
            AND    S.fecha_recepcion_rec between to_date(ffecha_inicio,'YYYY-MM-DD') and to_date(ffecha_fin,'YYYY-MM-DD')
            AND    S.estatus IN ('REGISTRADA','ESPERA RECAUDOS');
            fexiste := '1';

      ELSE 
        fexiste := '2'; -- Parametros errados
        ferror := 'Error en Parámetros de Entrada del Procedimiento';
     END IF; 
   --- NO existe La solicitud --
     IF ffecha_registro IS NULL AND fnum_solicitud IS  NULL THEN
        fexiste := '0';
     END IF;
   --- Error en La silicitud -- 
     EXCEPTION
         WHEN OTHERS THEN
              fexiste := '2';
              ferror := SQLERRM;
   END SOLICITUD_CANAL; 

END VALIDACION;
/


CREATE PUBLIC SYNONYM INFI_BCV FOR ADM_INFI.INFI_BCV;


CREATE PUBLIC SYNONYM INSERTAR FOR ADM_INFI.INSERTAR;


CREATE PUBLIC SYNONYM MENUDEO FOR ADM_INFI.MENUDEO;


CREATE PUBLIC SYNONYM PARAMETROS_CANAL_EXTERNO FOR ADM_INFI.PARAMETROS_CANAL_EXTERNO;


CREATE PUBLIC SYNONYM PKGCURSORTYPE FOR ADM_INFI.PKGCURSORTYPE;


CREATE PUBLIC SYNONYM PK_INFI_CRUD FOR ADM_INFI.PK_INFI_CRUD;


CREATE PUBLIC SYNONYM PK_INFI_LOGIC_DICOM FOR ADM_INFI.PK_INFI_LOGIC_DICOM;


CREATE PUBLIC SYNONYM PK_INFI_LOGIC_DICOM_F2 FOR ADM_INFI.PK_INFI_LOGIC_DICOM_F2;


CREATE PUBLIC SYNONYM PROCESO_CIERRE FOR ADM_INFI.PROCESO_CIERRE;


CREATE PUBLIC SYNONYM VALIDACION FOR ADM_INFI.VALIDACION;


GRANT EXECUTE ON  ADM_INFI.INFI_BCV TO EXPCMN;

GRANT EXECUTE ON  ADM_INFI.PKGCURSORTYPE TO TF_INFI;

GRANT EXECUTE ON  ADM_INFI.INSERTAR TO USU_INFI;

GRANT EXECUTE ON  ADM_INFI.MENUDEO TO USU_INFI;

GRANT EXECUTE ON  ADM_INFI.PARAMETROS_CANAL_EXTERNO TO USU_INFI;

GRANT EXECUTE ON  ADM_INFI.PKGCURSORTYPE TO USU_INFI;

GRANT EXECUTE ON  ADM_INFI.VALIDACION TO USU_INFI;

GRANT EXECUTE ON  ADM_INFI.INFI_BCV TO USU_INFI;

GRANT EXECUTE ON  ADM_INFI.PK_INFI_CRUD_F2 TO USU_INFI;

GRANT EXECUTE ON  ADM_INFI.PK_INFI_LOGIC_DICOM TO USU_INFI;

GRANT EXECUTE ON  ADM_INFI.PK_INFI_LOGIC_DICOM_F2 TO USU_INFI;

GRANT EXECUTE ON  ADM_INFI.PROCESO_CIERRE TO USU_INFI;

GRANT EXECUTE ON  ADM_INFI.PK_INFI_CRUD TO USU_INFI;

